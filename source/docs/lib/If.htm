<!DOCTYPE HTML>
<html lang="en">
<head>
<title>If - Syntax &amp; Usage | AutoHotkey v2</title>
<meta name="description" content="The If statement specifies one or more statements to execute if an expression evaluates to true." />
<meta name="ahk:equiv-v1" content="lib/IfExpression.htm" />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>If</h1>
<p>Specifies one or more <a href="../Concepts.htm#statement">statements</a> to execute if an <a href="../Variables.htm#Expressions">expression</a> evaluates to true.</p>
<pre class="Syntax"><span class="func">If</span> <i>Expression</i>
{
    <i>Statements</i>
}</pre>

<h2 id="Remarks">Remarks</h2>
<p>If the <em>If</em> statement's expression evaluates to true (which is any result other than an empty string or the number 0), the line or <a href="Block.htm">block</a> underneath it is executed. Otherwise, if there is a corresponding <a href="Else.htm">Else</a> statement, execution jumps to the line or block underneath it.</p>
<p>If an <em>If</em> owns more than one line, those lines must be enclosed in braces (to create a <a href="Block.htm">block</a>). However, if only one line belongs to an <em>If</em>, the braces are optional. See the examples at the bottom of this page.</p>
<p>The space after <code>if</code> is optional if the expression starts with an open-parenthesis, as in <code>if(expression)</code>.</p>
<p id="otb">The <a href="Block.htm#otb">One True Brace (OTB) style</a> may optionally be used. For example:</p>
<pre>if (x &lt; y) {
    <em>; ...</em>
}
if WinExist("Untitled - Notepad") {
    WinActivate
}
if IsDone {
    <em>; ...</em>
} else {
    <em>; ...</em>
}</pre>
<p>Unlike an <em>If</em> statement, an <a href="Else.htm">Else</a> statement supports any type of statement immediately to its right.</p>

<h2 id="Related">Related</h2>
<p><a href="../Variables.htm#Expressions">Expressions</a>, <a href="../Variables.htm#ternary">Ternary operator (a?b:c)</a>, <a href="Block.htm">Blocks</a>, <a href="Else.htm">Else</a>, <a href="While.htm">While-loop</a></p>

<h2 id="Examples">Examples</h2>
<div class="ex" id="ExOne">
<p><a class="ex_number" href="#ExOne"></a> If <var>A_Index</var> is greater than 100, return.</p>
<pre>if (A_Index &gt; 100)
    return</pre>
</div>

<div class="ex" id="ExMultiple">
<p><a class="ex_number" href="#ExMultiple"></a> If the result of <code>A_TickCount - StartTime</code> is greater than the result of <code>2*MaxTime + 100</code>, show "Too much time has passed." and terminate the script.</p>
<pre>if (A_TickCount - StartTime &gt; 2*MaxTime + 100)
{
    MsgBox "Too much time has passed."
    ExitApp
}</pre>
</div>

<div class="ex" id="ExComplex">
<p><a class="ex_number" href="#ExComplex"></a> This example is executed as follows:</p>
<ol>
  <li>If <var>Color</var> is the word "Blue" or "White":
    <ol>
      <li>Show "The color is one of the allowed values.".</li>
      <li>Terminate the script.</li>
    </ol>
  </li>
  <li>Otherwise if <var>Color</var> is the word "Silver":
    <ol>
      <li>Show "Silver is not an allowed color.".</li>
      <li>Stop further checks.</li>
    </ol>
  </li>
  <li>Otherwise:
    <ol>
      <li>Show "This color is not recognized.".</li>
      <li>Terminate the script.</li>
    </ol>
  </li>
</ol>
<pre>if (Color = "Blue" or Color = "White")
{
    MsgBox "The color is one of the allowed values."
    ExitApp
}
else if (Color = "Silver")
{
    MsgBox "Silver is not an allowed color."
    return
}
else
{
    MsgBox "This color is not recognized."
    ExitApp
}</pre>
</div>
<div class="ex" id="ExMultiStatement">
<p><a class="ex_number" href="#ExMultiStatement"></a> A single <a href="../Variables.htm#comma">multi-statement</a> line does not need to be enclosed in braces.</p>
<pre>MyVar := 3
if (MyVar &gt; 2)
    MyVar++, MyVar := MyVar - 4, MyVar .= " test"
MsgBox MyVar  <em>; Reports "0 test".</em>
</pre>
</div>

<div class="ex" id="ExIfBetween">
<p><a class="ex_number" href="#ExIfBetween"></a> Similar to AutoHotkey v1's <a href="https://www.autohotkey.com/docs/v1/lib/IfBetween.htm">If Var [not] between Lower and Upper</a>, the following examples check whether a <a href="../Variables.htm">variable's</a> contents are numerically or alphabetically between two values (inclusive).</p>
<p>Checks whether <var>var</var> is in the range 1 to 5:</p>
<pre>if (var &gt;= 1 and var &lt;= 5)
    MsgBox var " is in the range 1 to 5, inclusive."</pre>
<p>Checks whether <var>var</var> is in the range 0.0 to 1.0:</p>
<pre>if not (var &gt;= 0.0 and var &lt;= 1.0)
    MsgBox var " is not in the range 0.0 to 1.0, inclusive."</pre>
<p>Checks whether <var>var</var> is between <var>VarLow</var> and <var>VarHigh</var> (inclusive):</p>
<pre>if (var &gt;= VarLow and var &lt;= VarHigh)
    MsgBox var " is between " VarLow " and " VarHigh "."</pre>
<p>Checks whether <var>var</var> is alphabetically between the words blue and red (inclusive):</p>
<pre>if (StrCompare(var, "blue") &gt;= 0) and (StrCompare(var, "red") &lt;= 0)
    MsgBox var " is alphabetically between the words blue and red."</pre>
<p>Allows the user to enter a number and checks whether it is in the range 1 to 10:</p>
<pre>LowerLimit := 1
UpperLimit := 10
IB := InputBox("Enter a number between " LowerLimit " and " UpperLimit)
if not (IB.Value &gt;= LowerLimit and IB.Value &lt;= UpperLimit)
    MsgBox "Your input is not within the valid range."</pre>
</div>

<div class="ex" id="ExIfInContains">
<p><a class="ex_number" href="#ExIfInContains"></a> Similar to AutoHotkey v1's <a href="https://www.autohotkey.com/docs/v1/lib/IfIn.htm">If Var [not] in/contains MatchList</a>, the following examples check whether a <a href="../Variables.htm">variable's</a> contents match one of the items in a list.</p>
<p>Checks whether <var>var</var> is the file extension exe, bat or com:</p>
<pre>if (var ~= "i)\A(exe|bat|com)\z")
    MsgBox "The file extension is an executable type."</pre>
<p>Checks whether <var>var</var> is the prime number 1, 2, 3, 5, 7 or 11:</p>
<pre>if (var ~= "\A(1|2|3|5|7|11)\z")
    MsgBox var " is a small prime number."</pre>
<p>Checks whether <var>var</var> contains the digit 1 or 3:</p>
<pre>if (var ~= "1|3")
    MsgBox "Var contains the digit 1 or 3 (Var could be 1, 3, 10, 21, 23, etc.)"</pre>
<p>Checks whether <var>var</var> is one of the items in <var>MyItemList</var>:</p>
<pre><em>; Uncomment the following line if MyItemList contains RegEx chars except |
; MyItemList := RegExReplace(MyItemList, "[\Q\.*?+[{()^$\E]", "\$0")</em>
if (var ~= "i)\A(" MyItemList ")\z")
    MsgBox var " is in the list."</pre>
<p>Allows the user to enter a string and checks whether it is the word yes or no:</p>
<pre>IB := InputBox("Enter YES or NO")
if not (IB.Value ~= "i)\A(yes|no)\z")
    MsgBox "Your input is not valid."</pre>
<p>Checks whether <var>active_title</var> contains "Address List.txt" or "Customer List.txt" and checks whether it contains "metapad" or "Notepad":</p>
<pre>active_title := WinGetTitle("A")
if (active_title ~= "i)Address List\.txt|Customer List\.txt")
    MsgBox "One of the desired windows is active."
if not (active_title ~= "i)metapad|Notepad")
    MsgBox "But the file is not open in either Metapad or Notepad."</pre>
</div>

</body>
</html>
