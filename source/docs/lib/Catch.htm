<!DOCTYPE HTML>
<html lang="en">
<head>
<title>Catch - Syntax &amp; Usage | AutoHotkey v2</title>
<meta name="description" content="The Catch statement specifies one or more statements to execute if a value or error is thrown during execution of a Try statement." />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>Catch</h1>

<p>Specifies one or more <a href="../Concepts.htm#statement">statements</a> to execute if a value or error is thrown during execution of a <a href="Try.htm">Try</a> statement.</p>

<pre class="Syntax" style="line-height: 120%"><span class="func">Catch</span> <span class="optional">ErrorClass</span> <span class="optional"><span class="func">as</span> OutputVar</span>
{
    <i>Statements</i>
}</pre>
<h2 id="Parameters">Parameters</h2>
<dl>

  <dt>ErrorClass</dt>
  <dd>
    <p>Type: <a href="Class.htm">Class</a></p>
    <p>The class of value that should be caught, such as <code>Error</code>, <code>TimeoutError</code> or <code>MyCustomError</code>. This can also be a comma-delimited list of classes. Classes must be specified by their exact full name and not an arbitrary expression, as the <a href="Class.htm#Prototype">Prototype</a> of each class is resolved at load time. Any <a href="../ObjList.htm">built-in</a> or <a href="../Objects.htm#Custom_Classes">user-defined</a> class can be used, even if it does not derive from <a href="Error.htm">Error</a>.</p>
    <p>If no classes are specified, the default is <code>Error</code>.</p>
    <p>To catch anything at all, use <code>catch Any</code>.</p>
    <p>A load-time error is displayed if an invalid class name is used, or if a class is inaccessible due to the presence of a local variable with the same name.</p>
  </dd>

  <dt>OutputVar</dt>
  <dd>
    <p>Type: <a href="../Concepts.htm#variables">Variable</a></p>
    <p>The output variable in which to store the thrown value, which is typically an <a href="Error.htm">Error object</a>. This cannot be a <a href="../Language.htm#dynamic-variables">dynamic variable</a>.</p>
    <p>If omitted, the thrown value cannot be accessed directly, but can still be re-thrown by using <a href="Throw.htm">Throw</a> with no parameter.</p>
  </dd>

  <dt><i>Statements</i></dt>
  <dd>
    <p>The <a href="../Concepts.htm#statement">statements</a> to execute if a value or error is thrown.</p>
    <p>Braces are generally not required if only a single statement is used. For details, see <a href="Block.htm">{...} (block)</a>.</p>
  </dd>

</dl>

<h2 id="Remarks">Remarks</h2>
<p>Multiple <em>Catch</em> statements can be used one after the other, with each one specifying a different class (or multiple classes). If the value is not an instance of any of the listed classes, it is not caught by this <em>Try-Catch</em>, but might be caught by one further up the call stack.</p>
<p>Every use of <em>Catch</em> must belong to (be associated with) a <a href="Try.htm">Try</a> statement above it. A <em>Catch</em> always belongs to the nearest unclaimed <em>Try</em> statement above it unless a <a href="Block.htm">block</a> is used to change that behavior.</p>
<p>The parameter list may optionally be enclosed in parentheses, in which case the space or tab after <code>catch</code> is optional.</p>
<p><em>Catch</em> may optionally be followed by <a href="Else.htm">Else</a>, which is executed if no exception was thrown within the associated <em>Try</em> block.</p>
<p>The <a href="Block.htm#otb">One True Brace (OTB) style</a> may optionally be used. For example:</p>
<pre>try {
    ...
} catch Error {
    ...
}</pre>
<p>Load-time errors cannot be caught, since they occur before the <em>try</em> statement is executed.</p>

<h2 id="Related">Related</h2>
<p><a href="Try.htm">Try</a>, <a href="Throw.htm">Throw</a>, <a href="Error.htm">Error Object</a>, <a href="Else.htm">Else</a>, <a href="Finally.htm">Finally</a>, <a href="Block.htm">Blocks</a>, <a href="OnError.htm">OnError</a></p>

<h2 id="Examples">Examples</h2>
<p>See <a href="Try.htm#Examples">Try</a>.</p>

</body>
</html>
