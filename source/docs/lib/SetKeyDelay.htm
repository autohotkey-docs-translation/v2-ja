<!DOCTYPE HTML>
<html lang="en">
<head>
<title>SetKeyDelay - Syntax &amp; Usage | AutoHotkey v2</title>
<meta name="description" content="The SetKeyDelay function sets the delay that will occur after each keystroke sent by the Send or ControlSend functions." />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>SetKeyDelay</h1>

<p>Sets the delay that will occur after each keystroke sent by <a href="Send.htm">Send</a> or <a href="ControlSend.htm">ControlSend</a>.</p>

<pre class="Syntax"><span class="func">SetKeyDelay</span> <span class="optional">Delay, PressDuration, "Play"</span></pre>
<h2 id="Parameters">Parameters</h2>
<dl>

  <dt>Delay</dt>
  <dd>
    <p>Type: <a href="../Concepts.htm#numbers">Integer</a></p>
    <p>If omitted, the current delay is retained. Otherwise, specify the time in milliseconds. Specify -1 for no delay at all or 0 for the smallest possible delay (however, if the <em>Play</em> parameter is present, both 0 and -1 produce no delay).</p>
  </dd>

  <dt id="dur">PressDuration</dt>
  <dd>
    <p>Type: <a href="../Concepts.htm#numbers">Integer</a></p>
    <p>Certain games and other specialized applications may require a delay inside each keystroke; that is, after the press of the key but before its release.</p>
    <p>If omitted, the current press duration is retained. Otherwise, specify the time in milliseconds. Specify -1 for no delay at all or 0 for the smallest possible delay (however, if the <em>Play</em> parameter is present, both 0 and -1 produce no delay).</p>
    <p class="note"><strong>Note:</strong> <em>PressDuration</em> also produces a delay after any change to the modifier key state (Ctrl, Alt, Shift, and Win) needed to support the keys being sent.</p>
  </dd>

  <dt>Play</dt>
  <dd>
    <p>Type: <a href="../Concepts.htm#strings">String</a></p>
    <p>If blank or omitted, the delay and press duration are applied to the traditional SendEvent mode. Otherwise, specify the word <strong>Play</strong> to apply both to the <a href="Send.htm#SendPlayDetail">SendPlay mode</a>. If a script never uses this parameter, both are always -1 for SendPlay.</p>
  </dd>

</dl>

<h2 id="Remarks">Remarks</h2>
<p>If SetKeyDelay is not used, the default delay is 10 for the traditional SendEvent mode and -1 for <a href="Send.htm#SendPlayDetail">SendPlay mode</a>. The default press duration is -1 for both modes.</p>
<p>SetKeyDelay is not obeyed by <a href="Send.htm#SendInputDetail">SendInput</a>; there is no delay between keystrokes in that mode. This same is true for <a href="Send.htm">Send</a> when <a href="SendMode.htm">SendMode Input</a> is in effect.</p>
<p>A short delay (sleep) is done automatically after every keystroke sent by <a href="Send.htm">Send</a> or <a href="ControlSend.htm">ControlSend</a>. This is done to improve the reliability of scripts because a window sometimes can't keep up with a rapid flood of keystrokes.</p>
<p>During the delay (sleep), the current thread is made <a href="../misc/Threads.htm#Interrupt">uninterruptible</a>.</p>
<p>Due to the granularity of the OS's time-keeping system, delays might be rounded up to the nearest multiple of 10 or 15.</p>
<p>For Send/SendEvent mode, a delay of 0 internally executes a Sleep(0), which yields the remainder of the script's timeslice to any other process that may need it. If there is none, Sleep(0) will not sleep at all. By contrast, a delay of -1 will never sleep.  For better reliability, 0 is recommended as an alternative to -1.</p>
<p>When the delay is set to -1, a script's process-priority becomes an important factor in how fast it can send keystrokes when using the traditional <a href="SendMode.htm">SendEvent mode</a>. To raise a script's priority, use <code><a href="ProcessSetPriority.htm">ProcessSetPriority</a> "High"</code>. Although this typically causes keystrokes to be sent faster than the <a href="WinActivate.htm">active window</a> can process them, the system automatically buffers them. Buffered keystrokes continue to arrive in the target window after the <a href="Send.htm">Send</a> function completes (even if the window is no longer active). This is usually harmless because any subsequent keystrokes sent to the same window get queued up behind the ones already in the buffer.</p>
<p>The built-in variable <strong>A_KeyDelay</strong> contains the current setting of <em>Delay</em> for Send/SendEvent mode. <strong>A_KeyDuration</strong> contains the setting for <em>PressDuration</em>, while <strong>A_KeyDelayPlay</strong> and <strong>A_KeyDurationPlay</strong> contain the settings for <a href="Send.htm#SendPlayDetail">SendPlay</a>.</p>
<p>Every newly launched <a href="../misc/Threads.htm">thread</a> (such as a <a href="../Hotkeys.htm">hotkey</a>, <a href="Menu.htm">custom menu item</a>, or <a href="SetTimer.htm">timed</a> subroutine) starts off fresh with the default setting for this function. That default may be changed by using this function during <a href="../Scripts.htm#auto">script startup</a>.</p>
<h2 id="Related">Related</h2>
<p><a href="Send.htm">Send</a>, <a href="ControlSend.htm">ControlSend</a>, <a href="SendMode.htm">SendMode</a>, <a href="SetMouseDelay.htm">SetMouseDelay</a>, <a href="SetControlDelay.htm">SetControlDelay</a>, <a href="SetWinDelay.htm">SetWinDelay</a>, <a href="Click.htm">Click</a></p>
<h2 id="Examples">Examples</h2>
<div class="ex" id="ExBasic">
<p><a class="ex_number" href="#ExBasic"></a> Causes the smallest possible delay to occur after each keystroke sent via <a href="Send.htm">Send</a> or <a href="ControlSend.htm">ControlSend</a>.</p>
<pre>SetKeyDelay 0</pre>
</div>

</body>
</html>
