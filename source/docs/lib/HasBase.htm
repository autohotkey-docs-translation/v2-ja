<!DOCTYPE HTML>
<html lang="en">
<head>
<title>HasBase - Syntax &amp; Usage | AutoHotkey v2</title>
<meta name="description" content="The HasBase function returns a non-zero number if the specified value is derived from the specified base object." />
<meta name="ahk:equiv-v1" content="index.htm" />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>HasBase</h1>

<p>Returns a non-zero number if the specified value is derived from the specified base object.</p>

<pre class="Syntax">HasBase := <span class="func">HasBase</span>(Value, BaseObj)</pre>
<h2 id="Parameters">Parameters</h2>
<dl>
  <dt>Value</dt>
  <dd>
    <p>Any value, of any type.</p>
  </dd>
  <dt>BaseObj</dt>
  <dd>
    <p>Type: <a href="../Concepts.htm#objects">Object</a></p>
    <p>The potential base object to test.</p>
  </dd>
</dl>

<h2 id="Return_Value">Return Value</h2>
<p>Type: <a href="../Concepts.htm#boolean">Integer (boolean)</a></p>
<p>This function returns 1 (true) if <em>BaseObj</em> is in <em>Value</em>'s chain of base objects, otherwise 0 (false).</p>

<h2 id="Remarks">Remarks</h2>
<p>The following code is roughly equivalent to this function:</p>
<pre>MyHasBase(Value, BaseObj) {
    b := Value
    while b := ObjGetBase(b)
        if b = BaseObj
            return true
    return false
}</pre>
<p>For example, <code>HasBase(Obj, Array.Prototype)</code> is true if <em>Obj</em> is an instance of <a href="Array.htm">Array</a> or any derived class. This the same check performed by <code>Obj is Array</code>; however, instances can be based on other instances, whereas <code>is</code> requires a <a href="Class.htm">Class</a>.</p>
<p>HasBase accepts both objects and <a href="../Objects.htm#primitive">primitive values</a>. For example, <code>HasBase(1, 0.base)</code> returns true.</p>

<h2 id="Related">Related</h2>
<p><a href="../Objects.htm">Objects</a>, <a href="Object.htm#Base">Obj.Base</a>, <a href="Any.htm#GetBase">ObjGetBase</a>, <a href="HasMethod.htm">HasMethod</a>, <a href="HasProp.htm">HasProp</a></p>

<h2 id="Examples">Examples</h2>
<div class="ex" id="ExBasic">
<p><a class="ex_number" href="#ExBasic"></a> Illustrates the use of this function.</p>
<pre>
thebase := {key: "value"}
derived := {base: thebase}
MsgBox HasBase(thebase, derived) <em>; 0</em>
MsgBox HasBase(derived, thebase) <em>; 1</em>
</pre>
</div>

</body>
</html>
