<!DOCTYPE HTML>
<html lang="en">
<head>
<title>IniRead - Syntax &amp; Usage | AutoHotkey v2</title>
<meta name="description" content="The IniRead function reads a value, section or list of section names from a standard format .ini file." />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>IniRead</h1>

<p>Reads a value, section or list of section names from a standard format .ini file.</p>

<pre class="Syntax">Value := <span class="func">IniRead</span>(Filename, Section, Key <span class="optional">, Default</span>)
Section := <span class="func">IniRead</span>(Filename, Section)
SectionNames := <span class="func">IniRead</span>(Filename)</pre>
<h2 id="Parameters">Parameters</h2>
<dl>

  <dt>Filename</dt>
  <dd>
    <p>Type: <a href="../Concepts.htm#strings">String</a></p>
    <p>The name of the .ini file, which is assumed to be in <a href="../Variables.htm#WorkingDir">A_WorkingDir</a> if an absolute path isn't specified.</p>
  </dd>

  <dt>Section</dt>
  <dd>
    <p>Type: <a href="../Concepts.htm#strings">String</a></p>
    <p>The section name in the .ini file, which is the heading phrase that appears in square brackets (do not include the brackets in this parameter).</p>
  </dd>

  <dt>Key</dt>
  <dd>
    <p>Type: <a href="../Concepts.htm#strings">String</a></p>
    <p>The key name in the .ini file.</p>
  </dd>

  <dt>Default</dt>
  <dd>
    <p>Type: <a href="../Concepts.htm#strings">String</a></p>
    <p>If omitted, an <a href="Error.htm#OSError">OSError</a> is thrown on failure. Otherwise, specify the value to return on failure, such as if the requested key, section or file is not found.</p>
  </dd>

</dl>

<h2 id="Return_Value">Return Value</h2>
<p>Type: <a href="../Concepts.htm#strings">String</a></p>
<p>This function returns the actual value of the specified key. If the value cannot be retrieved, the default value indicated by the <em>Default</em> parameter is returned.</p>
<p>If the <em>Key</em> parameter is omitted, this function returns an entire section. Comments and empty lines are omitted. Only the first 65,533 characters of the section are retrieved.</p>
<p>If the <em>Key</em> and <em>Section</em> parameters are omitted, this function returns a linefeed (<code>`n</code>) delimited list of section names.</p>

<h2 id="Error_Handling">Error Handling</h2>
<p>An <a href="Error.htm#OSError">OSError</a> is thrown on failure, but only if <em>Default</em> is omitted.</p>
<p>Regardless of whether an exception is thrown, <a href="../Variables.htm#LastError">A_LastError</a> is set to the result of the operating system's GetLastError() function.</p>

<h2 id="Remarks">Remarks</h2>
<p>The operating system automatically omits leading and trailing spaces/tabs from the retrieved string. To prevent this, enclose the string in single or double quote marks. The outermost set of single or double quote marks is also omitted, but any spaces inside the quote marks are preserved.</p>
<p>Values longer than 65,535 characters are likely to yield inconsistent results.</p>
<p>A standard ini file looks like:</p>
<pre>[SectionName]
Key=Value</pre>
<p><b>Unicode:</b> IniRead and IniWrite rely on the external functions <a href="https://learn.microsoft.com/windows/win32/api/winbase/nf-winbase-getprivateprofilestring">GetPrivateProfileString</a> and <a href="https://learn.microsoft.com/windows/win32/api/winbase/nf-winbase-writeprivateprofilestringa">WritePrivateProfileString</a> to read and write values. These functions support Unicode only in UTF-16 files; all other files are assumed to use the system's default ANSI code page.</p>
<h2 id="Related">Related</h2>
<p><a href="IniDelete.htm">IniDelete</a>, <a href="IniWrite.htm">IniWrite</a>, <a href="RegRead.htm">RegRead</a>, <a href="LoopRead.htm">file-reading loop</a>, <a href="FileRead.htm">FileRead</a></p>
<h2 id="Examples">Examples</h2>
<div class="ex" id="ExBasic">
<p><a class="ex_number" href="#ExBasic"></a> Reads the value of a key located in section2 from a standard format .ini file and stores it in <var>Value</var>.</p>
<pre>Value := IniRead("C:\Temp\myfile.ini", "section2", "key")
MsgBox "The value is " Value</pre>
</div>

</body>
</html>
