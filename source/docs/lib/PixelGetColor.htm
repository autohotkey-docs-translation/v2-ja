<!DOCTYPE HTML>
<html lang="en">
<head>
<title>PixelGetColor - Syntax &amp; Usage | AutoHotkey v2</title>
<meta name="description" content="The PixelGetColor function retrieves the color of the pixel at the specified X and Y coordinates." />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>PixelGetColor</h1>

<p>Retrieves the color of the pixel at the specified X and Y coordinates.</p>

<pre class="Syntax">Color := <span class="func">PixelGetColor</span>(X, Y <span class="optional">, Mode</span>)</pre>
<h2 id="Parameters">Parameters</h2>
<dl>

  <dt>X, Y</dt>
  <dd>
    <p>Type: <a href="../Concepts.htm#numbers">Integer</a></p>
    <p>The X and Y coordinates of the pixel. Coordinates are relative to the active window's client area unless <a href="CoordMode.htm">CoordMode</a> was used to change that.</p>
  </dd>

  <dt>Mode</dt>
  <dd>
      <p>Type: <a href="../Concepts.htm#strings">String</a></p>
      <p>If blank or omitted, the pixel is retrieved using the normal method. Otherwise, specify one or more of the following words. If more than one word is present, separate each from the next with a space (e.g. <code>"Alt Slow"</code>).</p>
      <p><strong>Alt:</strong> Uses an alternate method to retrieve the color, which should be used when the normal method produces invalid or inaccurate colors for a particular type of window. This method is about 10&nbsp;% slower than the normal method.</p>
      <p><strong>Slow:</strong> Uses a more elaborate method to retrieve the color, which may work in certain full-screen applications when the other methods fail. This method is about three times slower than the normal method. Note: <em>Slow</em> takes precedence over <em>Alt</em>, so there is no need to specify <em>Alt</em> in this case.</p>
    </dd>

</dl>

<h2 id="Return_Value">Return Value</h2>
<p>Type: <a href="../Concepts.htm#strings">String</a></p>
<p>This function returns a hexadecimal numeric string representing the RGB (red-green-blue) color of the pixel. For example, the color purple is defined 0x800080 because it has an intensity of 0x80 (128) for its blue and red components but an intensity of 0x00 (0) for its green component.</p>

<h2 id="Error_Handling">Error Handling</h2>
<p>An <a href="Error.htm#OSError">OSError</a> is thrown on failure.</p>

<h2 id="Remarks">Remarks</h2>
<p>The pixel must be visible; in other words, it is not possible to retrieve the pixel color of a window hidden behind another window. By contrast, pixels beneath the mouse cursor can usually be detected. The exception to this is game cursors, which in most cases will obstruct any pixels beneath them.</p>
<p>Use Window Spy (available in <a href="../Program.htm#tray-icon">tray icon</a> menu) or the example at the bottom of this page to determine the colors currently on the screen.</p>
<p>Known limitations:</p>
<ul>
  <li>A window that is <a href="WinSetTransparent.htm">partially transparent</a> or that has one of its colors marked invisible (<a href="WinSetTransColor.htm">WinSetTransColor</a>) typically yields colors for the window behind itself rather than its own.</li>
  <li>PixelGetColor might not produce accurate results for certain applications. If this occurs, try specifying the word <em>Alt</em> or <em>Slow</em> in the last parameter.</li>
</ul>
<h2 id="Related">Related</h2>
<p><a href="PixelSearch.htm">PixelSearch</a>, <a href="ImageSearch.htm">ImageSearch</a>, <a href="CoordMode.htm">CoordMode</a>, <a href="MouseGetPos.htm">MouseGetPos</a></p>
<h2 id="Examples">Examples</h2>
<div class="ex" id="ExBasic">
<p><a class="ex_number" href="#ExBasic"></a> Press a hotkey to show the color of the pixel located at the current position of the mouse cursor.</p>
<pre>^!z::  <em>; Control+Alt+Z hotkey.</em>
{
    MouseGetPos &amp;MouseX, &amp;MouseY
    MsgBox "The color at the current cursor position is " PixelGetColor(MouseX, MouseY)
}</pre>
</div>

</body>
</html>
