<!DOCTYPE HTML>
<html lang="en">
<head>
<title>OnCommand (GUI) - Syntax &amp; Usage | AutoHotkey v2</title>
<meta name="description" content="The OnCommand method of a GuiControl object registers a function or method to be called when a control notification is received via the WM_COMMAND message." />
<meta name="ahk:equiv-v1" content="lib/GuiControl.htm" />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css">
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>OnCommand</h1>
<p>Registers a function or method to be called when a control notification is received via the <a href="#WM_COMMAND">WM_COMMAND</a> message.</p>
<pre class="Syntax"><a href="GuiControl.htm">GuiCtrl</a>.<span class="func">OnCommand</span>(NotifyCode, Callback <span class="optional">, AddRemove</span>)</pre>

<h2 id="Parameters">Parameters</h2>
<dl>
  <dt>NotifyCode</dt>
  <dd>
    <p>Type: <a href="../Concepts.htm#numbers">Integer</a></p>
    <p>The control-defined notification code to monitor.</p>
  </dd>
  
  <dt>Callback</dt>
  <dd>
    <p>Type: <a href="../Concepts.htm#strings">String</a> or <a href="../misc/Functor.htm">Function Object</a></p>
    <p>The function, method or object to call when the event is raised.</p>
    <p>If the GUI has an event sink (that is, if <a href="Gui.htm#Call">Gui()</a>'s <em>EventObj</em> parameter was specified), this parameter may be the name of a method belonging to the event sink. Otherwise, this parameter must be a <a href="../misc/Functor.htm">function object</a>.</p>
    <p id="Callback_Parameters">The callback accepts one parameter and can be <a href="../Functions.htm#intro">defined</a> as follows:</p>
    <pre class="NoIndent">MyCallback(GuiCtrl) { ...</pre>
    <p>Although the name you give the parameter does not matter, it is assigned the <a href="GuiControl.htm">GuiControl object</a> of the current GUI control.</p>
    <p>You can omit the callback's parameter if the corresponding information is not needed, but in this case an asterisk must be specified, e.g. <code>MyCallback(*)</code>.</p>
    <p>The <a href="GuiOnEvent.htm#Callback_Parameters">notes for OnEvent</a> regarding <code>this</code> and bound functions also apply to OnCommand.</p>
    <p id="Callback_Return_Value">If multiple callbacks have been registered for an event, a callback may return a non-empty value to prevent any remaining callbacks from being called.</p>
    <p>The callback's return value is ignored by the GUI control.</p>
  </dd>
  
  <dt>AddRemove</dt>
  <dd>
    <p>Type: <a href="../Concepts.htm#numbers">Integer</a></p>
    <p>If omitted, it defaults to 1. Otherwise, specify one of the following numbers:</p>
    <ul>
      <li>1 = Call the callback after any previously registered callbacks.</li>
      <li>-1 = Call the callback before any previously registered callbacks.</li>
      <li>0 = Do not call the callback.</li>
    </ul>
  </dd>
</dl>

<h2 id="WM_COMMAND">WM_COMMAND</h2>
<p>Certain types of controls send a <a href="https://learn.microsoft.com/windows/win32/menurc/wm-command">WM_COMMAND</a> message whenever an interesting event occurs. These are usually standard Windows controls which have been around a long time, as newer controls use the WM_NOTIFY message (see <a href="GuiOnNotify.htm">OnNotify</a>). Commonly used notification codes are translated to events, which the script can monitor with <a href="GuiOnEvent.htm">OnEvent</a>.</p>
<p>The message's parameters contain the control ID, HWND and notification code, which AutoHotkey uses to dispatch the notification to the appropriate callback. There are no additional parameters.</p>
<p>To determine which notifications are available (if any), refer to the control's documentation. <a href="https://learn.microsoft.com/windows/win32/controls/individual-control-info">Control Library (Microsoft Docs)</a> contains links to each of the Windows common controls (however, only a few of these use WM_COMMAND). The notification codes (numbers) can be found in the Windows SDK, or by searching the Internet.</p>

<h2 id="Related">Related</h2>
<p>These notes for <a href="GuiOnEvent.htm">OnEvent</a> also apply to OnCommand: <a href="GuiOnEvent.htm#Threads">Threads</a>, <a href="GuiOnEvent.htm#Destroying_the_GUI">Destroying the GUI</a>.</p>
<p><a href="GuiOnNotify.htm">OnNotify</a> can be used for notifications which are sent as a WM_NOTIFY message.</p>

</body>
</html>
