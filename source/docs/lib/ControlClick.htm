<!DOCTYPE HTML>
<html lang="en">
<head>
<title>ControlClick - Syntax &amp; Usage | AutoHotkey v2</title>
<meta name="description" content="The ControlClick function sends a mouse button or mouse wheel event to a control." />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>ControlClick</h1>

<p>Sends a mouse  button or mouse wheel event to a  control.</p>

<pre class="Syntax"><span class="func">ControlClick</span> <span class="optional">Control-or-Pos, WinTitle, WinText, WhichButton, ClickCount, Options, ExcludeTitle, ExcludeText</span></pre>
<h2 id="Parameters">Parameters</h2>
<dl>

  <dt>Control-or-Pos</dt>
  <dd>
      <p>Type: <a href="../Concepts.htm#strings">String</a>, <a href="../Concepts.htm#numbers">Integer</a> or <a href="../Concepts.htm#objects">Object</a></p>
      <p>If omitted, the target window itself will be clicked. Otherwise, use one of the following modes.</p>
      <p><strong>Mode 1 (Position):</strong> Specify the X and Y coordinates relative to the upper left corner of the target window's <a href="CoordMode.htm#Client">client area</a>. The X coordinate must precede the Y coordinate and there must be at least one space or tab between them. For example: <code>"X55 Y33"</code>. If there is a control at the specified coordinates, it will be sent the click-event at those exact coordinates. If there is no control, the target window itself will be sent the event (which might have no effect depending on the nature of the window).</p>
    <p class="note"><strong>Note:</strong> In mode 1, the X and Y option letters of the <em>Options</em> parameter are ignored.</p>
      <p><strong>Mode 2 (Control):</strong> Specify the control's ClassNN, text or HWND, or an object with a <code>Hwnd</code> property. For details, see <a href="Control.htm#Parameter">The Control Parameter</a>.</p>
      <p>By default, mode 2 takes precedence over mode 1. For example, in the unlikely event that there is a control whose text or ClassNN has the format "Xnnn Ynnn", it would be acted upon by mode 2. To override this and use mode 1 unconditionally, specify the word Pos in <em>Options</em> as in the following example: <code>ControlClick "x255 y152", WinTitle,,,, "Pos"</code>.</p>
  </dd>

  <dt>WinTitle, WinText, ExcludeTitle, ExcludeText</dt>
  <dd>
    <p>Type: <a href="../Concepts.htm#strings">String</a>, <a href="../Concepts.htm#numbers">Integer</a> or <a href="../Concepts.htm#objects">Object</a></p>
    <p>If each of these is blank or omitted, the <a href="../misc/WinTitle.htm#LastFoundWindow">Last Found Window</a> will be used. Otherwise, specify for <em>WinTitle</em> a <a href="../misc/WinTitle.htm">window title or other criteria</a> to identify the target window and/or for <em>WinText</em> a substring from a single text element of the target window (as revealed by the included Window Spy utility).</p>
    <p><em>ExcludeTitle</em> and <em>ExcludeText</em> can be used to exclude one or more windows by their title or text. Their specification is similar to <em>WinTitle</em> and <em>WinText</em>, except that <em>ExcludeTitle</em> does not recognize any criteria other than the window title.</p>
    <p>Window titles and text are case-sensitive. By default, hidden windows are not detected and hidden text elements are detected, unless changed with <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a> and <a href="DetectHiddenText.htm">DetectHiddenText</a>. By default, a window title can contain <em>WinTitle</em> or <em>ExcludeTitle</em> anywhere inside it to be a match, unless changed with <a href="SetTitleMatchMode.htm">SetTitleMatchMode</a>.</p>
  </dd>

  <dt>WhichButton</dt>
  <dd>
    <p>Type: <a href="../Concepts.htm#strings">String</a></p>
    <p>If blank or omitted, it defaults to Left (the left mouse button). Otherwise, specify the button to click or the rotate/push direction of the mouse wheel.</p>
    <p><strong>Button:</strong> Left, Right, Middle (or just the first letter of each of these); or X1 (fourth button) or X2 (fifth button).</p>
    <p><strong>Mouse wheel:</strong> Specify WheelUp or WU to turn the wheel upward (away from you); specify WheelDown or WD to turn the wheel downward (toward you). Specify WheelLeft (or WL) or WheelRight (or WR) to push the wheel left or right, respectively. <em>ClickCount</em> is the number of notches to turn the wheel.</p>
    </dd>

  <dt>ClickCount</dt>
  <dd>
    <p>Type: <a href="../Concepts.htm#numbers">Integer</a></p>
    <p>If omitted, it defaults to 1. Otherwise, specify the number of times to click the mouse button or turn the mouse wheel.</p>
  </dd>

  <dt>Options</dt>
  <dd>
      <p>Type: <a href="../Concepts.htm#strings">String</a></p>
      <p>If blank or omitted, each click consists of a down-event followed by an up-event, and occurs at the center of the control when mode 2 is in effect. Otherwise, specify a series of one or more of the following options. For example: <code>"d x50 y25"</code>.</p>
      <p><strong>NA:</strong> May improve reliability. See <a href="#Reliability">reliability</a> below.</p>
      <p><strong>D:</strong> Press the mouse button down but do not release it (i.e. generate a down-event). If both the D and U options are absent, a complete click (down and up) will be sent.</p>
      <p><strong>U:</strong> Release the mouse button (i.e. generate an up-event). This option should not be present if the D option is already present (and vice versa).</p>
      <p><strong>Pos:</strong> Specify the word Pos anywhere in <em>Options</em> to unconditionally use the X/Y positioning mode as described in the <em>Control-or-Pos</em> parameter above.</p>
      <p><strong>X</strong><em>n</em>: Specify for <em>n</em> the X position to click at, relative to the control's upper left corner. If unspecified, the click will occur at the horizontal-center of the control.</p>
      <p><strong>Y</strong><em>n</em>: Specify for <em>n</em> the Y position to click at, relative to the control's upper left corner. If unspecified, the click will occur at the vertical-center of the control.</p>
      <p>Use decimal (not hexadecimal) numbers for the X and Y options.</p>
  </dd>

</dl>

<h2 id="Error_Handling">Error Handling</h2>
<p>An exception is thrown in the following cases:</p>
<ul>
  <li><a href="Error.htm#TargetError">TargetError</a>: The target window could not be found.</li>
  <li><a href="Error.htm#TargetError">TargetError</a>: The target control could not be found and <em>Control-or-Pos</em> does not specify a valid position.</li>
  <li><a href="Error.htm#OSError">OSError</a> (very rare): the X or Y position is omitted and the control's position could not be determined.</li>
  <li><a href="Error.htm#ValueError">ValueError</a> or <a href="Error.htm#TypeError">TypeError</a>: Invalid parameters were detected.</li>
</ul>

<h2 id="Reliability">Reliability</h2>
<p>To improve reliability -- especially during times when the user is physically moving the mouse during the ControlClick -- one or both of the following may help:</p>
<p>1) Use <code><a href="SetControlDelay.htm">SetControlDelay</a> -1</code> prior to ControlClick. This avoids holding the mouse button down during the click, which in turn reduces interference from the user's physical movement of the mouse.</p>
<p>2) Specify the string NA anywhere in the sixth parameter (<em>Options</em>) as shown below:</p>
<pre>SetControlDelay -1
ControlClick "Toolbar321", WinTitle,,,, "NA"</pre>
<p>The NA option avoids marking the target window as active and avoids merging its input processing with that of the script, which may prevent physical movement of the mouse from interfering (but usually only when the target window is not active). However, this method might not work for all types of windows and controls.</p>
<h2 id="Remarks">Remarks</h2>
<p>Not all applications obey a <em>ClickCount</em> higher than 1 for turning the mouse wheel. For those applications, use a loop to turn the wheel more than one notch as in this example, which turns it 5 notches:</p>
<pre>Loop 5
    ControlClick <i>Control</i>, <i>WinTitle</i>, <i>WinText</i>, "WheelUp"</pre>

<h2 id="Related">Related</h2>
<p><a href="SetControlDelay.htm">SetControlDelay</a>, <a href="Control.htm">Control functions</a>, <a href="Click.htm">Click</a></p>
<h2 id="Examples">Examples</h2>
<div class="ex" id="ExBasic">
<p><a class="ex_number" href="#ExBasic"></a> Clicks the OK button.</p>
<pre>ControlClick "OK", "Some Window Title"</pre>
</div>

<div class="ex" id="ExCoord">
<p><a class="ex_number" href="#ExCoord"></a> Clicks at a set of coordinates. Note the lack of a comma between X and Y.</p>
<pre>ControlClick "x55 y77", "Some Window Title"</pre>
</div>

<div class="ex" id="ExReliability">
<p><a class="ex_number" href="#ExReliability"></a> Clicks in NA mode at coordinates that are relative to a named control.</p>
<pre>SetControlDelay -1  <em>; May improve reliability and reduce side effects.</em>
ControlClick "Toolbar321", "Some Window Title",,,, "NA x192 y10"</pre>
</div>

</body>
</html>
