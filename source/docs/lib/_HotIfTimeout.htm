<!DOCTYPE HTML>
<html lang="en">
<head>
<title>#HotIfTimeout - Syntax &amp; Usage | AutoHotkey v2</title>
<meta name="description" content="The #HotIfTimeout directive sets the maximum time that may be spent evaluating a single #HotIf expression." />
<meta name="ahk:equiv-v1" content="lib/_IfTimeout.htm" />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>


<h1>#HotIfTimeout</h1>

<p>Sets the maximum time that may be spent evaluating a single <a href="_HotIf.htm">#HotIf</a> expression.</p>

<pre class="Syntax"><span class="func">#HotIfTimeout</span> Timeout</pre>
<h2 id="Parameters">Parameters</h2>
<dl>

  <dt>Timeout</dt>
  <dd>
    <p>Type: <a href="../Concepts.htm#numbers">Integer</a></p>
    <p>The timeout value to apply globally, in milliseconds.</p>
  </dd>

</dl>

<h2 id="Remarks">Remarks</h2>
<p>If this directive is unspecified in the script, it will behave as though set to 1000 (milliseconds).</p>
<p>A timeout is implemented to prevent long-running expressions from stalling keyboard input processing. If the timeout value is exceeded, the expression continues to evaluate, but the keyboard hook continues as if the expression had already returned false.</p>
<p id="LowLevelHooksTimeout">Note that the system implements its own timeout, defined by the DWORD value <em>LowLevelHooksTimeout</em> in the following registry key:</p>
<p><b>HKEY_CURRENT_USER\Control Panel\Desktop</b></p>
<p>If the system timeout value is exceeded, the system may stop calling the script's keyboard hook, thereby preventing hook hotkeys from working until the hook is re-registered or the script is <a href="Reload.htm">reloaded</a>. The hook can <em>usually</em> be re-registered by <a href="Suspend.htm">suspending</a> and un-suspending all hotkeys.</p>
<p>Microsoft's documentation is unclear about the details of this timeout, but research indicates the following for Windows 7 and later: If <em>LowLevelHooksTimeout</em> is not defined, the default timeout is 300&nbsp;ms. The hook may time out up to 10 times, but is silently removed if it times out an 11th time.</p>
<p>If a given hotkey has multiple #HotIf variants, the timeout might be applied to each variant independently, making it more likely that the system timeout will be exceeded. This may be changed in a future update.</p>
<p>Like other directives, #HotIfTimeout cannot be executed conditionally.</p>
<h2 id="Related">Related</h2>
<p><a href="_HotIf.htm">#HotIf</a></p>
<h2 id="Examples">Examples</h2>
<div class="ex" id="ExBasic">
<p><a class="ex_number" href="#ExBasic"></a> Sets the #HotIf timeout to 10&nbsp;ms instead of 1000&nbsp;ms.</p>
<pre>#HotIfTimeout 10</pre>
</div>

</body>
</html>
