<!DOCTYPE HTML>
<html lang="en">
<head>
<title>#MaxThreadsBuffer - Syntax &amp; Usage | AutoHotkey v2</title>
<meta name="description" content="The #MaxThreadsBuffer directive causes some or all hotkeys to buffer rather than ignore keypresses when their #MaxThreadsPerHotkey limit has been reached." />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>#MaxThreadsBuffer</h1>

<p>Causes some or all <a href="../Hotkeys.htm">hotkeys</a> to buffer rather than ignore keypresses when their <a href="_MaxThreadsPerHotkey.htm">#MaxThreadsPerHotkey</a> limit has been reached.</p>

<pre class="Syntax"><span class="func">#MaxThreadsBuffer</span> <span class="optional">Setting</span></pre>
<h2 id="Parameters">Parameters</h2>
<dl>

  <dt>Setting</dt>
  <dd>
    <p>If omitted, it defaults to <em>True</em>. Otherwise, specify one of the following literal values:</p>
    <p><strong>True</strong> or <strong>1</strong>: All hotkey subroutines between here and the next <code>#MaxThreadsBuffer False</code> directive will buffer rather than ignore presses of their hotkeys whenever their subroutines are at their <a href="_MaxThreadsPerHotkey.htm">#MaxThreadsPerHotkey</a> limit.</p>
    <p><strong>False</strong> or <strong>0</strong>: A hotkey press will be ignored whenever that hotkey is already running its maximum number of threads (usually 1, but this can be changed with <a href="_MaxThreadsPerHotkey.htm">#MaxThreadsPerHotkey</a>).</p>
  </dd>

</dl>

<h2 id="Remarks">Remarks</h2>
<p>If this directive is unspecified in the script, it will behave as though set to <em>False</em>.</p>
<p>This directive is rarely used because this type of buffering usually does more harm than good. For example, if you accidentally press a hotkey twice, having this setting ON would cause that hotkey's subroutine to automatically run a second time if its first <a href="../misc/Threads.htm">thread</a> takes less than 1 second to finish (this type of buffer expires after 1 second, by design). Note that AutoHotkey  buffers hotkeys in several other ways (such as <a href="Thread.htm#Interrupt">Thread Interrupt</a> and <a href="Critical.htm">Critical</a>). It's just that this particular way can be detrimental, thus it is OFF by default.</p>
<p>The main use for this directive is to increase the responsiveness of the keyboard's auto-repeat feature. For example, when you hold down a hotkey whose <a href="_MaxThreadsPerHotkey.htm">#MaxThreadsPerHotkey</a> setting is 1 (the default), incoming keypresses  are ignored if that hotkey subroutine is already running. Thus, when the subroutine finishes, it must wait for the next auto-repeat keypress to come in, which might take 50&nbsp;ms or more due to being caught in between keystrokes of the auto-repeat cycle. This 50&nbsp;ms delay can be avoided by enabling this directive for any hotkey that needs the best possible response time while it is being auto-repeated.</p>
<p>As with all # directives, this one should not be positioned in the script as though it were a function (i.e. it is not necessary to have it contained within a subroutine). Instead, position it immediately before the first hotkey you wish to have affected by it.</p>
<p>Like other directives, #MaxThreadsBuffer cannot be executed conditionally.</p>
<h2 id="Related">Related</h2>
<p><a href="_MaxThreads.htm">#MaxThreads</a>, <a href="_MaxThreadsPerHotkey.htm">#MaxThreadsPerHotkey</a>, <a href="Critical.htm">Critical</a>, <a href="Thread.htm">Thread (function)</a>, <a href="../misc/Threads.htm">Threads</a>, <a href="Hotkey.htm">Hotkey</a>, <a href="A_MaxHotkeysPerInterval.htm">A_MaxHotkeysPerInterval</a>, <a href="ListHotkeys.htm">ListHotkeys</a></p>
<h2 id="Examples">Examples</h2>
<div class="ex" id="ExBasic">
<p><a class="ex_number" href="#ExBasic"></a> Causes the first two hotkeys to buffer rather than ignore keypresses when their #MaxThreadsPerHotkey limit has been reached.</p>
<pre>#MaxThreadsBuffer True
#x::MsgBox "This hotkey will use this type of buffering."
#y::MsgBox "And this one too."
#MaxThreadsBuffer False
#z::MsgBox "But not this one."</pre>
</div>

</body>
</html>
