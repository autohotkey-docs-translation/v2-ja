<!DOCTYPE HTML>
<html lang="en">
<head>
<title>SendMode - Syntax &amp; Usage | AutoHotkey v2</title>
<meta name="description" content="The SendMode function causes Send, Click, MouseMove, MouseClick and MouseClickDrag to use the Event or Play mode rather than the default (Input)." />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>SendMode</h1>

<p>Makes <a href="Send.htm">Send</a> synonymous with SendEvent or SendPlay rather than the default (SendInput). Also makes Click and MouseMove/Click/Drag use the specified method.</p>

<pre class="Syntax"><span class="func">SendMode</span> Mode</pre>

<h2 id="Parameters">Parameters</h2>
<dl>
  <dt>Mode</dt>
  <dd>
    <p>Type: <a href="../Concepts.htm#strings">String</a></p>
    <p>Specify one of the following words:</p>
    <p><strong>Event:</strong> Switches to the <a href="Send.htm#SendEvent">SendEvent</a> method for <a href="Send.htm">Send</a>, <a href="Send.htm">SendText</a>, <a href="Click.htm">Click</a>, <a href="MouseMove.htm">MouseMove</a>, <a href="MouseClick.htm">MouseClick</a>, and <a href="MouseClickDrag.htm">MouseClickDrag</a>.</p>
    <p><strong>Input:</strong> Uses the <a href="Send.htm#SendInput">SendInput</a> method for <a href="Send.htm">Send</a>, <a href="Send.htm">SendText</a>, <a href="Click.htm">Click</a>, <a href="MouseMove.htm">MouseMove</a>, <a href="MouseClick.htm">MouseClick</a>, and <a href="MouseClickDrag.htm">MouseClickDrag</a>. Known limitations:</p>
    <ul>
      <li>Windows Explorer ignores SendInput's simulation of certain navigational hotkeys such as <kbd>Alt</kbd>+<kbd>&larr;</kbd>. To work around this, use either <code>SendEvent "!{Left}"</code> or <code>SendInput "{Backspace}"</code>.</li>
    </ul>
    <p><strong>InputThenPlay:</strong> Same as above except that rather than falling back to Event mode when SendInput is <a href="Send.htm#SendInputUnavail">unavailable</a>, it reverts to Play mode (below). This also causes the <a href="Send.htm#SendInput">SendInput function</a> itself to revert to Play mode when SendInput is unavailable.</p>
    <p id="Play"><strong>Play:</strong> Switches to the <a href="Send.htm#SendPlay">SendPlay</a> method for <a href="Send.htm">Send</a>, <a href="Send.htm">SendText</a>, <a href="Click.htm">Click</a>, <a href="MouseMove.htm">MouseMove</a>, <a href="MouseClick.htm">MouseClick</a>, and <a href="MouseClickDrag.htm">MouseClickDrag</a>. Known limitations:</p>
    <ul>
      <li>Characters that do not exist in the current keyboard layout (such as &Ocirc; in English) cannot be sent. To work around this, use <a href="Send.htm#SendEvent">SendEvent</a>.</li>
      <li>Simulated mouse dragging might have no effect in RichEdit controls (and possibly others) such as those of WordPad and Metapad. To use an alternate mode for a particular drag, follow this example: <code><a href="Send.htm#SendEvent">SendEvent</a> "{Click 6 52 Down}{Click 45 52 Up}"</code>.</li>
      <li>Simulated mouse wheel rotation produces movement in only one direction (usually downward, but upward in some applications). Also, wheel rotation might have no effect in applications such as MS Word and Notepad. To use an alternate mode for a particular rotation, follow this example: <code><a href="Send.htm#SendEvent">SendEvent</a> "{WheelDown 5}"</code>.</li>
      <li>If <code>SendMode "Play"</code> is called during <a href="../Scripts.htm#auto">script startup</a>, all remapped keys are affected and might lose some of their functionality. See <a href="../misc/Remap.htm#SendPlay">SendPlay remapping limitations</a> for details.</li>
      <li>SendPlay does not trigger AutoHotkey's hotkeys or hotstrings, or global hotkeys registered by other programs or the OS.</li>
    </ul>
  </dd>
</dl>

<h2 id="Return_Value">Return Value</h2>
<p>Type: <a href="../Concepts.htm#strings">String</a></p>
<p>This function returns the previous setting; either Event, Input, InputThenPlay or Play.</p>

<h2 id="Remarks">Remarks</h2>
<p>If SendMode is not used, the default mode is <em>Input</em>.</p>
<p>Since SendMode also changes the mode of <a href="Click.htm">Click</a>, <a href="MouseMove.htm">MouseMove</a>, <a href="MouseClick.htm">MouseClick</a>, and <a href="MouseClickDrag.htm">MouseClickDrag</a>, there may be times when you wish to use a different mode for a particular mouse event. The easiest way to do this is via <a href="Send.htm#Click">{Click}</a>. For example:</p>
<pre>SendEvent "{Click 100 200}"  <em>; SendEvent uses the older, traditional method of clicking.</em></pre>
<p>If SendMode is used during <a href="../Scripts.htm#auto">script startup</a>, it also affects <a href="../misc/Remap.htm">keyboard and mouse remapping</a>. In particular, if you use <code>SendMode "Play"</code> with remapping, see <a href="../misc/Remap.htm#SendPlay">SendPlay remapping limitations</a>.</p>
<p>The built-in variable <strong>A_SendMode</strong> contains the current setting.</p>
<p>Every newly launched <a href="../misc/Threads.htm">thread</a> (such as a <a href="../Hotkeys.htm">hotkey</a>, <a href="Menu.htm">custom menu item</a>, or <a href="SetTimer.htm">timed</a> subroutine) starts off fresh with the default setting for this function. That default may be changed by using this function during <a href="../Scripts.htm#auto">script startup</a>.</p>
<h2 id="Related">Related</h2>
<p><a href="Send.htm">Send</a>, <a href="SetKeyDelay.htm">SetKeyDelay</a>, <a href="SetMouseDelay.htm">SetMouseDelay</a>, <a href="Click.htm">Click</a>, <a href="MouseClick.htm">MouseClick</a>, <a href="MouseClickDrag.htm">MouseClickDrag</a>, <a href="MouseMove.htm">MouseMove</a></p>
<h2 id="Examples">Examples</h2>
<div class="ex" id="ExInputThenPlay">
<p><a class="ex_number" href="#ExInputThenPlay"></a> Makes Send synonymous with SendInput, but falls back to SendPlay if SendInput is not available.</p>
<pre>SendMode "InputThenPlay"</pre>
</div>

</body>
</html>
