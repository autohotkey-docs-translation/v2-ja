<!DOCTYPE HTML>
<html lang="en">
<head>
<title>WinGetControls - Syntax &amp; Usage | AutoHotkey v2</title>
<meta name="description" content="The WinGetControls function returns an array of names (ClassNNs) for all controls in the specified window." />
<meta name="ahk:equiv-v1" content="lib/WinGet.htm#ControlList" />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>WinGetControls</h1>

<p>Returns an array of names (ClassNNs) for all controls in the specified window.</p>

<pre class="Syntax">ClassNNs := <span class="func">WinGetControls</span>(<span class="optional">WinTitle, WinText, ExcludeTitle, ExcludeText</span>)</pre>

<h2 id="Parameters">Parameters</h2>
<dl>
    <dt>WinTitle, WinText, ExcludeTitle, ExcludeText</dt>
    <dd>
        <p>Type: <a href="../Concepts.htm#strings">String</a>, <a href="../Concepts.htm#numbers">Integer</a> or <a href="../Concepts.htm#objects">Object</a></p>
        <p>If each of these is blank or omitted, the <a href="../misc/WinTitle.htm#LastFoundWindow">Last Found Window</a> will be used. Otherwise, specify for <em>WinTitle</em> a <a href="../misc/WinTitle.htm">window title or other criteria</a> to identify the target window and/or for <em>WinText</em> a substring from a single text element of the target window (as revealed by the included Window Spy utility).</p>
        <p><em>ExcludeTitle</em> and <em>ExcludeText</em> can be used to exclude one or more windows by their title or text. Their specification is similar to <em>WinTitle</em> and <em>WinText</em>, except that <em>ExcludeTitle</em> does not recognize any criteria other than the window title.</p>
        <p>Window titles and text are case-sensitive. By default, hidden windows are not detected and hidden text elements are detected, unless changed with <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a> and <a href="DetectHiddenText.htm">DetectHiddenText</a>. By default, a window title can contain <em>WinTitle</em> or <em>ExcludeTitle</em> anywhere inside it to be a match, unless changed with <a href="SetTitleMatchMode.htm">SetTitleMatchMode</a>.</p>
    </dd>
</dl>

<h2 id="Return_Value">Return Value</h2>
<p>Type: <a href="Array.htm">Array</a></p>
<p>This function returns an array of names for all controls in the specified window. Each name consists of the control's class name followed immediately by its sequence number (ClassNN), as shown by Window Spy.</p>
<p>For example, if the return value is assigned to a variable named <code>ClassNNs</code> and two controls are present, <code>ClassNNs[1]</code> contains the name of the first control, <code>ClassNNs[2]</code> contains the name of the second control, and <code>ClassNNs.<a href="Array.htm#Length">Length</a></code> returns the number 2.</p>
<p>Controls are sorted according to their Z-order, which is usually the same order as the navigation order via <kbd>Tab</kbd> if the window supports tabbing.</p>

<h2 id="Error_Handling">Error Handling</h2>
<p>A <a href="Error.htm#TargetError">TargetError</a> is thrown if the window could not be found.</p>

<h2 id="Remarks">Remarks</h2>
<p>The ID of the window or control under the mouse cursor can be retrieved with <a href="MouseGetPos.htm">MouseGetPos</a>.</p>

<h2 id="Related">Related</h2>
<p><a href="WinGetControlsHwnd.htm">WinGetControlsHwnd</a>, <a href="Win.htm">Win functions</a>, <a href="Control.htm">Control functions</a></p>

<h2 id="Examples">Examples</h2>
<div class="ex" id="ExBasic">
<p><a class="ex_number" href="#ExBasic"></a> Extracts the individual control names from the active window's control list.</p>
<pre>for n, ctrl in WinGetControls("A")
{
    Result := MsgBox("Control #" n " is '" ctrl "'. Continue?",, 4)
    if (Result = "No")
        break
}</pre>
</div>

<div class="ex" id="ExRealTime">
<p><a class="ex_number" href="#ExRealTime"></a> Displays in real time the active window's control list.</p>
<pre>SetTimer WatchActiveWindow, 200

WatchActiveWindow()
{
    try
    {
        Controls := WinGetControls("A")
        ControlList := ""
        for ClassNN in Controls
            ControlList .= ClassNN . "`n"
        if (ControlList = "")
            ToolTip "The active window has no controls."
        else
            ToolTip ControlList
    }
    catch TargetError
        ToolTip "No visible window is active."
}</pre>
</div>

</body>
</html>
