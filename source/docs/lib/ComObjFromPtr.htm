<!DOCTYPE HTML>
<html lang="en">
<head>
<title>ComObjFromPtr - Syntax &amp; Usage | AutoHotkey v2</title>
<meta name="description" content="The ComObjFromPtr function wraps a raw IDispatch pointer (COM object) for use by the script." />
<meta name="ahk:equiv-v1" content="lib/ComObjActive.htm" />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>ComObjFromPtr</h1>

<p>Wraps a raw <a href="https://learn.microsoft.com/windows/win32/api/oaidl/nn-oaidl-idispatch">IDispatch</a> pointer (COM object) for use by the script.</p>
<pre class="Syntax">ComObj := <span class="func">ComObjFromPtr</span>(DispPtr)</pre>

<h2 id="Parameters">Parameters</h2>
<dl>

  <dt>DispPtr</dt>
  <dd>
    <p>Type: <a href="../Concepts.htm#numbers">Integer</a></p>
    <p>A non-null interface pointer for IDispatch or a derived interface.</p>
  </dd>

</dl>

<h2 id="Returns">Return Value</h2>
<p>Type: <a href="ComObject.htm">ComObject</a></p>
<p>Returns a wrapper object containing the <a href="ComObjType.htm#vt">variant type</a> VT_DISPATCH and the given pointer.</p>
<p>Wrapping a COM object enables the script to interact with it more naturally, using <a href="../Objects.htm#Usage_Objects">object syntax</a>. However, the majority of scripts do not need to do this manually since a wrapper object is created automatically by <a href="ComObject.htm">ComObject</a>, <a href="ComObjActive.htm">ComObjActive</a>, <a href="ComObjGet.htm">ComObjGet</a> and any COM method which returns an object.</p>

<h2 id="Remarks">Remarks</h2>
<p>The wrapper object assumes responsibility for automatically releasing the pointer when appropriate. This function <a href="ComObjQuery.htm">queries</a> the object for its IDispatch interface; if one is returned, <em>DispPtr</em> is immediately released. Therefore, if the script intends to use the pointer after calling this function, it must call <code><a href="ObjAddRef.htm">ObjAddRef</a>(DispPtr)</code> first.</p>
<p><b>Known limitation:</b> Each time a COM object is wrapped, a new wrapper object is created. Comparisons and assignments such as <code>obj1 == obj2</code> and <code>arr[obj1] := value</code> treat the two wrapper objects as unique, even when they contain the same COM object.</p>

<h2 id="Related">Related</h2>
<p><a href="ComObject.htm">ComObject</a>, <a href="ComValue.htm">ComValue</a>, <a href="ComObjGet.htm">ComObjGet</a>, <a href="ComObjConnect.htm">ComObjConnect</a>, <a href="ComObjFlags.htm">ComObjFlags</a>, <a href="ObjAddRef.htm">ObjAddRef/ObjRelease</a>, <a href="ComObjQuery.htm">ComObjQuery</a>, <a href="https://learn.microsoft.com/windows/win32/api/oleauto/nf-oleauto-getactiveobject">GetActiveObject (Microsoft Docs)</a></p>

</body>
</html>
