<!DOCTYPE HTML>
<html lang="en">
<head>
<title>ComObject - Syntax &amp; Usage | AutoHotkey v2</title>
<meta name="description" content="The ComObject function creates a COM object." />
<meta name="ahk:equiv-v1" content="lib/ComObjActive.htm" />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>ComObject</h1>
<p>Creates a COM object.</p>
<pre class="Syntax">ComObj := <span class="func">ComObject</span>(CLSID <span class="optional">, IID</span>)</pre>
<p><code>ComObject</code> itself is a <a href="Class.htm">class</a> derived from <code>ComValue</code>, but is used only to create or identify COM objects.</p>

<h2 id="Parameters">Parameters</h2>
<dl>

  <dt>CLSID</dt>
  <dd>
    <p>Type: <a href="../Concepts.htm#strings">String</a></p>
    <p>CLSID or human-readable Prog ID of the COM object to create.</p>
  </dd>

  <dt>IID</dt>
  <dd>
    <p>Type: <a href="../Concepts.htm#strings">String</a></p>
    <p>If omitted, it defaults to <code>"{00020400-0000-0000-C000-000000000046}"</code> (IID_IDispatch). Otherwise, specify the identifier of the interface to return. In most cases this is omitted.</p>
  </dd>

</dl>

<h2 id="Return_Value">Return Value</h2>
<p>Type: <a href="../Concepts.htm#objects">Object</a></p>
<p>This function returns a COM wrapper object of type dependent on the IID parameter.</p>
<table class="info">
  <tr><th>IID</th><th>Class</th><th abbr="Type">Variant Type</th><th abbr="Descr">Description</th></tr>
  <tr>
    <td>IID_IDispatch</td>
    <td><code style="white-space:nowrap">ComObject</code></td>
    <td><span style="white-space:nowrap">VT_DISPATCH (9)</span></td>
    <td>Allows the script to call properties and methods of the object using normal <a href="../Objects.htm#Usage_Objects">object syntax</a>.</td>
  </tr>
  <tr>
    <td>Any other IID</td>
    <td><code style="white-space:nowrap">ComValue</code></td>
    <td><span style="white-space:nowrap">VT_UNKNOWN (13)</span></td>
    <td>Provides only a <code>Ptr</code> property, which allows the object to be passed to <a href="DllCall.htm">DllCall</a> or <a href="ComCall.htm">ComCall</a>.</td>
  </tr>
</table>

<h2 id="Error_Handling">Error Handling</h2>
<p>An exception is thrown on failure, such as if a parameter is invalid or the object does not support the interface specified by <em>IID</em>.</p>

<h2 id="Related">Related</h2>
<p><a href="ComValue.htm">ComValue</a>, <a href="ComObjGet.htm">ComObjGet</a>, <a href="ComObjActive.htm">ComObjActive</a>, <a href="ComObjConnect.htm">ComObjConnect</a>, <a href="ComObjArray.htm">ComObjArray</a>, <a href="ComObjQuery.htm">ComObjQuery</a>, <a href="ComCall.htm">ComCall</a>, <a href="https://learn.microsoft.com/previous-versions/dcw63t7z(v=vs.85)">CreateObject (Microsoft Docs)</a></p>

<h2 id="Examples">Examples</h2>
<p>For a long list of examples, see the following forum topic: <a href="https://www.autohotkey.com/forum/topic61509.html">https://www.autohotkey.com/forum/topic61509.html</a>.</p>
<div class="ex" id="ExIE">
<p><a class="ex_number" href="#ExIE"></a> Launches an instance of Internet Explorer, makes it visible and navigates to a website.</p>
<pre>ie := ComObject("InternetExplorer.Application")
ie.Visible := true  <em>; This is known to work incorrectly on IE7.</em>
ie.Navigate("https://www.autohotkey.com/")
</pre>
</div>
<div class="ex" id="ExWallpaper">
<p><a class="ex_number" href="#ExWallpaper"></a> Retrieves the path of the desktop's current wallpaper.</p>
<pre>
AD_GETWP_BMP := 0
AD_GETWP_LAST_APPLIED := 0x00000002
CLSID_ActiveDesktop := "{75048700-EF1F-11D0-9888-006097DEACF9}"
IID_IActiveDesktop := "{F490EB00-1240-11D1-9888-006097DEACF9}"
cchWallpaper := 260
GetWallpaper := 4

AD := ComObject(CLSID_ActiveDesktop, IID_IActiveDesktop)
wszWallpaper := Buffer(cchWallpaper * 2)
ComCall(GetWallpaper, AD, "ptr", wszWallpaper, "uint", cchWallpaper, "uint", AD_GETWP_LAST_APPLIED)
Wallpaper := StrGet(wszWallpaper, "UTF-16")
MsgBox "Wallpaper: " Wallpaper
</pre>
</div>

</body>
</html>
