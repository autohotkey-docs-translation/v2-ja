<!DOCTYPE HTML>
<html lang="en">
<head>
<title>WinTitle &amp; Last Found Window | AutoHotkey v2</title>
<meta name="description" content="This page lists criteria that can be used in the WinTitle parameter of built-in functions to determine the target window(s)." />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
  <link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1><var>WinTitle</var> Parameter &amp; Last Found Window</h1>
<p>Various built-in functions have a <var>WinTitle</var> parameter, used to identify which window (or windows) to operate on. This parameter can be the title or partial title of the window, and/or any other criteria described on this page.</p>

<h2 id="toc">Table of Contents</h2>
<ul>
  <li><a href="#WinTitle">Window Title &amp; Matching Behaviour</a></li>
  <li><a href="#ActiveWindow">A (Active Window)</a></li>
  <li><a href="#ahk_">ahk_ Criteria</a>
    <ul>
      <li><a href="#ahk_class">ahk_class (Window Class)</a></li>
      <li><a href="#ahk_id">ahk_id (Unique ID / HWND)</a></li>
      <li><a href="#ahk_pid">ahk_pid (Process ID)</a></li>
      <li><a href="#ahk_exe">ahk_exe (Process Name/Path)</a></li>
      <li><a href="#ahk_group">ahk_group (Window Group)</a></li>
    </ul>
  </li>
  <li><a href="#multi">Multiple Criteria</a></li>
  <li><a href="#LastFoundWindow">Last Found Window</a></li>
</ul>

<a id="Matching"></a>
<h2 id="WinTitle">Window Title &amp; Matching Behaviour</h2>
<p>Specify any string for <var>WinTitle</var> to identify a window by its title. The title of a window is often visible as text in a title bar at the top of the window. If invisible or only partially visible, the full window title can be revealed via <a href="../lib/WinGetTitle.htm">WinGetTitle</a> or Window Spy.</p>
<p>The following example activates the calculator:</p>
<pre>WinActivate "Calculator"</pre>
<p><a href="../lib/SetTitleMatchMode.htm">SetTitleMatchMode</a> controls how a partial or complete title is compared against the title of each window. Depending on the setting, <var>WinTitle</var> can be an exact title, or it can contain a prefix, a substring which occurs anywhere in the title, or a <a href="RegEx-QuickRef.htm">RegEx pattern</a>. This setting also controls whether the <a href="#ahk_class">ahk_class</a> and <a href="#ahk_exe">ahk_exe</a> criteria are interpreted as RegEx patterns.</p>
<p>Window titles are case-sensitive, except when using the <a href="RegEx-QuickRef.htm#opt_i">i) modifier</a> in a RegEx pattern.</p>
<p>Hidden windows are only detected if <a href="../lib/DetectHiddenWindows.htm">DetectHiddenWindows</a> is turned on, except with <a href="../lib/WinShow.htm">WinShow</a>, which always detects hidden windows.</p>
<p>If multiple windows match <var>WinTitle</var> and any other criteria, the topmost matching window is used. If the active window matches the criteria, it usually takes precedence since it is usually above all other windows. However, if an <a href="../lib/WinSetAlwaysOnTop.htm">always-on-top</a> window also matches (and the active window is not always-on-top), it may be used instead.</p>
<p id="CharLimit">In <span class="ver">[v2.0.6+]</span>, it is no longer the case that only the first 1023 characters of the specified window title, <a href="#ahk_class">ahk_class</a> criterion value, and <a href="#ahk_exe">ahk_exe</a> criterion value are considered for matching purposes. Exceeding the length no longer leads to unexpected results, which rarely occurs, but may be encountered more often if a very long RegEx pattern is used.</p>

<h2 id="ActiveWindow">A (Active Window)</h2>
<p>Use the letter <code>A</code> for <var>WinTitle</var> and omit the other three window parameters (<em>WinText</em>, <em>ExcludeTitle</em> and <em>ExcludeText</em>), to operate on the active window.</p>
<p>The following example retrieves and reports the unique ID (HWND) of the active window:</p>
<pre>MsgBox WinExist("A")</pre>
<p>The following example creates a hotkey which can be pressed to maximize the active window:</p>
<pre>#Up::WinMaximize "A"  <em>; Win+Up</em></pre>

<h2 id="ahk_">ahk_ Criteria</h2>
<p>Specify one or more of the following ahk_ criteria (optionally in addition to a window's title), each separated from the next with exactly <u>one</u> space or tab (any other spaces or tabs are treated as a literal part of the previous criterion). An ahk_ criterion always consists of an ahk_ keyword and its criterion value, separated by zero or more spaces or tabs. For example, <code>ahk_class Notepad</code> identifies a Notepad window.</p>
<p>The ahk_ keyword and its criterion value do not need to be separated by spaces or tabs. This is primarily useful when specifying ahk_ criteria in combination with variables. For example, you could specify <code>"ahk_pid" PID</code> instead of <code>"ahk_pid " PID</code>. In all other cases, however, it is recommended to use at least one space or tab as a separation to improve readability.</p>

<h3 id="ahk_class">ahk_class (Window Class)</h3>
<p>Use <code>ahk_class <var>ClassName</var></code> in <var>WinTitle</var> to identify a window by its window class.</p>
<p>A window class is a set of attributes that the system uses as a template to create a window. In other words, the class name of the window identifies what <em>type</em> of window it is. A window class can be revealed via Window Spy or retrieved by <a href="../lib/WinGetClass.htm">WinGetClass</a>. If the RegEx <a href="../lib/SetTitleMatchMode.htm">title matching mode</a> is active, <var>ClassName</var> accepts a <a href="RegEx-QuickRef.htm">regular expression</a>.</p>
<p>Window classes are case-sensitive, except when using the <a href="RegEx-QuickRef.htm#opt_i">i) modifier</a> in a RegEx pattern.</p>
<p>The following example activates a console window (e.g. cmd.exe):</p>
<pre>WinActivate "ahk_class ConsoleWindowClass"</pre>
<p>The following example does the same as above, but uses a <a href="RegEx-QuickRef.htm">regular expression</a> (note that the RegEx <a href="../lib/SetTitleMatchMode.htm">title matching mode</a> must be turned on beforehand to make it work):</p>
<pre>WinActivate "ahk_class ^ConsoleWindowClass$"</pre>

<h3 id="ahk_id">ahk_id (Unique ID / HWND)</h3>
<p>Each window or control has a unique ID, also known as a HWND (short for handle to window). This ID can be used to identify the window or control even if its title or text changes.</p>
<p>Use <code>ahk_id <var>HWND</var></code>, <code><var>HWND</var></code> (that is, an <a href="../Concepts.htm#numbers">Integer</a> without the ahk_id keyword) or an <a href="../Objects.htm">Object</a> with a HWND property in <var>WinTitle</var> to identify a window or control by its unique ID.</p>
<p><a href="../lib/DetectHiddenWindows.htm">DetectHiddenWindows</a> affects whether the ahk_id criterion detects hidden top-level windows, but hidden controls are always detected. It also affects whether hidden windows identified by HWND (as an Object property or Integer) are detected, but only when used with <a href="../lib/WinWait.htm">WinWait</a> or <a href="../lib/WinWaitClose.htm">WinWaitClose</a>.</p>
<p>The ahk_id criterion can also be combined with other criteria that the given window must match. For example, <code>WinExist("ahk_id " ahwnd " ahk_class " aclass)</code> returns <var>ahwnd</var> if the window is "detected" (according to DetectHiddenWindows) and its window class matches the string contained by <var>aclass</var>.</p>
<p>The ID of a window is typically retrieved via <a href="../lib/WinExist.htm">WinExist</a> or <a href="../lib/WinGetID.htm">WinGetID</a>. The ID of a control is typically retrieved via <a href="../lib/ControlGetHwnd.htm">ControlGetHwnd</a>, <a href="../lib/MouseGetPos.htm">MouseGetPos</a>, or <a href="../lib/DllCall.htm">DllCall</a>. <a href="../lib/Gui.htm">Gui</a> and <a href="../lib/GuiControl.htm">GuiControl</a> objects have a <code>Hwnd</code> property and therefore can be used directly in <var>WinTitle</var>.</p>
<p>The following examples operate on a window by a unique ID stored in <var>VarContainingID</var>:</p>
<pre><em>; Pass an <a href="../Concepts.htm#numbers">Integer</a>.</em>
WinActivate Integer(VarContainingID)
WinShow A_ScriptHwnd
WinWaitNotActive WinExist("A")

<em>; Pass an <a href="../Objects.htm">Object</a> with a HWND property.</em>
WinActivate {Hwnd: VarContainingID}
WinWaitClose myGuiObject

<em>; Use the ahk_id prefix.</em>
WinActivate "ahk_id " VarContainingID
</pre>
<p>If the object has no HWND property or the property's value is not an integer, a <a href="../lib/Error.htm#PropertyError">PropertyError</a> or <a href="../lib/Error.htm#TypeError">TypeError</a> is thrown.</p>

<h3 id="ahk_pid">ahk_pid (Process ID)</h3>
<p>Use <code>ahk_pid <var>PID</var></code> in <var>WinTitle</var> to identify a window belonging to a specific process. The process identifier (PID) is typically retrieved by <a href="../lib/WinGetPID.htm">WinGetPID</a>, <a href="../lib/Run.htm">Run</a> or <a href="../lib/Process.htm">Process functions</a>. The ID of a window's process can be revealed via Window Spy.</p>
<p>The following example activates a window by a process ID stored in <var>VarContainingPID</var>:</p>
<pre>WinActivate "ahk_pid " VarContainingPID</pre>

<h3 id="ahk_exe">ahk_exe (Process Name/Path)</h3>
<p>Use <code>ahk_exe <var>ProcessNameOrPath</var></code> in <var>WinTitle</var> to identify a window belonging to any process with the given name or path.</p>
<p>While the <a href="#ahk_pid">ahk_pid criterion</a> is limited to one specific process, the ahk_exe criterion considers all processes with name or full path matching a given string. If the RegEx <a href="../lib/SetTitleMatchMode.htm">title matching mode</a> is active, <var>ProcessNameOrPath</var> accepts a <a href="RegEx-QuickRef.htm">regular expression</a> which must match the full path of the process. Otherwise, it accepts a case-insensitive name or full path; for example, <code>ahk_exe notepad.exe</code> covers <code>ahk_exe C:\Windows\Notepad.exe</code>, <code>ahk_exe C:\Windows\System32\Notepad.exe</code> and other variations. The name of a window's process can be revealed via Window Spy.</p>
<p>The following example activates a Notepad window by its process name:</p>
<pre>WinActivate "ahk_exe notepad.exe"</pre>
<p>The following example does the same as above, but uses a <a href="RegEx-QuickRef.htm">regular expression</a> (note that the RegEx <a href="../lib/SetTitleMatchMode.htm">title matching mode</a> must be turned on beforehand to make it work):</p>
<pre>WinActivate "ahk_exe i)\\notepad\.exe$"  <em>; Match the name part of the full path.</em></pre>

<h3 id="ahk_group">ahk_group (Window Group)</h3>
<p>Use <code>ahk_group <var>GroupName</var></code> in <var>WinTitle</var> to identify a window or windows matching the rules contained by a previously defined <a href="../lib/GroupAdd.htm">window group</a>.</p>
<p><a href="../lib/WinMinimize.htm">WinMinimize</a>, <a href="../lib/WinMaximize.htm">WinMaximize</a>, <a href="../lib/WinRestore.htm">WinRestore</a>, <a href="../lib/WinHide.htm">WinHide</a>, <a href="../lib/WinShow.htm">WinShow</a>, <a href="../lib/WinClose.htm">WinClose</a>, and <a href="../lib/WinKill.htm">WinKill</a> will operate upon <u>all</u> the group's windows. By contrast, the other windowing functions such as <a href="../lib/WinActivate.htm">WinActivate</a> and <a href="../lib/WinExist.htm">WinExist</a> will operate only upon the topmost window of the group.</p>
<p>The following example activates any window matching the criteria defined by a window group:</p>
<pre><em>; Define the group: Windows Explorer windows</em>
GroupAdd "Explorer", "ahk_class ExploreWClass" <em>; Unused on Vista and later</em>
GroupAdd "Explorer", "ahk_class CabinetWClass"

<em>; Activate any window matching the above criteria</em>
WinActivate "ahk_group Explorer"</pre>

<h2 id="multi">Multiple Criteria</h2>
<p>By contrast with the <a href="#ahk_group">ahk_group criterion</a> (which broadens the search), the search may be narrowed by specifying more than one criterion within the <var>WinTitle</var> parameter. In the following example, the script waits for a window whose title contains <em>My File.txt</em> <u>and</u> whose class is <em>Notepad</em>:</p>
<pre>WinWait "<strong>My File.txt</strong> ahk_class <strong>Notepad</strong>"
WinActivate  <em>; Activate the window it found.</em></pre>
<p>When using this method, the text of the title (if any is desired) should be listed first, followed by one or more additional criteria. Criteria beyond the first should be separated from the previous with exactly <u>one</u> space or tab (any other spaces or tabs are treated as a literal part of the previous criterion).</p>
<p>The <a href="#ahk_id">ahk_id criterion</a> can be combined with other criteria to test a window's title, class or other attributes:</p>
<pre>
MouseGetPos ,, &amp;id
if WinExist("ahk_class Notepad ahk_id " id)
    MsgBox "The mouse is over Notepad."
</pre>


<h2 id="LastFoundWindow">Last Found Window</h2>

<p>This is the window most recently found by <a href="../lib/WinExist.htm">WinExist</a>, <a href="../lib/WinActive.htm">WinActive</a>, <a href="../lib/WinWaitActive.htm">WinWait[Not]Active</a>, <a href="../lib/WinWait.htm">WinWait</a>, or <a href="../lib/WinWaitClose.htm">WinWaitClose</a>. It can make scripts easier to create and maintain since <var>WinTitle</var> and <var>WinText</var> of the target window do not need to be repeated for every windowing function. In addition, scripts perform better because they don't need to search for the target window again after it has been found the first time.</p>
<p>The last found window can be used by all of the windowing functions except <a href="../lib/WinWait.htm">WinWait</a>, <a href="../lib/WinActivateBottom.htm">WinActivateBottom</a>, <a href="../lib/GroupAdd.htm">GroupAdd</a>, <a href="../lib/WinGetCount.htm">WinGetCount</a>, and <a href="../lib/WinGetList.htm">WinGetList</a>. To use it, simply omit all four window parameters (<var>WinTitle</var>, <var>WinText</var>, <var>ExcludeTitle</var>, and <var>ExcludeText</var>).</p>
<p>Each <a href="Threads.htm">thread</a> retains its own value of the last found window, meaning that if the <a href="Threads.htm">current thread</a> is interrupted by another, when the original thread is resumed it will still have its original value of the last found window, not that of the interrupting thread.</p>
<p>If the last found window is a hidden <a href="../lib/Gui.htm">Gui window</a>, it can be used even when <a href="../lib/DetectHiddenWindows.htm">DetectHiddenWindows</a> is turned off. This is often used in conjunction with the GUI's <a href="../lib/Gui.htm#LastFound">+LastFound</a> option.</p>
<p>The following example opens Notepad, waits until it exists and activates it:</p>
<pre>Run "Notepad"
WinWait "Untitled - Notepad"
WinActivate <em>; Use the window found by WinWait.</em></pre>

<p>The following example activates and maximizes the Notepad window found by WinExist:</p>
<pre>if WinExist("Untitled - Notepad")
{
    WinActivate <em>; Use the window found by WinExist.</em>
    WinMaximize <em>; Same as above.</em>
    Send "Some text.{Enter}"
}</pre>

<p>The following example activates the calculator found by WinExist and moves it to a new position:</p>
<pre>if not WinExist("Calculator")
{
    <em>; ...</em>
}
else
{
    WinActivate <em>; Use the window found by WinExist.</em>
    WinMove 40, 40 <em>; Same as above.</em>
}</pre>

</body>
</html>
