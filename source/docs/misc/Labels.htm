<!DOCTYPE HTML>
<html lang="en">
<head>
<title>Labels - Syntax &amp; Usage | AutoHotkey v2</title>
<meta name="description" content="Labels identify a line of code, and can be used as Goto targets or to specify a loop to break out of or continue." />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>Labels</h1>

<h2 id="toc">Table of Contents</h2>
<ul>
  <li><a href="#syntax-and-usage">Syntax and Usage</a></li>
  <li><a href="#look-alikes">Look-alikes</a></li>
  <li><a href="#dynamic-labels">Dynamic Labels</a></li>
  <li><a href="#named-loops">Named Loops</a></li>
  <li><a href="#related">Related</a></li>
</ul>

<h2 id="syntax-and-usage">Syntax and Usage</h2>
<p>A label identifies a line of code, and can be used as a <a href="../lib/Goto.htm">Goto</a> target or to <a href="#named-loops">specify a loop</a> to break out of or continue. A label consist of a <a href="../Concepts.htm#names">name</a> followed by a colon:</p>
<pre>this_is_a_label:</pre>
<p>Aside from whitespace and comments, no other code can be written on the same line as a label.</p>
<p><strong>Names:</strong> Label names are not case-sensitive (for ASCII letters), and may consist of letters, numbers, underscore and non-ASCII characters. For example: <em>MyListView</em>, <em>Menu_File_Open</em>, and <em>outer_loop</em>.</p>
<p><strong>Scope:</strong> Each function has its own list of local labels. Inside a function, only that function's labels are visible/accessible to the script.</p>
<p><strong>Target:</strong> The target of a label is the next line of executable code. Executable code includes functions, assignments, <a href="../Variables.htm#Expressions">expressions</a> and <a href="../lib/Block.htm">blocks</a>, but not directives, labels, hotkeys or hotstrings. In the following example, <code>run_notepad_1</code> and <code>run_notepad_2</code> both point at the <code>Run</code> line:</p>
<pre>run_notepad_1:
run_notepad_2:
    Run "notepad"
    return</pre>
<p><strong>Execution:</strong> Like directives, labels have no effect when reached during normal execution.</p>

<h2 id="look-alikes">Look-alikes</h2>
<p>Hotkey and hotstring definitions look similar to labels, but are not labels.</p>
<p><a href="../Hotkeys.htm">Hotkeys</a> consist of a hotkey followed by double-colon.</p>
<pre>^a::</pre>
<p><a href="../Hotstrings.htm">Hotstrings</a> consist of a colon, zero or more <a href="../Hotstrings.htm#Options">options</a>, another colon, an abbreviation and double-colon.</p>
<pre>:*:btw::</pre>

<h2 id="dynamic-labels">Dynamic Labels</h2>
<p>In some cases a <a href="../Variables.htm">variable</a> can be used in place of a label name. In such cases, the name stored in the variable is used to locate the target label. However, performance is slightly reduced because the target label must be "looked up" each time rather than only once when the script is first loaded.</p>

<h2 id="named-loops">Named Loops</h2>
<p>A label can also be used to identify a loop for the <a href="../lib/Continue.htm">Continue</a> and <a href="../lib/Break.htm">Break</a> statements. This allows the script to easily continue or break out of any number of nested loops.</p>

<h2 id="related">Related</h2>
<p><a href="../Functions.htm">Functions</a>, <a href="../lib/IsLabel.htm">IsLabel</a>, <a href="../lib/Goto.htm">Goto</a>, <a href="../lib/Break.htm">Break</a>, <a href="../lib/Continue.htm">Continue</a></p>

</body>
</html>
