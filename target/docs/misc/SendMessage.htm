<!DOCTYPE HTML>
<html lang="jac">
<head>
<title>PostMessage / SendMessage チュートリアル｜AutoHotkey v2</title>
<meta name="description" content="PostMessage関数やSendMessage関数を使用して、ウィンドウやそのコントロールにメッセージを送信する方法について説明します。" />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>

<body>
<h1>PostMessage / SendMessage チュートリアル<span class="headnote">by Rajat</span></h1>

<p>このページでは、<a href="../lib/PostMessage.htm">PostMessage</a>や <a href="../lib/SendMessage.htm">SendMessage</a>を使ってウィンドウやそのコントロールにメッセージを送る方法を説明し、以下のような質問に答える：</p>
<ul>
  <li>「最小化されたウィンドウのボタンを押すには？」</li>
  <li>"「<a href="../lib/MenuSelect.htm">MenuSelect</a>が機能しないメニュー項目を選択するには？」</li>
  <li>「これはスキナブル・ウィンドウです......毎回機能するコマンドを送るには？」</li>
  <li>「<strong>隠し</strong>窓はどうするんだ？」</li>
</ul>
<p>必要条件：Winspector Spy（<a href="https://www.softpedia.com/get/Security/Security-Related/Winspector.shtml">ここにある</a>）</p>
<p>最初の例として、<a href="../lib/MenuSelect.htm">MenuSelect</a>がOutlook Expressの「New Message」ウィンドウのメニューバーで動作しないことに注意してください。つまり、このコードは機能しない：</p>
<pre>MenuSelect "New Message",, "&amp;Insert", "&amp;Picture..."</pre>
<p>しかし、<a href="../lib/PostMessage.htm">PostMessage</a>は仕事をこなすことができる：</p>
<pre>PostMessage 0x0111, 40239, 0, , "New Message"</pre>
<p>魅力的に機能する！でも、あれは一体何なんだ？0x0111は<a href="SendMessageList.htm">wm_commandメッセージ</a>の16進コードであり、40239はこの特定のウィンドウがメニュー項目の'Insert Picture'選択として理解するコードである。では、40239のような値を見つける方法を説明しよう：</p>
<ol>
  <li>Winspector Spyと「New Message」ウィンドウを開きます。</li>
  <li>Winspector Spyのウィンドウから十字線を「New Message」ウィンドウのタイトルバー（Winspector Spyのオーバーレイで覆われていない部分）にドラッグする。</li>
  <li>左側のリストで選択したウィンドウを右クリックし、「メッセージ」を選択します。</li>
  <li>空白のウィンドウを右クリックし、「Edit message filter」を選択する。</li>
  <li>'filter all'ボタンを押して、左のリストにある'wm_command'をダブルクリックする。こうすることで、このメッセージだけを監視することができる。</li>
  <li>「新規メッセージ」ウィンドウに移動し、メニューバーから選択する：Insert &gt; Picture。</li>
  <li>ウィンスペクター・スパイに戻り、信号ボタンを押して監視を一時停止する。</li>
  <li>溜まっているwm_commandメッセージを展開する（もしあれば他のものは忘れる）。</li>
  <li>探したいのは（通常は）コード0のメッセージだ。時々、wm_commandに'win activated'とか'win destroyed'とかいうメッセージが出る。You'll find that there's a message saying 'Control ID: 40239' ...that's it!</li>
  <li>これを上記の関数に入れれば完成です！wParamの値です。</li>
</ol>
<p>次の例ではペイントを取り上げる。ここで、AutoHotkeyを使ってツールバーからツールを選択するアプリを考えてみよう。</p>
<p>どうするつもりだ？おそらく、ツールバーのボタンをマウスでクリックしたんだろう？しかし、ツールバーは動かしたり隠したりできる！こちらも移動/非表示が可能。そのため、ターゲット・ユーザーがこのいずれかを行った場合、スクリプトはその時点で失敗する。しかし、次の関数はまだ機能する：</p>
<pre>ポストメッセージ 0x0111, 639,,, "無題 - ペイント"</pre>
<p><a href="../lib/PostMessage.htm">PostMessage</a>のもう一つの利点は、ウィンドウをバックグラウンドにできることである。対照的に、マウスクリックを送信するには、ウィンドウをアクティブにする必要がある。</p>
<p>以下はその例である。注：私はWinXP Pro (SP1)を使っています...もし違うOSを使っているなら、パラメータが変わるかもしれません（ワードパッドやメモ帳のようなウィンドウズ付属のアプリにのみ適用されます）：</p>
<pre><em>;makes writing color teal in Wordpad</em>
<a href="../lib/PostMessage.htm">PostMessage</a> 0x0111, 32788, 0, , "Document - WordPad"</pre>
<pre><em>;opens about box in Notepad</em>
<a href="../lib/PostMessage.htm">PostMessage</a> 0x0111, 65, 0, , "Untitled - Notepad"</pre>
<pre><em>;toggles word-wrap in Notepad</em>
<a href="../lib/PostMessage.htm">PostMessage</a> 0x0111, 32, 0, , "Untitled - Notepad"</pre>
<pre><em>;play/pause in Windows Media Player</em>
<a href="../lib/PostMessage.htm">PostMessage</a> 0x0111, 32808, 0, , "Windows Media Player"</pre>
<pre><em>;suspend the hotkeys of a running AHK script</em>
DetectHiddenWindows True
<em>; Use 65306 to Pause and 65303 to Reload instead of Suspend. (see <a href="../FAQ.htm#close">FAQ</a>)</em>
<a href="../lib/PostMessage.htm">PostMessage</a> 0x0111, 65305,,, "MyScript.ahk - AutoHotkey"
</pre>
<pre><em>; Press CapsLock and Numpad2 to reload all AutoHotkey scripts</em>
CapsLock &amp; Numpad2::
ReloadAllAhkScripts(ThisHotkey)
{
    DetectHiddenWindows True
    for hwnd in WinGetList("ahk_class AutoHotkey")
    {
        if (hwnd = A_ScriptHwnd)  <em>; ignore the current window for reloading</em>
            continue
        PostMessage 0x0111, 65303,,, hwnd
    }
    Reload
}
</pre>
<p>これはPostMessage用である。<a href="../lib/SendMessage.htm">SendMessage</a>も同じように動作するが、さらに戻り値を待つ。この戻り値は、Winampで現在再生中のトラックを取得する場合などに使用できる（例として<a href="Winamp.htm">Winampの自動化</a>を参照）。</p>
<p>以下はそのメモである：</p>
<ul>
  <li>OSがXPであること、そしてOSが異なるとmsgの値が変化することに関する上記の注釈は、純粋に注意のためのものである。もし、あなたのシステムで（あるバージョンのソフトで）動作するメッセージを見つけたのなら、同じバージョンのソフトで他のシステムでも動作することは間違いない。さらに、ほとんどのアプリは、バージョンが違ってもこれらのmsg値を同じに保つ（例：Windows Media PlayerとWinamp）。</li>
  <li>Winspector Spyでwm_commandだけを表示するようにフィルタを設定してもメッセージが大量に表示される場合は、そのメッセージを右クリックしてhide (msg name)を選択してください。</li>
  <li>Winspector Spy の右向きの矢印は msg の値を示し、ぼかした左向きの矢印は返された値を示しています。0（ゼロ）値は、デフォルトでは「エラーなし」と考えて差し支えない。</li>
  <li>非表示のウィンドウに投稿するには、スクリプトに以下を追加する：<code>DetectHiddenWindows True</code></li>
</ul>
<p>注：このテクニックが使えないアプリもある。VBとDelphiのアプリには、いろいろな運があった。このテクニックは、CやC++のアプリで使うのが最適だ。VBアプリでは、同じ関数の'LParam'が実行ごとに変わり続ける。Delphiアプリでは...いくつかのアプリのGUIはwm_commandすら使わない。おそらくマウスのポーズとクリックを使っているのだろう。</p>
<p>そしてAutoHotkeyフォーラムであなたの経験を共有してください。フィードバックは大歓迎だ！</p>
<p>このチュートリアルは全くの初心者向けではありません（悪意はありません）。だから、上記を読んでもさっぱり理解できないなら、もう忘れてほしい。</p>
<p>-Rajat</p>
</body>
</html>
