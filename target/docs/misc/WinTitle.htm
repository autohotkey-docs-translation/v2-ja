<!DOCTYPE HTML>
<html lang="ja">
<head>
<title>WinTitleと最後に表示されたウィンドウ｜AutoHotkey v2</title>
<meta name="description" content="このページでは、組み込み関数の WinTitle パラメータで使用できる、ターゲット・ウィンドウを決定するための基準を示します。" />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
  <link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1><var>WinTitle</var>パラメータと最後に見つかったウィンドウ</h1>
<p>様々な組み込み関数には<var>WinTitle</var>パラメータがあり、どのウィンドウ（または複数のウィンドウ）を操作するかを識別するために使用されます。このパラメータには、ウィンドウのタイトルまたは部分的なタイトル、および/またはこのページで説明されているその他の基準を指定することができます。</p>

<h2 id="toc">目次</h2>
<ul>
  <li><a href="#WinTitle">Window Title &amp; Matching Behaviour</a></li>
  <li><a href="#ActiveWindow">A（アクティブウィンドウ）</a></li>
  <li><a href="#ahk_">ahk_ Criteria</a>
    <ul>
      <li><a href="#ahk_class">ahk_class (ウィンドウクラス)</a></li>
      <li><a href="#ahk_id">ahk_id (Unique ID / HWND)</a></li>
      <li><a href="#ahk_pid">ahk_pid (Process ID)</a></li>
      <li><a href="#ahk_exe">ahk_exe (Process Name/Path)</a></li>
      <li><a href="#ahk_group">ahk_group (Window Group)</a></li>
    </ul>
  </li>
  <li><a href="#multi">複数の基準</a></li>
  <li><a href="#LastFoundWindow">ラストファウンドウィンドウ</a></li>
</ul>

<a id="Matching"></a>
<h2 id="WinTitle">Window Title &amp; Matching Behaviour</h2>
<p>Specify any string for <var>WinTitle</var> to identify a window by its title. The title of a window is often visible as text in a title bar at the top of the window. If invisible or only partially visible, the full window title can be revealed via <a href="../lib/WinGetTitle.htm">WinGetTitle</a> or Window Spy.</p>
<p>The following example activates the calculator:</p>
<pre>WinActivate "Calculator"</pre>
<p><a href="../lib/SetTitleMatchMode.htm">SetTitleMatchMode</a>は、部分的または完全なタイトルを各ウィンドウのタイトルと比較する方法を制御します。設定によって、<var>WinTitle</var>は正確なタイトルになるか、接頭辞、タイトル内の任意の場所に出現する部分文字列、または<a href="RegEx-QuickRef.htm">RegExパターン</a>を含むことができる。この設定は、<a href="#ahk_class">ahk_class</a>と<a href="#ahk_exe">ahk_exe</a>基準を RegEx パターンとして解釈するかどうかも制御する。</p>
<p>RegExパターンで<a href="RegEx-QuickRef.htm#opt_i">i)修飾子</a>を使用する場合を除き、ウィンドウタイトルは大文字と小文字を区別する。</p>
<p>隠しウィンドウは<a href="../lib/DetectHiddenWindows.htm">DetectHiddenWindows</a>がオンになっている場合のみ検出されるが、<a href="../lib/WinShow.htm">WinShow</a>では常に検出される。</p>
<p>複数のウィンドウが<var>WinTitle</var>とその他の条件に一致する場合、一番上のウィンドウが使用される。アクティブなウィンドウが条件に一致する場合、通常は他のすべてのウィンドウより上にあるため、そのウィンドウが優先される。ただし、<a href="../lib/WinSetAlwaysOnTop.htm">常時オン</a>のウィンドウも一致する場合（そしてアクティブなウィンドウが常時オンでない場合）には、そのウィンドウが代わりに使われることもある。</p>
<p id="CharLimit">In <span class="ver">[v2.0.6+]</span>, it is no longer the case that only the first 1023 characters of the specified window title, <a href="#ahk_class">ahk_class</a> criterion value, and <a href="#ahk_exe">ahk_exe</a> criterion value are considered for matching purposes. Exceeding the length no longer leads to unexpected results, which rarely occurs, but may be encountered more often if a very long RegEx pattern is used.</p>

<h2 id="ActiveWindow">A（アクティブウィンドウ）</h2>
<p><var>WinTitle</var>にはアルファベット<code>A</code>を使用し、他の3つのウィンドウ・パラメーター（<em>WinText</em>、<em>ExcludeTitle</em>、<em>ExcludeText</em>）を省略すると、アクティブなウィンドウに対して動作する。</p>
<p>以下の例では、アクティブウィンドウのユニークID（HWND）を取得し、報告している：</p>
<pre>MsgBox WinExist("A")</pre>
<p>次の例では、アクティブウィンドウを最大化するために押すホットキーを作成します：</p>
<pre>#Up::WinMaximize "A"  <em>; Win+Up</em></pre>

<h2 id="ahk_">ahk_ Criteria</h2>
<p>次の ahk_ 基準を1つ以上 (オプションでウィンドウのタイトルに加えて) 指定し、それぞれを <u>1</u> スペースかタブで区切る (それ以外のスペースかタブは、前の基準のリテラル部分として扱われる)。ahk_基準は常に、ahk_キーワードとその基準値から成り、0個以上の空白またはタブで区切られる。For example, <code>ahk_class Notepad</code> identifies a Notepad window.</p>
<p>ahk_キーワードとその基準値は、スペースやタブで区切る必要はない。これは主に、変数と組み合わせてahk_基準を指定するときに便利です。例えば、<code>"ahk_pid " PID</code>の代わりに<code>"ahk_pid" PIDを</code>指定することができる。しかし、それ以外の場合は、読みやすさを向上させるために、少なくとも1つのスペースかタブを区切りとして使用することが推奨される。</p>

<h3 id="ahk_class">ahk_class (ウィンドウクラス)</h3>
<p>ウィンドウクラスでウィンドウを識別するには<var>WinTitle</var>の<code>ahk_class<var>ClassName</var></code>を使う。</p>
<p>ウィンドウ・クラスは、システムがウィンドウを作成するためのテンプレートとして使用する属性のセットです。言い換えれば、ウィンドウのクラス名は、それがどの<em>タイプ</em>のウィンドウであるかを識別する。ウィンドウクラスはWindow Spyで公開したり、<a href="../lib/WinGetClass.htm">WinGetClassで</a>取得することができます。RegEx<a href="../lib/SetTitleMatchMode.htm">タイトル・マッチ・モード</a>が有効な場合、<var>ClassName</var>は<a href="RegEx-QuickRef.htm">正規表現</a>を受け付けます。</p>
<p>次の例は、コンソール・ウィンドウ（cmd.exeなど）をアクティブにします：</p>
<pre>WinActivate "ahk_class ConsoleWindowClass"</pre>
<p>次の例は上記と同じだが、<a href="RegEx-QuickRef.htm">正規表現</a>を使っている（動作させるには、RegExの<a href="../lib/SetTitleMatchMode.htm">タイトルマッチングモード</a>をあらかじめオンにしておく必要があることに注意）：</p>
<pre>WinActivate "ahk_class i)^ConsoleWindowClass$"</pre>

<h3 id="ahk_id">ahk_id (Unique ID / HWND)</h3>
<p>各ウィンドウやコントロールには固有のIDがあり、HWND（ウィンドウへのハンドルの略）としても知られている。This ID can be used to identify the window or control even if its title or text changes.</p>
<p><code>ahk_id<var>HWND</var></code>を使用する、 <code><var>HWND</var></code>(つまり、ahk_id キーワードのない<a href="../Concepts.htm#numbers">整数</a>)、または<var>WinTitle</var>の HWND プロパティを持つ<a href="../Objects.htm">オブジェクト</a>を使用して、一意の ID でウィンドウやコントロールを識別する。</p>
<p><a href="../lib/DetectHiddenWindows.htm">DetectHiddenWindows</a>は、ahk_id基準が非表示のトップレベルウィンドウを検出するかどうかに影響するが、非表示のコントロールは常に検出される。また、（オブジェクト・プロパティまたは整数として）HWNDによって識別される隠しウィンドウが検出されるかどうかにも影響しますが、これは<a href="../lib/WinWait.htm">WinWait</a>または<a href="../lib/WinWaitClose.htm">WinWaitClose</a>と共に使用される場合のみです。</p>
<p>ahk_id基準は、与えられたウィンドウがマッチしなければならない他の基準と組み合わせることもできる。例えば、<code>WinExist("ahk_id " ahwnd " ahk_class " aclass)</code>は、ウィンドウが（DetectHiddenWindowsに従って）"検出"され、そのウィンドウクラスが<var>aclass</var>に含まれる文字列と一致する場合、<var>ahwnd</var>を返す。</p>
<p>ウィンドウのIDは通常、<a href="../lib/WinExist.htm">WinExist</a>または<a href="../lib/WinGetID.htm">WinGetID</a>で取得する。コントロールのIDは通常、<a href="../lib/ControlGetHwnd.htm">ControlGetHwnd</a>、<a href="../lib/MouseGetPos.htm">MouseGetPos</a>、または<a href="../lib/DllCall.htm">DllCall</a>で取得します。<a href="../lib/Gui.htm">Gui</a>と <a href="../lib/GuiControl.htm">GuiControl</a>オブジェクトは<code>Hwnd</code>プロパティを持っているので、<var>WinTitle</var>で直接使うことができます。</p>
<p>以下の例は、<var>VarContainingID</var>に格納された一意のIDによってウィンドウを操作する：</p>
<pre><em>; Pass an <a href="../Concepts.htm#numbers">Integer</a>.</em>
WinActivate Integer(VarContainingID)
WinShow A_ScriptHwnd
WinWaitNotActive WinExist("A")

<em>; Pass an <a href="../Objects.htm">Object</a> with a HWND property.</em>
WinActivate {Hwnd: VarContainingID}
WinWaitClose myGuiObject

<em>; Use the ahk_id prefix.</em>
WinActivate "ahk_id " VarContainingID
</pre>
<p>オブジェクトにHWNDプロパティがないか、プロパティの値が整数でない場合、<a href="../lib/Error.htm#PropertyError">PropertyError</a>または<a href="../lib/Error.htm#TypeError">TypeError</a>がスローされます。</p>

<h3 id="ahk_pid">ahk_pid (Process ID)</h3>
<p><var>WinTitle</var>で<code>ahk_pid<var>PID</var></code>を使用して、特定のプロセスに属するウィンドウを識別する。プロセス識別子（PID）は通常、<a href="../lib/WinGetPID.htm">WinGetPID</a>、<a href="../lib/Run.htm">Run</a>または<a href="../lib/Process.htm">Process関数</a>で取得される。ウィンドウのプロセスIDは、ウィンドウ・スパイで知ることができる。</p>
<p>次の例は、<var>VarContainingPID</var>に格納されたプロセスIDによってウィンドウをアクティブにする：</p>
<pre>WinActivate "ahk_pid " VarContainingPID</pre>

<h3 id="ahk_exe">ahk_exe (Process Name/Path)</h3>
<p><var>WinTitle</var>の<code>ahk_exe<var>ProcessNameOrPath</var></code>を使って、与えられた名前やパスを持つプロセスに属するウィンドウを特定する。</p>
<p><a href="#ahk_pid">ahk_pid 基準</a>が特定のプロセスに限定されるのに対して、 ahk_exe 基準は、与えられた文字列と一致する名前またはフルパスを持つ すべてのプロセスを考慮する。RegEx<a href="../lib/SetTitleMatchMode.htm">タイトル・マッチング・モード</a>が有効な場合、<var>ProcessNameOrPath</var>は、プロセスのフル・パスにマッチしなければならない<a href="RegEx-QuickRef.htm">正規表現</a>を受け付ける。それ以外の場合は、大文字と小文字を区別しない名前またはフルパスを受け付ける。例えば、<code>ahk_exe notepad.exe</code>は、<code>ahk_exe C:\Windows\Notepad.exe</code>、<code>ahk_exe C:\Windows\System32\Notepad.exe</code>などのバリエーションをカバーする。ウィンドウのプロセス名は、ウィンドウ・スパイ（Window Spy）を通じて知ることができる。</p>
<p>次の例は、プロセス名でメモ帳ウィンドウをアクティブにする：</p>
<pre>WinActivate "ahk_exe notepad.exe"</pre>
<p>次の例は上記と同じだが、<a href="RegEx-QuickRef.htm">正規表現</a>を使っている（動作させるには、RegExの<a href="../lib/SetTitleMatchMode.htm">タイトルマッチングモード</a>をあらかじめオンにしておく必要があることに注意）：</p>
<pre>WinActivate "ahk_exe i)\\notepad\.exe$"  <em>; Match the name part of the full path.</em></pre>

<h3 id="ahk_group">ahk_group (Window Group)</h3>
<p><var>WinTitle</var>の <code>ahk_group<var>GroupName</var></code>を使用して、以前に定義された<a href="../lib/GroupAdd.htm">ウィンドウグループ</a>に含まれるルールに一致するウィンドウを特定する。</p>
<p><a href="../lib/WinMinimize.htm">WinMinimize</a>, <a href="../lib/WinMaximize.htm">WinMaximize</a>, <a href="../lib/WinRestore.htm">WinRestore</a>, <a href="../lib/WinHide.htm">WinHide</a>, <a href="../lib/WinShow.htm">WinShow</a>, <a href="../lib/WinClose.htm">WinClose</a>, and <a href="../lib/WinKill.htm">WinKill</a> will operate upon <u>all</u> the group's windows. By contrast, the other windowing functions such as <a href="../lib/WinActivate.htm">WinActivate</a> and <a href="../lib/WinExist.htm">WinExist</a> will operate only upon the topmost window of the group.</p>
<p>次の例は、ウィンドウ・グループで定義された条件に一致するウィンドウをアクティブにします：</p>
<pre><em>; Define the group: Windows Explorer windows</em>
GroupAdd "Explorer", "ahk_class ExploreWClass" <em>; Unused on Vista and later</em>
GroupAdd "Explorer", "ahk_class CabinetWClass"

<em>; Activate any window matching the above criteria</em>
WinActivate "ahk_group Explorer"</pre>

<h2 id="multi">複数の基準</h2>
<p><a href="#ahk_group">ahk_group基準</a>（検索範囲を広げる）とは対照的に、<var>WinTitle</var>パラメータに複数の基準を指定することで、検索範囲を狭めることができる。In the following example, the script waits for a window whose title contains <em>My File.txt</em> <u>and</u> whose class is <em>Notepad</em>:</p>
<pre>WinWait "<strong>My File.txt</strong> ahk_class <strong>Notepad</strong>"
WinActivate  <em>; Activate the window it found.</em></pre>
<p>この方法を使用する場合、タイトルのテキスト（必要な場合）を最初に記載し、その後に1つ以上の追加基準を記載する。1つ目以降の基準は、正確に<u>1つの</u>スペースまたはタブで区切らなければならない（それ以外のスペースまたはタブは、前の基準のリテラル部分として扱われる）。</p>
<p><a href="#ahk_id">ahk_id基準</a>は、ウィンドウのタイトル、クラス、その他の属性をテストするために、他の基準と組み合わせることができます：</p>
<pre>
MouseGetPos ,, &amp;id
if WinExist("ahk_class Notepad ahk_id " id)
    MsgBox "The mouse is over Notepad."
</pre>


<h2 id="LastFoundWindow">ラストファウンドウィンドウ</h2>

<p>これは、<a href="../lib/WinExist.htm">WinExist</a>、<a href="../lib/WinActive.htm">WinActive</a>、<a href="../lib/WinWaitActive.htm">WinWait[Not]Active</a>、<a href="../lib/WinWait.htm">WinWait</a>、または<a href="../lib/WinWaitClose.htm">WinWaitClose</a>によって最近見つかったウィンドウである。ウィンドウ関数のたびにターゲットウィンドウの<var>WinTitle</var>と <var>WinText</var>を繰り返す必要がないので、スクリプトの作成と保守が簡単になる。さらに、スクリプトは、最初にターゲット・ウィンドウが見つかった後、再度検索する必要がないため、パフォーマンスが向上する。</p>
<p>最後に見つかったウィンドウは、<a href="../lib/WinWait.htm">WinWait</a>、<a href="../lib/WinActivateBottom.htm">WinActivateBottom</a>、<a href="../lib/GroupAdd.htm">GroupAdd</a>、<a href="../lib/WinGetCount.htm">WinGetCount</a>、<a href="../lib/WinGetList.htm">WinGetList</a>を除くすべてのウィンドウ関数で使用できる。これを使うには、4つのウィンドウ・パラメーター（<var>WinTitle</var>、<var>WinText</var>、<var>ExcludeTitle</var>、<var>ExcludeText</var>）をすべて省略すればよい。</p>
<p>つまり、<a href="Threads.htm">現在のスレッドが</a>他のスレッドによって中断された場合、元のスレッドが再開されると、中断されたスレッドの値ではなく、最後に見つかったウィンドウの元の値が保持される。</p>
<p>最後に見つかったウィンドウが非表示の<a href="../lib/Gui.htm">GUIウィンドウ</a>の場合、<a href="../lib/DetectHiddenWindows.htm">DetectHiddenWindows</a>がオフになっていても使用できる。これはGUIの<a href="../lib/Gui.htm#LastFound">+LastFound</a>オプションと併用されることが多い。</p>
<p>次の例では、メモ帳を開き、それが存在するまで待ち、それを起動する：</p>
<pre>Run "Notepad"
WinWait "Untitled - Notepad"
WinActivate <em>; Use the window found by WinWait.</em></pre>

<p>次の例は、WinExistによって見つかったメモ帳ウィンドウをアクティブにし、最大化します：</p>
<pre>if WinExist("Untitled - Notepad")
{
    WinActivate <em>; Use the window found by WinExist.</em>
    WinMaximize <em>; Same as above.</em>
    Send "Some text.{Enter}"
}</pre>

<p>次の例は、WinExistによって見つかった電卓をアクティブにし、新しい位置に移動させます：</p>
<pre>if not WinExist("Calculator")
{
    <em>; ...</em>
}
else
{
    WinActivate <em>; Use the window found by WinExist.</em>
    WinMove 40, 40 <em>; Same as above.</em>
}</pre>

</body>
</html>
