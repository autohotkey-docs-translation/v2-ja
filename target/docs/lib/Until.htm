<!DOCTYPE HTML>
<html lang="jac">
<head>
<title>Until - 構文と使用法｜AutoHotkey v2</title>
<meta name="description" content="Until文は、LoopまたはForループの継続に条件を適用します。" />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>Until</h1>

<p>LoopまたはForループの継続に条件を適用します。</p>

<pre class="Syntax"><span class="func">Loop</span> {
    ...
} <span class="func">Until</span> <i>Expression</i></pre>
<h2 id="Parameters">パラメータ</h2>
<dl>

  <dt>Expression</dt>
  <dd><p>任意の有効な<a href="../Variables.htm#Expressions">式</a>。</p></dd>

</dl>

<h2 id="Remarks">備考</h2>
<p><code>until(expression)</code>のように式が括弧で囲まれているときは、<code>Until</code>の後のスペースまたはタブは省略できます。</p>
<p>この式は各反復の後に一度だけ評価され、<a href="Continue.htm">Continue</a>が使われたときにも評価されます。この式がfalse（空文字列または数値0）と評価されたときはループは続行されます。そうでないときはループは解除されて<i>Until</i>に続く行で実行が続行されます。</p>
<p>Loop Untilは以下の略語です：</p>
<pre>Loop {
    ...
    if (<i>Expression</i>)
        break
}</pre>
<p>しかし、ループ・アンティル（Loop Until）の方が理解しやすい場合が多く、上記とは異なり、1行のアクションで使用することができる。事例：</p>
<pre>Loop
    x *= 2
Until x &gt; y</pre>
<p><i>Until</i>は、どんなループやForでも使える。事例：</p>
<pre>Loop Read, A_ScriptFullPath
    lines .= A_LoopReadLine . "`n"
Until A_Index=5  <em>; Read the first five lines.</em>
MsgBox lines
</pre>
<p><a href="../Variables.htm#Index">A_Index</a>が <i>Expression</i>で使用されている場合、ちょうど終了した反復のインデックスが格納される。</p>

<h2 id="Related">関連</h2>
<p><a href="Loop.htm">Loop</a>、<a href="While.htm">Whileループ</a>、<a href="For.htm">Forループ</a>、<a href="Break.htm">Break</a>、<a href="Continue.htm">Continue</a>、<a href="Block.htm">ブロック</a>、<a href="LoopFiles.htm">ファイルループ</a>、<a href="LoopReg.htm">レジストリループ</a>、<a href="LoopRead.htm">ファイル読み込みループ</a>、<a href="LoopParse.htm">解析ループ</a>、<a href="If.htm">If</a></p>

</body>
</html>
