<!DOCTYPE HTML>
<html lang="ja">
<head>
<title>MouseClick - 構文と使用法｜AutoHotkey v2</title>
<meta name="description" content="MouseClick機能は、マウスボタンのクリックや長押し、マウスホイールの回転を行う機能です。" />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>MouseClick</h1>

<p>マウスのボタンをクリックまたは長押しするか、マウスのホイールを回転させます。注：The <a href="Click.htm">Click</a> function is generally more flexible and easier to use.</p>

<pre class="Syntax"><span class="func">MouseClick</span> <span class="optional">WhichButton, X, Y, ClickCount, Speed, DownOrUp, Relative</span></pre>
<h2 id="Parameters">パラメータ</h2>
<dl>

  <dt>WhichButton</dt>
  <dd>
    <p>型：<a href="../Concepts.htm#strings">文字列</a></p>
    <p>If blank or omitted, it defaults to Left (the left mouse button). Otherwise, specify the button to click or the rotate/push direction of the mouse wheel.</p>
    <p><strong>Button:</strong> Left, Right, Middle (or just the first letter of each of these); or X1 (fourth button) or X2 (fifth button). 事例：<code>MouseClick "X1"</code>.</p>
    <p>左はプライマリーボタン、右はセカンダリーボタンに対応します。ユーザーがシステム設定でボタンを入れ替えると、ボタンの物理的な位置は入れ替わりますが、効果は変わりません。</p>
    <p><strong>Mouse wheel:</strong> Specify WheelUp or WU to turn the wheel upward (away from you); specify WheelDown or WD to turn the wheel downward (toward you). ホイールを左に押す場合はWheelLeft（またはWL）、右に押す場合はWheelRight（またはWR）をそれぞれ指定します。<em>ClickCount</em>は、ホイールを回すノッチの数です。</p>
  </dd>

  <dt>X, Y</dt>
  <dd>
    <p>型：<a href="../Concepts.htm#numbers">整数</a></p>
    <p>省略された場合は、カーソルの現在位置が使用されます。Otherwise, specify the X and Y coordinates to which the mouse cursor is moved prior to clicking. 座標は、<a href="CoordMode.htm">CoordMode</a>関数を使用して変更した場合を除いて、アクティブウィンドウのクライアント領域を基準にしています。</p>
  </dd>

  <dt>ClickCount</dt>
  <dd>
    <p>型：<a href="../Concepts.htm#numbers">整数</a></p>
    <p>省略されたときは、初期値は 1 です。Otherwise, specify the number of times to click the mouse button or turn the mouse wheel.</p>
  </dd>

  <dt>Speed</dt>
  <dd>
    <p>型：<a href="../Concepts.htm#numbers">整数</a></p>
    <p>省略されたときは、<a href="SetDefaultMouseSpeed.htm">SetDefaultMouseSpeed</a>で設定された速度（設定されていないときは2）が初期値として使用されます。そうでないときは、マウスを動かす速度を0（最速） から100（最低）の範囲で指定します。スピードを0にすると、マウスが瞬時に動きます。</p>
    <p><a href="SendMode.htm">SendInput/Playモード</a>では<em>Speed</em>は無視され、マウスは瞬時に移動します（ただし、<a href="SetMouseDelay.htm">SetMouseDelay</a>にはSendPlayに適用されるモードがあります）。デモンストレーション用のスクリプトのためなどにマウスを視覚的にゆっくりと動かすには、<code><a href="Send.htm#Click">SendEvent "{Click 100 200}"</a></code>または<code><a href="SendMode.htm">SendMode</a> "Event"</code>を使用します（必要に応じて<a href="BlockInput.htm">BlockInput</a>と組み合わせてください。）。</p>
  </dd>

  <dt>DownOrUp</dt>
  <dd>
    <p>型：<a href="../Concepts.htm#strings">文字列</a></p>
    <p>If blank or omitted, each click consists of a down-event followed by an up-event. そうでなければ、次の文字のうち、ひとつを指定してください。</p>
    <p><strong>D：</strong>マウスボタンを押しながら離さない（ダウンイベントを発生させます）。</p>
    <p><strong>U:</strong>マウスボタンを離す（つまりアップイベントを発生させます）。</p>
  </dd>

  <dt>Relative</dt>
  <dd>
    <p>型：<a href="../Concepts.htm#strings">文字列</a></p>
    <p>If blank or omitted, the X and Y coordinates will be used for absolute positioning. そうでなければ、次の文字を指定します。</p>
    <p><strong>R：</strong>X、Y座標は、現在のマウス位置からのオフセットとして扱われます。つまり、カーソルは現在位置から右にXピクセル（負の場合は左）、下にYピクセル（負の場合は上）だけ移動します。</p>
  </dd>

</dl>

<h2 id="Remarks">備考</h2>
<p><a href="SendMode.htm">SendModeで</a>設定された送信方式を使用します。</p>
<p>The <a href="Click.htm">Click</a> function is recommended over MouseClick because it is generally easier to use. ただし、MouseClickは<em>Speed</em>パラメータをサポートしていますが、Clickによる移動速度の調整は<a href="SetDefaultMouseSpeed.htm">SetDefaultMouseSpeed</a>を使用する必要があります。</p>
<p>シフトクリックやコントロールクリックを行うには、以下の例のように操作の前後に<a href="Send.htm">送信</a>機能を使用します：</p>
<pre><em>; Example #1: </em>
Send "{Control down}"
MouseClick "left", 55, 233
Send "{Control up}"</pre>
<pre>
<em>; Example #2:</em>
Send "{Shift down}"
MouseClick "left", 55, 233
Send "{Shift up}"</pre>
<p><a href="SendMode.htm">SendPlayモード</a>は、他のモードに比べ、より幅広いゲームにおいてマウスイベントを正常に発生させることができます。また、アプリケーションやゲームによっては、マウスの動きが速いと追従性が悪くなることがあります。<em>speed</em>パラメータまたは<a href="SetDefaultMouseSpeed.htm">SetDefaultMouseSpeed</a>を使用すると、速度を下げることができます（デフォルトの<a href="SendMode.htm">SendEventモードのみ</a>）。</p>
<p>アプリケーションによっては、マウスホイールの<em>ClickCount</em>が1以上でないと従わないものがあります。それらには、以下のような<a href="Loop.htm">Loop</a>を使用します：</p>
<pre>Loop 5
    MouseClick "WheelUp"</pre>
<p><a href="BlockInput.htm">BlockInput</a>関数を使用すると、ユーザーによる物理的なマウス操作が、マウス関数によって生成されるシミュレーションマウスイベントを妨害することを防ぐことができます。ただし、<a href="SendMode.htm">SendInput/Play</a>モードでは、ユーザーの物理的なマウス操作を自動的に後回しにするため、一般にこの操作は必要ありません。</p>
<p>マウスのクリックダウンとクリックアップのたびに、自動的に遅延が発生します（<a href="SendMode.htm">SendInputモード</a>とマウスホイールを回す場合を除く）。ディレイの長さを変更する場合は、<a href="SetMouseDelay.htm">SetMouseDelay</a>を使用します。</p>
<h2 id="Related">関連</h2>
<p><a href="CoordMode.htm">CoordMode</a>, <a href="SendMode.htm">SendMode</a>, <a href="SetDefaultMouseSpeed.htm">SetDefaultMouseSpeed</a>, <a href="SetMouseDelay.htm">SetMouseDelay</a>, <a href="Click.htm">Click</a>, <a href="MouseClickDrag.htm">MouseClickDrag</a>, <a href="MouseGetPos.htm">MouseGetPos</a>, <a href="MouseMove.htm">MouseMove</a>, <a href="ControlClick.htm">ControlClick</a>, <a href="BlockInput.htm">BlockInput</a></p>
<h2 id="Examples">例</h2>
<div class="ex" id="ExDoubleClick">
<p><a class="ex_number" href="#ExDoubleClick"></a> 現在のマウス位置でダブルクリックする。</p>
<pre>MouseClick "left"
MouseClick "left"</pre>
</div>

<div class="ex" id="ExDoubleClick2">
<p><a class="ex_number" href="#ExDoubleClick2"></a> Same as above.</p>
<pre>MouseClick "left",,, 2</pre>
</div>

<div class="ex" id="ExMove">
<p><a class="ex_number" href="#ExMove"></a> マウスカーソルを特定の位置に移動させ、右クリックを1回します。</p>
<pre>MouseClick "right", 200, 300</pre>
</div>

<div class="ex" id="ExWheel">
<p><a class="ex_number" href="#ExWheel"></a> マウスホイールの回転をシミュレートします。</p>
<pre>#up::MouseClick "WheelUp",,, 2  <em>; Turn it by two notches.</em>
#down::MouseClick "WheelDown",,, 2</pre>
</div>

</body>
</html>
