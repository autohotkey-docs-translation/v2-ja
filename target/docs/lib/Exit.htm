<!DOCTYPE HTML>
<html lang="ja">
<head>
<title>Exit - 構文と使用法｜AutoHotkey v2</title>
<meta name="description" content="Exit関数は、現在のスレッドを終了させる関数です。" />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>Exit</h1>

<p><a href="../misc/Threads.htm">現在のスレッド</a>を終了します。</p>

<pre class="Syntax"><span class="func">Exit</span> <span class="optional">ExitCode</span></pre>
<h2 id="Parameters">パラメータ</h2>
<dl>

  <dt>ExitCode</dt>
  <dd>
    <p>Type: <a href="../Concepts.htm#numbers">Integer</a></p>
    <p>省略されたときは、初期値は0になります。0は伝統的に処理に成功したことを示します。そうでないときは、スクリプトの終了時に呼び出し元に返される-2147483648から2147483647までの整数を指定します。このコードは、他のスクリプト（RunWait経由）やバッチ（.bat）ファイルなど、スクリプトを生成したすべてのプログラムからアクセスできます。</p>
  </dd>

</dl>

<h2 id="Remarks">備考</h2>
<p>Exit関数は、<a href="../misc/Threads.htm">現在のスレッド</a>のみを終了させます。つまり、<a href="Menu.htm">メニュー</a>、<a href="SetTimer.htm">タイマー</a>、<a href="../Hotkeys.htm">ホットキー</a>などの関数が直接または間接的に呼び出すスタックは、それぞれで<a href="Return.htm">Return</a>がすぐに発生したかのように、すべてから返されます。このような関数の内部で直接使用する場合、または<a href="../Language.htm#global-code">グローバルコード</a>で使用する場合、Exitは<a href="Return.htm">Return</a>と同等です。</p>
<p>スクリプトが<a href="../Scripts.htm#persistent">永続的</a>でなく、これが最後のスレッドである場合、スクリプトはスレッドが終了した後に終了します。</p>

<p><a href="ExitApp.htm">ExitApp</a>を使用して、<a href="../Scripts.htm#persistent">永続的な</a>スクリプトを完全に終了させることができます。</p>

<h2 id="Related">関連</h2>
<p><a href="ExitApp.htm">ExitApp</a>, <a href="OnExit.htm">OnExit</a>, <a href="../Functions.htm">Functions</a>, <a href="Return.htm">Return</a>, <a href="../misc/Threads.htm">Threads</a>, <a href="Persistent.htm">Persistent</a></p>
<h2 id="Examples">例</h2>
<div class="ex" id="ExBasic">
<p><a class="ex_number" href="#ExBasic"></a> この例では、Exit関数がcall_exit関数だけでなく、呼び出し関数も終了させる。</p>
<pre>
#z::
{
    call_exit
    MsgBox "This MsgBox will never happen because of the Exit."
    call_exit()
    {
        Exit <em>; 呼び出した関数と同様に、この関数も終了させる。</em>
    }
}
</pre>
</div>

</body>
</html>
