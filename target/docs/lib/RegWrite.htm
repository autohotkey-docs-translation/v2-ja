<!DOCTYPE HTML>
<html lang="ja">
<head>
<title>RegWrite - 構文と使用法｜AutoHotkey v2</title>
<meta name="description" content="RegWrite関数は、レジストリに値を書き込む関数です。" />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>RegWrite</h1>

<p>レジストリに値を書き込みます。</p>

<pre class="Syntax"><span class="func">RegWrite</span> Value, ValueType, KeyName <span class="optional">, ValueName</span>
<span class="func">RegWrite</span> Value <span class="optional">, ValueType, , ValueName</span>
</pre>
<h2 id="Parameters">パラメータ</h2>
<dl>

  <dt>値</dt>
  <dd>
    <p>型：<a href="../Concepts.htm#strings">文字列</a>または<a href="../Concepts.htm#numbers">整数</a></p>
    <p>書き込むべき値。長いテキスト値は、<a href="../Scripts.htm#continuation">継続セクション</a>によっていくつかの短い行に分割することができ、読みやすさや保守性が向上する可能性があります。</p>
  </dd>

  <dt>ValueType</dt>
  <dd>
    <p>型：<a href="../Concepts.htm#strings">文字列</a></p>
    <p>REG_SZ、REG_EXPAND_SZ、REG_MULTI_SZ、REG_DWORD、またはREG_BINARYのいずれかでなければなりません。</p>
    <p><em>ValueType</em> can be omitted only if <em>KeyName</em> is omitted and the current <a href="LoopReg.htm">registry loop</a> item is a value, as noted below.</p>
  </dd>

  <dt>KeyName</dt>
  <dd>
    <p>型：<a href="../Concepts.htm#strings">文字列</a></p>
    <p>The full name of the registry key, e.g. <code>"HKLM\Software\SomeApplication"</code>.</p>
    <p>This must start with HKEY_LOCAL_MACHINE (or HKLM), HKEY_USERS (or HKU), HKEY_CURRENT_USER (or HKCU), HKEY_CLASSES_ROOT (or HKCR), or HKEY_CURRENT_CONFIG (or HKCC).</p>
    <p>To access a <a href="LoopReg.htm#remote">remote registry</a>, prepend the computer name and a backslash, e.g. <code>"\\workstation01\HKLM"</code>.</p>
    <p><em>KeyName</em>は <a href="LoopReg.htm">レジストリループ</a>が実行されている場合のみ省略可能で、その場合、現在のループアイテムのキーがデフォルトとなる。項目がサブキーの場合、デフォルトでそのサブキーのフルネームが使用されます。項目が値の場合、<em>ValueType</em>と<em>ValueName</em>のデフォルトはその値の型と名前であるが、オーバーライドすることができる。</p>
  </dd>

  <dt>ValueName</dt>
  <dd>
    <p>型：<a href="../Concepts.htm#strings">文字列</a></p>
    <p>If unset or omitted, the key's default value will be used (except as noted above), which is the value displayed as "(Default)" by RegEdit. Otherwise, specify the name of the value that will be written to. </p>
  </dd>

</dl>

<h2 id="Error_Handling">エラー処理</h2>
<p>失敗すると<a href="Error.htm#OSError">OSError</a>が投げられる。</p>
<p><a href="../Variables.htm#LastError">A_LastError</a>には、オペレーティングシステムのGetLastError()関数の結果が設定されます。</p>

<h2 id="Remarks">備考</h2>
<p><em>KeyName</em>が存在しないサブキーを指定した場合、RegWriteはそれを作成しようとします（必要であれば、その祖先も一緒に）。RegWriteはルートキーに直接書き込むことができますが、OSによってはHKEY_CURRENT_USERの最上位に書き込むことを拒否する場合があります。</p>
<p>値を書き込まずにキーを作成するには、<a href="RegCreateKey.htm">RegCreateKey</a>を使用します。</p>
<p><em>ValueType</em>がREG_DWORDの場合、<em>Value</em>は-2147483648から4294967295（0xFFFFFFF）の間とする。レジストリでは、REG_DWORDの値は常に正の10進数で表現されます。<a href="RegRead.htm">RegRead</a>などで負の数として読み込む場合は、<code>OutputVar := OutputVar &lt;&lt; 32 &gt;&gt;32</code>などで符号付き32ビット整数に変換してください。</p>
<p>REG_BINARYキーを書くときは、16進数の文字列を使用します。例えば、REG_BINARY値01,a9,ff,77は、01A9FF77という文字列で書くことができます。</p>
<p>REG_MULTI_SZキーを書くときは、各コンポーネントと次のコンポーネントをラインフィード文字（`n）で区切る必要があります。最後のコンポーネントは、オプションとして、ラインフィードで終了することもできる。ブランク部品は不可です。つまり、2つ並んだ改行（`n`n）を指定すると、予想以上に短い値がレジストリに書き込まれることになるので、指定しないようにしましょう。</p>
<p>複数のレジストリキーや値を取得し、操作するためには、<a href="LoopReg.htm">レジストリループ</a>の利用を検討します。</p>
<p>リモートコンピュータのレジストリにアクセスする方法については、<a href="LoopReg.htm#remote">レジストリループ</a>の備考を参照してください。</p>
<p>32ビットスクリプトでレジストリの64ビットセクションのエントリを読み書きしたり、その逆を行うには、<a href="SetRegView.htm">SetRegView</a>を使用します。</p>

<h2 id="Related">関連</h2>
<p><a href="RegCreateKey.htm">RegCreateKey</a>, <a href="RegDelete.htm">RegDelete</a>, <a href="RegDeleteKey.htm">RegDeleteKey</a>, <a href="RegRead.htm">RegRead</a>, <a href="LoopReg.htm">registry loop</a>, <a href="SetRegView.htm">SetRegView</a>, <a href="IniWrite.htm">IniWrite</a></p>

<h2 id="Examples">例</h2>
<div class="ex" id="ExBasic">
<p><a class="ex_number" href="#ExBasic"></a> レジストリに文字列を書き込みます。</p>
<pre>RegWrite "Test Value", "REG_SZ", "HKEY_LOCAL_MACHINE\SOFTWARE\TestKey", "MyValueName"</pre>
</div>

<div class="ex" id="ExBinary">
<p><a class="ex_number" href="#ExBinary"></a> レジストリにバイナリデータを書き込みます。</p>
<pre>RegWrite "01A9FF77", "REG_BINARY", "HKEY_CURRENT_USER\Software\TEST_APP", "TEST_NAME"</pre>
</div>

<div class="ex" id="ExMulti">
<p><a class="ex_number" href="#ExMulti"></a> レジストリに複数行の文字列を書き込みます。</p>
<pre>RegWrite "Line1`nLine2", "REG_MULTI_SZ", "HKEY_CURRENT_USER\Software\TEST_APP", "TEST_NAME"</pre>
</div>

</body>
</html>
