<!DOCTYPE HTML>
<html lang="ja">
<head>
<title>StatusBarWait - 構文と使用法｜AutoHotkey v2</title>
<meta name="description" content="StatusBarWait関数は、ウィンドウのステータスバーに指定された文字列が含まれるまで待機する。" />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>StatusBarWait</h1>

<p>ウィンドウのステータスバーに指定された文字列が含まれるまで待ちます。</p>

<pre class="Syntax"><span class="func">StatusBarWait</span> <span class="optional">BarText, Timeout, Part#, WinTitle, WinText, Interval, ExcludeTitle, ExcludeText</span></pre>
<h2 id="Parameters">パラメータ</h2>
<dl>

  <dt>BarText</dt>
  <dd>
    <p>型：<a href="../Concepts.htm#strings">文字列</a></p>
    <p>未設定または省略された場合、この関数はステータスバーが空白になるのを待つ。それ以外の場合は、関数が表示されるのを待つテキストまたは部分テキストを指定する。テキストは<em>大文字</em>と小文字を区別し、マッチング動作は<a href="SetTitleMatchMode.htm">SetTitleMatchMode</a>によって決定される。</p>
    <p>バーのテキストが<em>変わる</em>のを待つには、ループ内で<a href="StatusBarGetText.htm">StatusBarGetText</a>を使うか、このページの一番下にあるRegExの例を使う。</p>
  </dd>
  
  <dt>タイムアウト</dt>
  <dd>
    <p>型：<a href="../Concepts.htm#numbers">整数</a>または<a href="../Concepts.htm#numbers">浮動小数点</a></p>
    <p>未設定または省略された場合、この関数は無期限に待機する。そうでない場合は、タイムアウトするまでの秒数（小数点を含むことができる）を指定する。</p>
  </dd>
  
  <dt>Part#</dt>
  <dd>
    <p>型：<a href="../Concepts.htm#numbers">整数</a></p>
    <p>未設定または省略された場合、デフォルトは1であり、これは通常、関心のあるテキストを含む部分である。それ以外の場合は、検索するバーの品番を指定する。</p>
  </dd>

  <dt>WinTitle, WinText, ExcludeTitle, ExcludeText</dt>
  <dd>
    <p>型：<a href="../Concepts.htm#strings">文字列</a>、<a href="../Concepts.htm#numbers">整数</a>、または<a href="../Objects.htm">オブジェクト</a></p>
    <p>これらの各項目が未設定または省略された場合、<a href="../misc/WinTitle.htm#LastFoundWindow">最後に見つかったウィンドウ</a>が使用される。そうでない場合は、<em>WinTitle</em>に <a href="../misc/WinTitle.htm">ウィンドウタイトル</a>またはターゲットウィンドウを識別するための<a href="../misc/WinTitle.htm">他の基準</a>、および/または<em>WinText</em>にターゲットウィンドウの単一のテキスト要素からの部分文字列（同梱のWindow Spyユーティリティによって明らかにされる）を指定します。隠しテキスト要素は、<a href="DetectHiddenText.htm">DetectHiddenText</a>がオンになっている場合に検出されます。タイトルまたはテキストに<em>ExcludeTitle</em>または<em>ExcludeText</em>が含まれているウィンドウは考慮されません。</p>
  </dd>

  <dt>Interval</dt>
  <dd>
    <p>型：<a href="../Concepts.htm#numbers">整数</a></p>
    <p>未設定または省略された場合、デフォルトは50。それ以外の場合は、関数が待機している間にステータス・バーをチェックする頻度を指定する（ミリ秒単位）。</p>
  </dd>

</dl>

<h2 id="Return_Value">戻り値</h2>
<p>型：<a href="../Concepts.htm#boolean">整数（ブーリアン）</a></p>
<p>この関数は、マッチが見つかった場合は1（true）を返し、タイムアウトした場合は0（false）を返します。</p>

<h2 id="Error_Handling">エラー処理</h2>
<p>例外は以下のいずれかの場合にスローされる：</p>
<ul>
  <li><a href="Error.htm#TargetError">TargetError</a>:対象のウィンドウが見つからないか、標準のステータスバーがない。</li>
  <li><a href="Error.htm#OSError">OSError</a>:SB_GETPARTS メッセージの送信に問題があったか、または 2000 ミリ秒以内に応答を受信しなかった。</li>
  <li><a href="Error.htm#OSError">OSError</a>:ステータス・バーを所有するプロセス内でメモリが割り当てられなかった。</li>
</ul>

<h2 id="Remarks">備考</h2>
<p>この関数は、ウィンドウ上の最初の<em>標準</em>ステータスバーを読み込もうとする（Microsoft common control：msctls_statusbar32). プログラムによっては、独自のステータス・バーやMSコモン・コントロールの特別なバージョンを使用するものがあり、その場合はそのようなバーはサポートされない。</p>
<p>通常、ループ内で<a href="StatusBarGetText.htm">StatusBarGetText</a>を使用するよりも、<a href="StatusBarGetText.htm">StatusBarGetText</a>を繰り返し呼び出すことによるオーバーヘッドを回避する最適化を含む StatusBarWait を使用する方が効率的です。</p>
<p>StatusBarWaitは、マッチ待ちを開始する前にターゲット・ウィンドウを決定する。そのターゲットウィンドウが閉じられた場合、指定された<em>WinTitle</em>と <em>WinText</em>に一致する別のウィンドウがあっても、関数は待機を停止します。</p>
<p>機能が待機状態にある間、<a href="../Hotkeys.htm">ホットキー</a>、<a href="Menu.htm">カスタムメニュー項目</a>、または<a href="SetTimer.htm">タイマー</a>によって新しい<a href="../misc/Threads.htm">スレッド</a>を起動することができます。</p>
<p>ウィンドウのタイトルとテキストは大文字と小文字を区別します。<a href="DetectHiddenWindows.htm">DetectHiddenWindows</a>がオンになっていない限り、隠しウィンドウは検出されません。</p>

<h2 id="Related">関連</h2>
<p><a href="StatusBarGetText.htm">StatusBarGetText</a>, <a href="WinGetTitle.htm">WinGetTitle</a>, <a href="WinGetText.htm">WinGetText</a>, <a href="ControlGetText.htm">ControlGetText</a></p>
<h2 id="Examples">例</h2>
<div class="ex" id="ExSearch">
<p><a class="ex_number" href="#ExSearch"></a> 既存のエクスプローラ/検索ウィンドウに新しい検索パターンを入力します。</p>
<pre>if WinExist("Search Results") <em>; Sets the Last Found window to simplify the below.</em>
{
    WinActivate
    Send "{tab 2}!o*.txt{enter}"  <em>; In the Search window, enter the pattern to search for.</em>
    Sleep 400  <em>; Give the status bar time to change to "Searching".</em>
    if StatusBarWait("found", 30)
        MsgBox "The search successfully completed."
    else
        MsgBox "The function timed out."
}</pre>
</div>

<div class="ex" id="ExChange">
<p><a class="ex_number" href="#ExChange"></a> アクティブウィンドウのステータスバーが変わるのを待つ。</p>
<pre>SetTitleMatchMode "RegEx"  <em>; Accept <a href="SetTitleMatchMode.htm#RegEx">regular expressions</a> for use below.</em>
if WinExist("A")  <em>; Set the last-found window to be the active window (for use below).</em>
{
    OrigText := StatusBarGetText()
    StatusBarWait "^(?!^\Q" OrigText "\E$)"  <em>; This regular expression waits for any change to the text.</em>
}</pre>
</div>

</body>
</html>
