<!DOCTYPE HTML>
<html lang="en">
<head>
<title>OnExit - 構文と使用法｜AutoHotkey v2</title>
<meta name="description" content="The OnExit function registers a function to be called automatically whenever the script exits." />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>OnExit</h1>

<p>Registers a <a href="../Functions.htm">function</a> to be called automatically whenever the script exits.</p>

<pre class="Syntax"><span class="func">OnExit</span> Callback <span class="optional">, AddRemove</span></pre>
<h2 id="Parameters">パラメータ</h2>
<dl>

  <dt>Callback</dt>
  <dd>
    <p>型：<a href="../misc/Functor.htm">機能オブジェクト</a></p>
    <p>The function to call.</p>
    <p>The callback accepts two parameters and can be <a href="../Functions.htm#intro">defined</a> as follows:</p>
    <pre class="NoIndent">MyCallback(ExitReason, ExitCode) { ...</pre>
    <p>パラメータに与える名前は重要ではないが、以下の値が順次割り当てられる：</p>
    <ol>
      <li>The exit reason (one of the words from the <a href="#ExitReason">table below</a>).</li>
      <li>The exit code passed to <a href="Exit.htm">Exit</a> or <a href="ExitApp.htm">ExitApp</a>.</li>
    </ol>
    <p>対応する情報が不要な場合、コールバックのパラメータリストの最後から1つ以上のパラメータを省略することができますが、この場合、<code>MyCallback(Param1, *)</code>のように、最後のパラメータとしてアスタリスクを指定する必要があります。</p>
    <p>The callback can return a non-zero integer to prevent the script from exiting (with some <a href="#close">rare exceptions</a>) and calling more callbacks. Otherwise, the script exits after all registered callbacks are called.</p>
  </dd>
  
  <dt>AddRemove</dt>
  <dd>
    <p>型：<a href="../Concepts.htm#numbers">整数</a></p>
    <p>省略されたときは、初期値は 1 です。それ以外の場合は、次のいずれかの番号を指定してください：</p>
    <ul>
      <li>1 = 以前に登録されたコールバックの後にコールバックを呼び出します。</li>
      <li>-1 = 以前に登録されたコールバックより先にコールバックを呼び出します。</li>
      <li>0 = コールバックを呼び出さない。</li>
    </ul>
  </dd>

</dl>

<h2 id="Remarks">備考</h2>
<p>Any number of callbacks can be registered. A callback usually should not call ExitApp; if it does, the script terminates immediately.</p>
<p>The callbacks are called when the script exits by any means (except when it is killed by something like "End Task"). また、<a href="_SingleInstance.htm">#SingleInstance</a>や <a href="Reload.htm">Reload</a>で前のインスタンスの終了を要求されたときにも呼び出されます。</p>
<p>スクリプトは、<code>OnMessage(0x0011, On_WM_QUERYENDSESSION)</code>によって、システムのシャットダウンやログオフを検出し、オプションで中止することができます（動作するスクリプトについては、<a href="OnMessage.htm#ExShutdown">OnMessage の例 #2</a>を参照）。</p>
<p>OnExit<a href="../misc/Threads.htm">スレッド</a>は <a href="_MaxThreads.htm">#MaxThreads</a>に従いません（必要なときに常に起動します）。また、実行中は、<a href="../Hotkeys.htm">ホットキー</a>、<a href="Menu.htm">カスタムメニュー項目</a>、<a href="SetTimer.htm">時間指定サブルーチン</a>など、いかなる<a href="../misc/Threads.htm">スレッド</a>によっても中断することができない。ただし、トレイメニューやメインメニューでユーザーが「終了」を選択した場合や、<a href="Reload.htm">Reload</a>や <a href="_SingleInstance.htm">#SingleInstance</a>の結果、スクリプトの終了を求められた場合は、中断されます（スクリプトも終了します）。Because of this, a callback should be designed to finish quickly unless the user is aware of what it is doing.</p>
<p>OnExit<a href="../misc/Threads.htm">スレッド</a>がランタイムエラーなどの失敗条件に遭遇した場合、スクリプトは終了します。</p>
<p>If the OnExit <a href="../misc/Threads.htm">thread</a> was launched due to <a href="Exit.htm">Exit</a> or <a href="ExitApp.htm">ExitApp</a> that specified an exit code, that exit code is used unless a callback returns 1 (true) to prevent exit or calls ExitApp.</p>
<p>Whenever an exit attempt is made, each callback starts off fresh with the default values for settings such as <a href="SendMode.htm">SendMode</a>. これらのデフォルトは、<a href="../Scripts.htm#auto">スクリプト起動</a>時に変更することができます。</p>

<h2 id="ExitReason">Exit Reasons</h2>
<table class="info">
  <tr>
    <th>Reason</th>
    <th abbr="説明">説明</th>
  </tr>
  <tr id="logoff">
    <td>Logoff</td>
    <td>ユーザーがログオフしている。</td>
  </tr>
  <tr>
    <td>Shutdown</td>
    <td><a href="Shutdown.htm">シャットダウン</a>機能などで、システムがシャットダウンまたは再起動中です。</td>
  </tr>
  <tr id="close">
    <td>Close</td>
    <td>
      <p>スクリプトにWM_CLOSEまたはWM_QUITメッセージが送信されたか、クリティカルエラーが発生したか、または他の方法で終了しています。いずれも異常ですが、WM_CLOSEは、スクリプトのメインウィンドウで<a href="WinClose.htm">WinClose</a>が使用されたことが原因かもしれません。スクリプトを終了させずにウィンドウを閉じる（隠す）には、<a href="WinHide.htm">WinHide</a>を使用します。</p>
      <p>クリティカルエラーや<a href="../Program.htm#main-window">メインウィンドウ</a>の破壊によってスクリプトが終了する場合、OnExitスレッドが完了した後に無条件で終了します。</p>
      <p>メインウィンドウが破壊されている場合、存在しても表示できないことがあります。この状態は、<a href="OnMessage.htm">OnMessage</a>でWM_DESTROYメッセージを監視することで検出することができます。</p>
    </td>
  </tr>
  <tr>
    <td>Error</td>
    <td><a href="../Scripts.htm#persistent">永続的</a>でないスクリプトでランタイムエラーが発生しました。ランタイムエラーの例として、<a href="Run.htm">Run/RunWait</a>が指定されたプログラムやドキュメントを起動できないことが挙げられます。</td>
  </tr>
  <tr>
    <td>Menu</td>
    <td>The user selected Exit from the <a href="../Program.htm#main-window">main window</a>'s menu or from the standard tray menu.</td>
  </tr>
  <tr>
    <td>Exit</td>
    <td><a href="Exit.htm">Exit</a> or <a href="ExitApp.htm">ExitApp</a> was used (includes <a href="Menu.htm">custom menu items</a>).</td>
  </tr>
  <tr>
    <td>Reload</td>
    <td>スクリプトは、<a href="Reload.htm">リロード</a>機能またはメニュー項目によって再読み込みされています。</td>
  </tr>
  <tr>
    <td>Single</td>
    <td>スクリプトは、<a href="_SingleInstance.htm">#SingleInstance</a>の結果、自分自身の新しいインスタンスに置き換えられています。</td>
  </tr>
</table>

<h2 id="Related">関連</h2>
<p><a href="OnError.htm">OnError</a>, <a href="OnMessage.htm">OnMessage</a>, <a href="CallbackCreate.htm">CallbackCreate</a>, <a href="OnClipboardChange.htm">OnClipboardChange</a>, <a href="ExitApp.htm">ExitApp</a>, <a href="Shutdown.htm">Shutdown</a>, <a href="Persistent.htm">Persistent</a>, <a href="../misc/Threads.htm">Threads</a>, <a href="Return.htm">Return</a></p>

<h2 id="Examples">例</h2>
<div class="ex" id="ExBasic">
<p><a class="ex_number" href="#ExBasic"></a> スクリプトを終了する前に、ユーザーに問いかけます。To test this example, right-click the <a href="../Program.htm#tray-icon">tray icon</a> and click Exit.</p>
<pre class="NoIndent">Persistent<em>; スクリプトが自動的に終了するのを防ぎます。</em>
OnExit ExitFunc

ExitFunc(ExitReason, ExitCode)
{
    if ExitReason != "Logoff" and ExitReason != "Shutdown"
    {
        Result := MsgBox("Are you sure you want to exit?",, 4)
        if Result = "No"
            return 1  <em>; Callbacks must return non-zero to avoid exit.</em>
    }
    <em>; Do not call ExitApp -- that would prevent other callbacks from being called.</em>
}</pre>
</div>

<div class="ex" id="ExFnObj">
<p><a class="ex_number" href="#ExFnObj"></a> 終了時に呼び出されるメソッドを登録します。</p>
<pre><a href="Persistent.htm">Persistent</a>  <em>; Prevent the script from exiting automatically.</em>
OnExit MyObject.Exiting

class MyObject
{
    static Exiting(*)
    {
        MsgBox "MyObject is cleaning up prior to exiting..."
        <em>/*
        this.SayGoodbye()
        this.CloseNetworkConnections()
        */</em>
    }
}</pre>
</div>

</body>
</html>
