<!DOCTYPE HTML>
<html lang="ja">
<head>
<title>OnExit - Syntax &amp; Usage | AutoHotkey v2</title>
<meta name="description" content="The OnExit function causes the specified function to be called automatically when the script exits." />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>OnExit</h1>

<p>Causes the specified function to be called automatically when the script exits.</p>

<pre class="Syntax"><span class="func">OnExit</span> Function <span class="optional">, AddRemove</span></pre>
<h2 id="Parameters">Parameters</h2>
<dl>

  <dt>Function</dt>
  <dd>
    <p>Type: <a href="../misc/Functor.htm">Function Object</a></p>
    <p>The function object to call when the script is exiting. The function's parameters and return value are described <a href="#Function">below</a>.</p>
  </dd>
  
  <dt>AddRemove</dt>
  <dd>
    <p>Type: <a href="../Concepts.htm#numbers">Integer</a></p>
    <p>If omitted, it defaults to 1 (call the function after any previously registered functions). Otherwise, specify one of the following numbers:</p>
    <ul>
      <li>1 = Call the function after any previously registered functions.</li>
      <li>-1 = Call the function before any previously registered functions.</li>
      <li>0 = Do not call the function.</li>
    </ul>
  </dd>

</dl>

<h2 id="Function">Function</h2>
<p>The function should accept two parameters:</p>
<pre class="Syntax"><i>FunctionName</i>(ExitReason, ExitCode)</pre>
<dl>
  <dt>ExitReason</dt>
  <dd>
    <p>Type: <a href="../Concepts.htm#strings">String</a></p>
    <p>One of the following words:</p>
    <table class="info" id="ExitReason">
      <tr>
    <th>Word</th>
    <th>Meaning</th>
  </tr>
  <tr id="logoff">
    <td>Logoff</td>
    <td>The user is logging off.</td>
  </tr>
  <tr>
    <td>Shutdown</td>
    <td>The system is being shut down or restarted, such as by the <a href="Shutdown.htm">Shutdown</a> function.</td>
  </tr>
  <tr id="close">
    <td>Close</td>
    <td>
      <p>The script was sent a WM_CLOSE or WM_QUIT message, had a critical error, or is being closed in some other way. Although all of these are unusual, WM_CLOSE might be caused by <a href="WinClose.htm">WinClose</a> having been used on the script's main window. To close (hide) the window without terminating the script, use <a href="WinHide.htm">WinHide</a>.</p>
      <p>If the script is exiting due to a critical error or its <a href="../Program.htm#main-window">main window</a> being destroyed, it will unconditionally terminate after the OnExit thread completes.</p>
      <p>If the main window is being destroyed, it may still exist but cannot be displayed. This condition can be detected by monitoring the WM_DESTROY message with <a href="OnMessage.htm">OnMessage</a>.</p>
    </td>
  </tr>
  <tr>
    <td>Error</td>
    <td>A runtime error occurred in a script that is not <a href="../Scripts.htm#persistent">persistent</a>. An example of a runtime error is <a href="Run.htm">Run/RunWait</a> being unable to launch the specified program or document.</td>
  </tr>
  <tr>
    <td>Menu</td>
    <td>The user selected Exit from the main window's menu or from the standard tray menu.</td>
  </tr>
  <tr>
    <td>Exit</td>
    <td>The <a href="Exit.htm">Exit</a> or <a href="ExitApp.htm">ExitApp</a> function was used (includes <a href="Menu.htm">custom menu items</a>).</td>
  </tr>
  <tr>
    <td>Reload</td>
    <td>The script is being reloaded via the <a href="Reload.htm">Reload</a> function or menu item.</td>
  </tr>
  <tr>
    <td>Single</td>
    <td>The script is being replaced by a new instance of itself as a result of <a href="_SingleInstance.htm">#SingleInstance</a>.</td>
  </tr>
</table>
  </dd>
  <dt>ExitCode</dt>
  <dd>
    <p>Type: <a href="../Concepts.htm#numbers">Integer</a></p>
    <p>An integer between -2147483648 and 2147483647 that is returned to its caller when the script exits. This code is accessible to any program that spawned the script, such as another script (via RunWait) or a batch (.bat) file. Zero is traditionally used to indicate success.</p>
  </dd>
</dl>

<h3 id="Return_Value">Return Value</h3>
<p>The function can return a non-zero integer to prevent the script from exiting (with some <a href="#close">rare exceptions</a>) and subsequent functions from being called. Otherwise, the script exits after all registered functions are called.</p>

<h2 id="Remarks">Remarks</h2>
<p>Any number of OnExit functions can be registered. An OnExit function usually should not call ExitApp; if it does, the script terminates immediately.</p>
<p>OnExit functions are called when the script exits by any means (except when it is killed by something like "End Task"). It is also called whenever <a href="_SingleInstance.htm">#SingleInstance</a> and <a href="Reload.htm">Reload</a> ask a previous instance to terminate.</p>
<p>A script can detect and optionally abort a system shutdown or logoff via <code>OnMessage(0x0011, On_WM_QUERYENDSESSION)</code> (see <a href="OnMessage.htm#ExShutdown">OnMessage example #2</a> for a working script).</p>
<p>The OnExit <a href="../misc/Threads.htm">thread</a> does not obey <a href="_MaxThreads.htm">#MaxThreads</a> (it will always launch when needed). In addition, while it is running, it cannot be interrupted by any <a href="../misc/Threads.htm">thread</a>, including <a href="../Hotkeys.htm">hotkeys</a>, <a href="Menu.htm">custom menu items</a>, and <a href="SetTimer.htm">timed subroutines</a>. However, it will be interrupted (and the script will terminate) if the user chooses Exit from the tray menu or main menu, or the script is asked to terminate as a result of <a href="Reload.htm">Reload</a> or <a href="_SingleInstance.htm">#SingleInstance</a>. Because of this, an OnExit function should be designed to finish quickly unless the user is aware of what it is doing.</p>
<p>If the OnExit <a href="../misc/Threads.htm">thread</a> encounters a failure condition such as a runtime error, the script will terminate.</p>
<p>If the OnExit <a href="../misc/Threads.htm">thread</a> was launched due to an <a href="Exit.htm">Exit</a> or <a href="ExitApp.htm">ExitApp</a> function that specified an exit code, that exit code is used unless an OnExit function returns true (preventing exit) or calls ExitApp.</p>
<p>Whenever an exit attempt is made, each OnExit function starts off fresh with the default values for settings such as <a href="SendMode.htm">SendMode</a>. These defaults can be changed during <a href="../Scripts.htm#auto">script startup</a>.</p>

<h2 id="Related">Related</h2>
<p><a href="OnError.htm">OnError</a>, <a href="OnMessage.htm">OnMessage</a>, <a href="CallbackCreate.htm">CallbackCreate</a>, <a href="OnClipboardChange.htm">OnClipboardChange</a>, <a href="ExitApp.htm">ExitApp</a>, <a href="Shutdown.htm">Shutdown</a>, <a href="Persistent.htm">Persistent</a>, <a href="../misc/Threads.htm">Threads</a>, <a href="Return.htm">Return</a></p>

<h2 id="Examples">Examples</h2>
<div class="ex" id="ExBasic">
<p><a class="ex_number" href="#ExBasic"></a>  Asks the user before exiting the script. To test this example, right-click the tray icon and click Exit.</p>
<pre class="NoIndent">Persistent<em>; Prevent the script from exiting automatically.</em>
OnExit ExitFunc

ExitFunc(ExitReason, ExitCode)
{
    if ExitReason != "Logoff" and ExitReason != "Shutdown"
    {
        Result := MsgBox("Are you sure you want to exit?",, 4)
        if Result = "No"
            return 1<em>; OnExit functions must return non-zero to prevent exit.</em>
    }
    <em>; Do not call ExitApp -- that would prevent other OnExit functions from being called.</em>
}</pre>
</div>

<div class="ex" id="ExFnObj">
<p><a class="ex_number" href="#ExFnObj"></a>  Registers a method to be called on exit.</p>
<pre><a href="Persistent.htm">Persistent</a><em>; Prevent the script from exiting automatically.</em>
OnExit MyObject.Exiting

class MyObject
{
    static Exiting(*)
    {
        MsgBox "MyObject is cleaning up prior to exiting..."
        <em>/*
        this.SayGoodbye()
        this.CloseNetworkConnections()
        */</em>
    }
}</pre>
</div>

</body>
</html>
