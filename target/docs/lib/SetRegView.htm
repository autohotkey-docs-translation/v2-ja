<!DOCTYPE HTML>
<html lang="jac">
<head>
<title>SetRegView - 構文と使用法｜AutoHotkey v2</title>
<meta name="description" content="SetRegView関数は、RegRead、RegWrite、RegDelete、RegDeleteKey、Loop Regで使用するレジストリビューを設定し、32ビットスクリプトで64ビットレジストリビューにアクセスできるようにし、逆もまた然りです。" />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>SetRegView</h1>
<p><a href="RegRead.htm">RegRead</a>、<a href="RegWrite.htm">RegWrite</a>、<a href="RegDelete.htm">RegDelete</a>、<a href="RegDeleteKey.htm">RegDeleteKey</a>および<a href="LoopReg.htm">Loop Reg</a>が使用するレジストリビューを設定し、32ビットスクリプトで64ビットレジストリビューにアクセスできるようにします（逆も同様）。</p>
<pre class="Syntax"><span class="func">SetRegView</span> RegView</pre>

<h2 id="Parameters">パラメータ</h2>
<dl>

  <dt>RegView</dt>
  <dd>
      <p>型：<a href="../Concepts.htm#numbers">整数</a>または<a href="../Concepts.htm#strings">文字列</a></p>
      <p>32ビットアプリケーションのようにレジストリを表示する場合は<strong>32</strong>を、64ビットアプリケーションのようにレジストリを表示する場合は<strong>64</strong>を指定してください。</p>
      <p>通常の動作に戻す場合は、「<strong>Default</strong>」を指定します。</p>
  </dd>

</dl>

<h2 id="Return_Value">戻り値</h2>
<p>型：<a href="../Concepts.htm#strings">文字列</a></p>
<p>この関数は、前の設定を返します。32、64またはDefaultのいずれかです。</p>

<h2 id="Remarks">備考</h2>
<p>SetRegView関数が使われないときは、初期値は<em>Default</em>です。</p>
<p>この機能は、Windows 64ビット版でのみ有効です。Windows 32ビットでは効果がありません。</p>
<p>64ビットシステムでは、32ビットアプリケーションは、<a href="https://learn.microsoft.com/windows/win32/winprog64/running-32-bit-applications">WOW64</a>と呼ばれるWindowsのサブシステム上で動作します。デフォルトでは、競合を防ぐために特定の<a href="https://learn.microsoft.com/windows/win32/winprog64/shared-registry-keys">レジストリキー</a>をリダイレクトするようになっています。例えば、32ビットスクリプトの場合、<code>HKLM\SOFTWARE\AutoHotkey</code>は <code>HKLM\SOFTWARE\Wow6432Node\AutoHotkey</code>へリダイレクトされる。SetRegViewにより、32ビットスクリプトのレジストリ関数が64ビットレジストリビューのリダイレクトされたキーにアクセスできるようになり、その逆も可能です。</p>

<p>組込変数<strong>A_RegView</strong>には、現在の設定値が格納されています。</p>
<p>新しく起動する<a href="../misc/Threads.htm">スレッド</a>（<a href="../Hotkeys.htm">ホットキー</a>、<a href="Menu.htm">カスタムメニュー項目</a>、<a href="SetTimer.htm">時間指定</a>サブルーチンなど）はすべて、この機能のデフォルト設定で新しくスタートします。このデフォルトは、<a href="../Scripts.htm#auto">スクリプト起動</a>時にこの関数を使用することで変更することができます。</p>

<h2 id="Related">関連</h2>
<p><a href="RegRead.htm">RegRead</a>、<a href="RegWrite.htm">RegWrite</a>、<a href="RegCreateKey.htm">RegCreateKey</a>、<a href="RegDelete.htm">RegDelete</a>、<a href="RegDeleteKey.htm">RegDeleteKey</a>、<a href="LoopReg.htm">Loop Reg</a></p>

<h2 id="Examples">例</h2>
<div class="ex" id="ExBasic">
<p><a class="ex_number" href="#ExBasic"></a> 特定のレジストリビューを設定する方法、およびレジストリリダイレクトがスクリプトに与える影響について示します。</p>
<pre>
<em>; Access the registry as a 32-bit application would.</em>
SetRegView 32
RegWrite "REG_SZ", "HKLM\SOFTWARE\Test.ahk", "Value", 123

<em>; Access the registry as a 64-bit application would.</em>
SetRegView 64
value := RegRead("HKLM\SOFTWARE\Wow6432Node\Test.ahk", "Value")
RegDelete "HKLM\SOFTWARE\Wow6432Node\Test.ahk"

MsgBox "Read value '" value "' via Wow6432Node."

<em>; Restore the registry view to the default, which
; depends on whether the script is 32-bit or 64-bit.</em>
SetRegView "Default"
<em>;...</em>
</pre>
</div>

<div class="ex" id="Ex32Or64">
<p><a class="ex_number" href="#Ex32Or64"></a> スクリプトが実行されているEXEの種類とオペレーティングシステムを検出する方法を示しています。</p>
<pre>if (A_PtrSize = 8)
    script_is := "64-bit"
else <em>; if (A_PtrSize = 4)</em>
    script_is := "32-bit"

if (A_Is64bitOS)
    OS_is := "64-bit"
else
    OS_is := "32-bit, which has only a single registry view"

MsgBox "This script is " script_is ", and the OS is " OS_is "."</pre>
</div>

</body>
</html>
