<!DOCTYPE HTML>
<html lang="ja">
<head>
<title>Throw - 構文と使用法｜AutoHotkey v2</title>
<meta name="description" content="Throw文はエラーの発生を知らせる。このシグナルはTry-Catchステートメントでキャッチできる。" />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>Throw</h1>

<p>エラーの発生を通知します。このシグナルは<a href="Try.htm">Try</a>-<a href="Catch.htm">Catch</a>文によってキャッチすることができます。</p>

<pre class="Syntax"><span class="func">Throw</span> <span class="optional">Value</span></pre>
<h2 id="Parameters">パラメータ</h2>
<dl>

  <dt>Value</dt>
  <dd>
    <p>スローする値。通常は<a href="Error.htm">Error</a>オブジェクト。事例：</p>
      <pre>throw ValueError("Parameter #1 invalid", -1, theBadParam)</pre>
      <p>あらゆる種類の値を投げることができるが、クラスを指定せずに<a href="Catch.htm">Catch</a>を使用した場合（または<a href="Catch.htm">Catch</a>や <a href="Finally.htm">Finally</a>を指定せずに<a href="Try.htm">Try</a>を使用した場合）、<a href="Error.htm">Error</a>クラスのインスタンスのみをキャッチする。</p>
      <p><a href="Catch.htm">Catch</a>の中で実行されている間は、<em>Value</em>を省略することで、キャッチした値を再スローすることができる（そのためだけに出力変数を指定する必要はない）。これはネストされた<em>Try-Finally</em>内でもサポートされるが、ネストされた<em>Try-Catch</em>内ではサポートされない。<code>throw</code>の行は、<em>Catch</em>文の本体に物理的に含まれる必要はない。</p>
  </dd>

</dl>

<h2 id="Remarks">備考</h2>
<p><code>throw(Error())</code>のように式が括弧で囲まれている場合、<code>throw</code>の後のスペースまたはタブはオプションである。</p>
<p>スローされた値や実行時エラーは、<a href="Catch.htm">Try</a>-<a href="Try.htm">Catchで</a><em>キャッチ</em>できる。このような場合、実行は<em>catch</em>文に移されるか、<em>try</em>の次の文に移される。スローされた値がキャッチされなかった場合、以下のことが起こる：</p>
<ul>
  <li>アクティブな<a href="OnError.htm">OnError</a>コールバックはすべて呼び出される。各コールバックは<em>Value</em>を検査し、更なるコールバックとデフォルトの処理を抑制するか許可することができる。</li>
  <li>デフォルトでは、スローされた内容に応じたエラーメッセージが表示される。<em>Value</em>が <a href="Object.htm">Object</a>で、<em>Message</em>という名前のvalueプロパティを持つ場合、その値がメッセージとして使われる。<em>Value</em>が数値以外の文字列の場合、それがメッセージとして使われる。それ以外の場合は、デフォルトのメッセージが使われる。<em>Value</em>が数値の場合、デフォルトメッセージの下に表示される。</li>
  <li>スレッドは終了する。これは継続可能なエラーでは必ずしも起こらないが、<em>スロー</em>は決して継続できないことに注意。</li>
</ul>

<h2 id="Related">関連</h2>
<p><a href="Error.htm">Errorオブジェクト</a>、<a href="Try.htm">Try</a>、<a href="Catch.htm">Catch</a>、<a href="Finally.htm">Finally</a>、<a href="OnError.htm">OnError</a></p>

<h2 id="Examples">例</h2>
<p><a href="Try.htm#Examples">Try</a>をご覧ください。</p>

</body>
</html>
