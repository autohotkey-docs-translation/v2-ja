<!DOCTYPE HTML>
<html lang="ja">
<head>
<title>Finally - 構文と使用法｜AutoHotkey v2</title>
<meta name="description" content="Finally文は、Try文が終了した後、必ず1つ以上の文が実行されるようにします。" />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>Finally</h1>

<p>Ensures that one or more <a href="../Concepts.htm#statement">statements</a> are always executed after a <a href="Try.htm">Try</a> statement finishes.</p>

<pre class="Syntax"><span class="func">Finally</span> <i>Statement</i></pre>
<pre class="Syntax" style="line-height: 100%"><span class="func">Finally</span>
{
    <i>Statements</i>
}</pre>
<h2 id="Remarks">備考</h2>
<p>Every use of <em>Finally</em> must belong to (be associated with) a <a href="Try.htm">Try</a> statement above it (after any optional <a href="Catch.htm">Catch</a> and/or <a href="Else.htm">Else</a>). A <em>Finally</em> always belongs to the nearest unclaimed <em>Try</em> statement above it unless a <a href="Block.htm">block</a> is used to change that behavior.</p>
<p><em>Try</em> statements behave differently depending on whether <em>Catch</em> or <em>Finally</em> is present. 詳しくは、<a href="Try.htm">Try</a>をご覧ください。</p>
<p><em>Try</em>ブロック中の制御フローステートメントを抑制するため、<em>Goto</em>、<em>Break</em>、<em>Continue</em>または<em>Return</em>では、<em>Finally</em>ブロックを抜け出すことはできません。例えば、<em>try</em>が <code>return 42</code>を使用したときは、<em>finally</em>ブロックが実行された後に値42が返されます。これらの文を使って<em>finally</em>ブロックから抜け出そうとときは、可能であればロード時に、そうでなければランタイム時にエラーとして検出されます。</p>
<p>トレイメニューや<a href="ExitApp.htm">ExitApp</a>など、何らかの手段でスクリプトを直接終了させた場合は、<em>Finally</em>文は実行されません。</p>
<p> <a href="Block.htm#otb">OTB（One True Brace）スタイル</a>は、オプションで<em>finally</em>文を使用することができる。事例：</p>
<pre>try {
    ...
} finally {
    ...
}

try {
    ...
} catch {
    ...
} else {
    ...
} finally {
    ...
}</pre>
<h2 id="Related">関連</h2>
<p><a href="Try.htm">Try</a>, <a href="Catch.htm">Catch</a>, <a href="Else.htm">Else</a>, <a href="Throw.htm">Throw</a>, <a href="Block.htm">Blocks</a></p>
<h2 id="Examples">例</h2>
<div class="ex" id="ExBasic">
<p><a class="ex_number" href="#ExBasic"></a> <em>finally</em>の挙動を詳細に示します。</p>
<pre>try
{
    ToolTip "Working..."
    Example1()
}
catch as e
{
    <em>; e が含むオブジェクトの詳細については、<a href="Error.htm">Error</a>を参照してください。</em>
    MsgBox(Type(e) " thrown!`n`nwhat:" e.what "`nfile:" e.file
        . "`nline:" e.line "`nmessage:" e.message "`nextra:" e.extra,, 16)
}
finally
{
    ToolTip <em>; hide the tooltip</em>
}

MsgBox "Done!"

<em>; この関数は、クリーンアップコードとして機能するFinallyブロックを備えています。</em>
Example1()
{
    try
        Example2()
    finally
        MsgBox "This is always executed regardless of exceptions"
}

<em>; 分数が奇数のときは、この関数はエラーになります。</em>
Example2()
{
    if Mod(A_Min, 2)
        throw Error("That's odd...")
    MsgBox "Example2 did not fail"
}</pre>
</div>

</body>
</html>
