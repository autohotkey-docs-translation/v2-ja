<!DOCTYPE HTML>
<html lang="ja">
<head>
<title>ComObjType - 構文と使用法｜AutoHotkey v2</title>
<meta name="description" content="ComObjType 関数は、COM オブジェクトから型情報を取得します。" />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>ComObjType</h1>

<p>COM オブジェクトから型情報を取得します。</p>

<pre class="Syntax">Info := <span class="func">ComObjType</span>(ComObj <span class="optional">, InfoType</span>)</pre>

<h2 id="Parameters">パラメータ</h2>
<dl>

  <dt>ComObj</dt>
  <dd>
    <p>型：<a href="../Concepts.htm#objects">Object</a></p>
    <p>COMオブジェクトまたは型付き値を含むラッパーオブジェクト。See <a href="ComValue.htm">ComValue</a> for details.</p>
  </dd>

  <dt>InfoType</dt>
  <dd>
    <p>型：<a href="../Concepts.htm#strings">文字列</a></p>
    <p>If omitted, an integer <a href="#vt">variant type code</a> indicating the type of value contained by the COM wrapper object will be retrieved. Otherwise, specify one of the following strings indicating the type information to retrieve:</p>
    <p><strong>Name:</strong> The name of the object's default interface.</p>
    <p><strong>IID:</strong> The globally unique identifier (GUID) of the object's default interface.</p>
    <p><strong>Class:</strong> The object's class name. Note that this is not the same as a Prog ID (a Prog ID is a name used to identify the class in the system registry, or for <a href="ComObject.htm">ComObject</a>).</p>
    <p><strong>CLSID:</strong> The globally unique identifier (GUID) of the object's class. Classes are often registered by CLSID under the <code>HKCR\CLSID</code> registry key.</p>
  </dd>

</dl>

<h2 id="Return_Value">戻り値</h2>
<p>型：<a href="../Concepts.htm#numbers">整数</a>または<a href="../Concepts.htm#strings">文字列</a></p>
<p>The return value depends on the value of <em>InfoType</em>. いずれかのパラメータが無効な場合、または要求された型情報を取得できなかった場合は、空文字列が返されます。</p>

<h2 id="vt">バリアント型定数</h2>
<p>COMは、基本的なデータ型を識別するために、以下の値を使用します。</p>
<pre>
VT_EMPTY     :=      0  <em>; 値なし</em>
VT_NULL      :=      1  <em>; SQL-style Null</em>
VT_I2        :=      2  <em>; 16ビット符号付き整数</em>
VT_I4        :=      3  <em>; 32ビット符号付き整数</em>
VT_R4        :=      4  <em>; 32ビット浮動小数点数</em>
VT_R8        :=      5  <em>; 64ビット浮動小数点数</em>
VT_CY        :=      6  <em>; 通貨</em>
VT_DATE      :=      7  <em>; 日付</em>
VT_BSTR      :=      8  <em>; COM 文字列（Unicode 文字列に長さの接頭辞を付けたもの）。</em>
VT_DISPATCH  :=      9  <em>; COM オブジェクト</em>
VT_ERROR     :=    0xA  <em>; エラーコード(32ビット整数)</em>
VT_BOOL      :=    0xB  <em>; 真(-1)または偽(0)の論理型。</em>
VT_VARIANT   :=    0xC  <em>; <a href="https://learn.microsoft.com/windows/win32/api/oaidl/ns-oaidl-variant">VARIANT</a>(VT_ARRAYまたはVT_BYREFとの組み合わせが必要)</em>
VT_UNKNOWN   :=    0xD  <em>; IUnknown インターフェースポインタ</em>
VT_DECIMAL   :=    0xE  <em>;（サポートされていません）</em>
VT_I1        :=   0x10  <em>; 8ビット符号付き整数</em>
VT_UI1       :=   0x11  <em>; 8ビット符号無し整数</em>
VT_UI2       :=   0x12  <em>; 16ビット符号無し整数</em>
VT_UI4       :=   0x13  <em>; 32ビット符号無し整数</em>
VT_I8        :=   0x14  <em>; 64ビット符号付き整数</em>
VT_UI8       :=   0x15  <em>; 64ビット符号無し整数</em>
VT_INT       :=   0x16  <em>; 符号付きマシン整数</em>
VT_UINT      :=   0x17  <em>; 符号なしマシン整数</em>
VT_RECORD    :=   0x24  <em>; ユーザー定義型 -- NOT SUPPORTED</em>
VT_ARRAY     := 0x2000  <em>; <a href="https://learn.microsoft.com/windows/win32/api/oaidl/ns-oaidl-safearray">SAFEARRAY</a></em>
VT_BYREF     := 0x4000  <em>; 別のタイプの値へのポインタ</em>
<em>/*
 VT_ARRAYとVT_BYREFを別の値と結合する（ビット単位のOR使用）
 で、正確な型を指定します。例えば、0x2003は、<a href="https://learn.microsoft.com/windows/win32/api/oaidl/ns-oaidl-safearray">SAFEARRAY</a>を識別します。
 は 32 ビット符号付き整数、0x400C は<a href="https://learn.microsoft.com/windows/win32/api/oaidl/ns-oaidl-variant">VARIANT</a>へのポインタを示します。
*/</em>
</pre>

<h2 id="General_Remarks">総論</h2>
<p>ほとんどの場合、COMオブジェクトのメソッドまたはプロパティからの戻り値は、AutoHotkeyがサポートする適切なデータ型に変換されます。特に扱われていない型は、<a href="https://learn.microsoft.com/windows/win32/api/oleauto/nf-oleauto-variantchangetype">VariantChangeType</a>によって文字列に強制されます。もしこれが失敗したり、Variant型にVT_ARRAYやVT_BYREFフラグが含まれている場合、代わりに値とその型の両方を含むオブジェクトが返されます。</p>
<p>任意の変数<i>x</i>に対して、<code>ComObjType(x)</code>が整数を返す場合、<i>x</i>はCOMオブジェクトラッパーを含む。</p>
<p>If <em>InfoType</em> is <code>"Name"</code> or <code>"IID"</code>, type information is retrieved via the <a href="https://learn.microsoft.com/windows/win32/api/oaidl/nf-oaidl-idispatch-gettypeinfo">IDispatch::GetTypeInfo</a> interface method. <em>ComObj</em>のバリアントタイプはVT_DISPATCHでなければならない。</p>
<p>If <em>InfoType</em> is <code>"Class"</code> or <code>"CLSID"</code>, type information is retrieved via the <a href="https://learn.microsoft.com/windows/win32/api/ocidl/nf-ocidl-iprovideclassinfo-getclassinfo">IProvideClassInfo::GetClassInfo</a> interface method. <em>ComObjの</em>バリアントタイプはVT_DISPATCHまたはVT_UNKNOWNでなければならず、オブジェクトはIProvideClassInfoインターフェースを実装しなければならない（実装していないオブジェクトもある）。</p>

<h2 id="Related">関連</h2>
<p><a href="ComObjValue.htm">ComObjValue</a>, <a href="ComValue.htm">ComValue</a>, <a href="ComObject.htm">ComObject</a>, <a href="ComObjGet.htm">ComObjGet</a>, <a href="ComObjActive.htm">ComObjActive</a></p>

<h2 id="Examples">例</h2>
<div class="ex" id="ExBasic">
<p><a class="ex_number" href="#ExBasic"></a> COMオブジェクトの各種型情報を報告します。</p>
<pre>
d := ComObject("Scripting.Dictionary")
MsgBox
(
    "Variant type:`t" ComObjType(d) "
    Interface name:`t" ComObjType(d, "Name") "
    Interface ID:`t" ComObjType(d, "IID") "
    Class name:`t" ComObjType(d, "Class") "
    Class ID (CLSID):`t" ComObjType(d, "CLSID")
)</pre>
</div>

</body>
</html>
