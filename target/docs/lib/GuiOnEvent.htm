<!DOCTYPE HTML>
<html lang="ja">
<head>
<title>OnEvent (GUI) - 構文と使用法｜AutoHotkey v2</title>
<meta name="description" content="GuiまたはGuiControlオブジェクトのOnEventメソッドは、GUIウィンドウまたはコントロールによって与えられたイベントが発生したときに呼び出される関数またはメソッドを登録します。" />
<meta name="ahk:equiv-v1" content="lib/Gui.htm#Labels" />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css">
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>OnEvent</h1>
<p>GUIウィンドウやコントロールからイベントが発生したときに呼び出される関数やメソッドを登録します。</p>
<pre class="Syntax"><a href="Gui.htm">Gui</a>.<span class="func">OnEvent</span>(EventName, Callback <span class="optional">, AddRemove</span>)
<a href="GuiControl.htm">GuiCtrl</a>.<span class="func">OnEvent</span>(EventName, Callback <span class="optional">, AddRemove</span>)</pre>

<h2 id="Parameters">パラメータ</h2>
<dl>
  <dt>EventName</dt>
  <dd>
    <p>型：<a href="../Concepts.htm#strings">文字列</a></p>
    <p>イベントの名前です。下記「<a href="#Events">イベント</a>」をご覧ください。</p>
  </dd>
  
  <dt>Callback</dt>
  <dd>
    <p>型：<a href="../Concepts.htm#strings">文字列</a>または<a href="../misc/Functor.htm">関数オブジェクト</a></p>
    <p>イベントが発生したときに呼び出す関数、メソッド、またはオブジェクトを指定します。</p>
    <p>GUIにイベントシンクがある場合（つまり<a href="Gui.htm#Call">Gui()</a>の<em>EventObj</em>パラメータが指定されている場合）、このパラメータはイベントシンクに属するメソッドの名前であってもよい。Otherwise, this parameter must be a <a href="../misc/Functor.htm">function object</a>.</p>
    <p>For details about the parameters, return value, naming, and more, see the following sections.</p>
  </dd>
  
  <dt>AddRemove</dt>
  <dd>
    <p>型：<a href="../Concepts.htm#numbers">整数</a></p>
    <p>省略されたときは、初期値は 1 です。それ以外の場合は、次のいずれかの番号を指定してください：</p>
    <ul>
      <li>1 = 以前に登録されたコールバックの後にコールバックを呼び出します。</li>
      <li>-1 = 以前に登録されたコールバックより先にコールバックを呼び出します。</li>
      <li>0 = コールバックを呼び出さない。</li>
    </ul>
  </dd>
</dl>

<h2 id="Callback_Parameters">コールバックパラメータ</h2>
<p>コールバックが名前で登録されたメソッドである場合、その隠された<a href="../Objects.htm#Custom_Classes_method"><em>この</em>パラメータ</a>はシームレスにイベントシンクオブジェクト（つまり、そのメソッドが属するオブジェクト）を受け取ります。このパラメータは、本書のパラメータ一覧には表示されていません。</p>
<p><em>Callback</em>はオブジェクトにできるので、パラメータリストの先頭に追加のパラメータを挿入して、別の関数を呼び出す<a href="../misc/Functor.htm#BoundFunc">BoundFuncオブジェクト</a>にすることができます。これはOnEventに特化したものではなく、一般的なテクニックなので、このドキュメントの他の部分では通常無視されます。</p>
<p>コールバックの最初の明示的なパラメータは、イベントを発生させた<a href="Gui.htm">Gui</a>または<a href="GuiControl.htm">GuiControl</a>オブジェクトです。唯一の例外は、Guiが<a href="Gui.htm#EventObj">それ自身のイベントを処理する</a>とき、このパラメータは省略されることです。なぜなら、<code>このパラメータ</code>はすでにGuiへの参照を含んでいるからです。</p>
<p>多くのイベントは、各イベントで説明されているように、イベントに関する追加のパラメータを渡します。</p>
<p>As with all methods or functions called dynamically, the callback is not required to declare parameters which the callback itself does not need, but in this case an asterisk must be specified as the final parameter, e.g. <code>MyCallback(Param1, *)</code>. If an event has more parameters than are declared by the callback, they will simply be ignored (unless the callback is <a href="../Functions.htm#Variadic">variadic</a>).</p>
<p>コールバックは、追加のパラメータがオプションとして宣言されている場合（そしてその場合のみ）、イベントが提供するよりも多くのパラメータを宣言することができます。しかし、オプションのパラメータを使用することは推奨されません。プログラムの将来のバージョンでは、追加のパラメータでイベントを拡張する可能性があり、その場合、オプションのパラメータはデフォルト値を受け取らなくなります。</p>

<h2 id="Callback_Return_Value">コールバックの戻り値</h2>
<p>イベントに対して複数のコールバックが登録されている場合、コールバックは空でない値を返し、残りのコールバックが呼ばれないようにすることができます。</p>
<p>戻り値は、特定のイベントに対して追加の意味を持つ場合があります。例えば、<a href="#Close">Close</a>コールバックは、GUIウィンドウが閉じないように、0以外の数値（<code>true</code>など）を返すことができます。</p>

<h2 id="Callback_Name">Callback Name</h2>
<p>慣例により、以下の各イベントの構文は、わかりやすくするために、<code><i>ObjectType</i><i>_</i><i>EventName</i></code>という形の関数名で示されています。スクリプトはこの規約に従う必要はなく、任意の有効な関数名を使用することができます。</p>

<h2 id="Threads">スレッド</h2>
<p>各イベントコールバックは新しい<a href="../misc/Threads.htm">スレッド</a>で呼び出されるため、<a href="SendMode.htm">SendMode</a>などの設定のデフォルト値で新たにスタートします。これらのデフォルトは、<a href="../Scripts.htm#auto">スクリプト起動</a>時に変更することができます。</p>
<p>GUI<a href="../misc/Threads.htm">スレッド</a>が起動すると、そのスレッドの<a href="../misc/WinTitle.htm#LastFoundWindow">最後に見つかったウィンドウ</a>がGUIウィンドウそのものとしてスタートします。This allows functions for windows and controls -- such as <a href="WinGetStyle.htm">WinGetStyle</a>, <a href="WinSetTransparent.htm">WinSetTransparent</a>, and <a href="ControlGetFocus.htm">ControlGetFocus</a> -- to omit <em>WinTitle</em> and <em>WinText</em> when operating upon the GUI window itself (even if it is hidden).</p>
<p>注意書きがある場合を除き、各イベントは1つのオブジェクトにつき1スレッドずつに制限されています。そのイベントによって開始された前のスレッドが終了する前にイベントが発生した場合、通常、そのイベントは破棄されます。これを防ぐには、コールバックの最初の行<a href="Critical.htm">にCritical</a>を使用します（ただし、この場合、ホットキーの押下など他の<a href="../misc/Threads.htm">スレッド</a>もバッファリング/ディファーされます）。</p>

<h2 id="Destroying_the_GUI">GUIを破壊する</h2>
<p>GUIが破壊されると、すべてのイベントコールバックが解放されます。したがって、イベントのディスパッチ中にGUIが破壊された場合、その後のイベントコールバックは呼び出されません。わかりやすくするために、コールバックはGUIを破壊した後、<a href="#Callback_Return_Value">空でない値を返す</a>ようにします。</p>

<h2 id="Events">イベント情報</h2>
<p><a href="Gui.htm">Gui</a>オブジェクトがサポートしているイベントは次のとおりです：</p>
<table class="info">
  <tr><th>Event</th><th>育てたのは...</th></tr>
  <tr><td><a href="#Close">Close</a></td><td>窓が閉まっています。</td></tr>
  <tr><td><a href="#ContextMenu">ContextMenu</a></td><td>ユーザーはウィンドウ内で右クリックするか、<kbd>Menu</kbd>または<kbd>Shift</kbd>+<kbd>F10</kbd>を押してください。</td></tr>
  <tr><td><a href="#DropFiles">DropFiles</a></td><td>ファイル/フォルダーをウィンドウにドラッグ＆ドロップします。</td></tr>
  <tr><td><a href="#Escape">Escape</a></td><td>GUIウィンドウがアクティブな状態で、ユーザーが<kbd>Esc</kbd>を押した場合。</td></tr>
  <tr><td><a href="#Size">Size</a></td><td>ウィンドウのサイズ変更、最小化、最大化、復元を行います。</td></tr>
</table>
<p><a href="GuiControl.htm">GuiControl</a>オブジェクトは、コントロールの種類に応じて、以下のイベントをサポートしています：</p>
<table class="info">
  <tr><th>Event</th><th>育てたのは...</th></tr>
  <tr><td><a href="#Change">Change</a></td><td>コントロールの値が変化します。</td></tr>
  <tr><td><a href="#Click">Click</a></td><td>コントロールがクリックされます。</td></tr>
  <tr><td><a href="#DoubleClick">DoubleClick</a></td><td>コントロールがダブルクリックされます。</td></tr>
  <tr><td><a href="#ColClick">ColClick</a></td><td>ListViewのカラムヘッダーの1つがクリックされました。</td></tr>
  <tr><td><a href="#Ctrl-ContextMenu">ContextMenu</a></td><td>コントロールにキーボードフォーカスがある状態で、ユーザーがコントロールを右クリックするか、<kbd>メニュー</kbd>または<kbd>Shift</kbd>+<kbd>F10</kbd>を押した場合。</td></tr>
  <tr><td><a href="#Focus">Focus</a></td><td>コントロールがキーボードフォーカスを獲得します。</td></tr>
  <tr><td><a href="#LoseFocus">LoseFocus</a></td><td>コントロールはキーボードフォーカスを失います。</td></tr>
  <tr><td><a href="#ItemCheck">ItemCheck</a></td><td>ListViewやTreeViewの項目がチェックされているか、チェックされていないか。</td></tr>
  <tr><td><a href="#ItemEdit">ItemEdit</a></td><td>ListViewやTreeViewのアイテムのラベルは、ユーザーが編集することができます。</td></tr>
  <tr><td><a href="#ItemExpand">ItemExpand</a></td><td>TreeViewの項目が展開または折りたたまれている。</td></tr>
  <tr><td><a href="#ItemFocus">ItemFocus</a></td><td>ListViewでフォーカスされた項目が変化します。</td></tr>
  <tr><td><a href="#ItemSelect">ItemSelect</a></td><td>ListViewまたはTreeViewの項目が選択された場合、またはListViewの項目が非選択の場合。</td></tr>
</table>

<h2 id="Window_Events">Window Events</h2>

<h3 id="Close">Close</h3>
<p>ユーザーまたは他のプログラムが、タイトルバーのXボタンを押す、システムメニューから「閉じる」を選択する、または<a href="WinClose.htm">WinClose</a>を呼び出すなどして、ウィンドウを閉じようとしたときに起動されるものです。</p>
<pre class="Syntax">Gui_<span class="func">Close</span>(GuiObj)</pre>
<p>デフォルトでは、コールバックが戻った後、またはコールバックが登録されていない場合、ウィンドウは自動的に非表示になります。コールバックは1（または<code>true</code>）を返すことでこれを防ぐことができ、残りのコールバックが呼ばれるのを防ぐこともできます。The callback can hide the window immediately by calling <a href="Gui.htm#Hide">GuiObj.Hide</a>, or destroy the window by calling <a href="Gui.htm#Destroy">GuiObj.Destroy</a>.</p>
<p>例えば、このGUIでは、閉じる前に確認のプロンプトが表示されます：</p>
<pre>MyGui := Gui()
MyGui.AddText("", "Press Alt+F4 or the X button in the title bar.")
MyGui.OnEvent("Close", MyGui_Close)
MyGui_Close(thisGui) {  <em>; Declaring this parameter is optional.</em>
    if MsgBox("Are you sure you want to close the GUI?",, "y/n") = "No"
        return true  <em>; true = 1</em>
}
MyGui.Show</pre>

<h3 id="ContextMenu">ContextMenu</h3>
<p>タイトルバーとメニューバーを除くウィンドウ内の任意の場所を右クリックしたときに起動します。また、<kbd>Menu</kbd>や <kbd>Shift</kbd><kbd>+</kbd><kbd>F10</kbd>を押したときにも反応し、起動します。</p>
<pre class="Syntax">Gui_<span class="func">ContextMenu</span>(GuiObj, GuiCtrlObj, Item, IsRightClick, X, Y)</pre>
<dl><dt>GuiCtrlObj</dt><dd>
    <p>型：<a href="../Concepts.htm#objects">Object</a> or <a href="../Concepts.htm#nothing">String (empty)</a></p>
    <p>The <a href="GuiControl.htm">GuiControl object</a> of the control that received the event (blank if none).</p></dd>
  <dt>Item</dt><dd>
    <p>型：<a href="../Concepts.htm#numbers">整数</a></p>
    <p>ListBox、ListView、TreeViewがコンテキストメニューのターゲットである場合（<em>GuiCtrlObj</em>で決定）、<em>Item</em>はコントロールのどのアイテムをターゲットとするかを指定します。</p>
    <p><a href="GuiControls.htm#ListBox">ListBox</a>:The position number of the currently focused item. 標準的なリストボックスでは、右クリックされたときに項目にフォーカスが当たらないので、クリックされた項目でない可能性があることに注意してください。</p>
    <p><a href="ListView.htm">ListView</a> および <a href="TreeView.htm">TreeView</a>:For right-clicks, <em>Item</em> contains the clicked item's row number or ID (or 0 if the user clicked somewhere other than an item). For <kbd>Menu</kbd> and <kbd>Shift</kbd>+<kbd>F10</kbd>, <em>Item</em> contains the selected item's row number or ID.</p></dd>
  <dt>IsRightClick</dt><dd>
    <p>型：<a href="../Concepts.htm#boolean">整数（ブーリアン）</a></p>
    <p>以下のいずれかの値：</p>
    <ul>
      <li>1 (true) = The user clicked the right mouse button.</li>
      <li>0 (false) = The user pressed <kbd>Menu</kbd> or <kbd>Shift</kbd>+<kbd>F10</kbd>.</li>
    </ul></dd>
  <dt>X, Y</dt><dd>
    <p>型：<a href="../Concepts.htm#numbers">整数</a></p>
    <p>スクリプトがメニューを表示する位置のX、Y座標（例：<code>MyContextMenu.<a href="Menu.htm#Show">Show</a>X, Y</code>）です。座標は、ウィンドウのクライアント領域の左上隅からの相対座標です。</p></dd>
</dl>
<p>他の多くのGUIイベントとは異なり、ContextMenuイベントは複数の<a href="../misc/Threads.htm">スレッド</a>を同時に持つことができます。</p>
<p>各コントロールは独自のContextMenuイベントコールバックを持つことができ、Guiオブジェクトに登録されたどのコールバックよりも先に呼び出されます。コントロール固有のコールバックでは、<em>GuiObj</em>パラメータは省略されますが、その他のパラメータはすべて同じです。</p>
<p>注：<a href="GuiControls.htm#Edit">Edit</a>と <a href="GuiControls.htm#MonthCal">MonthCal</a>コントロールはそれぞれ独自のコンテキストメニューを持っているため、そのうちの1つを右クリックしてもContextMenuイベントは起動しません。</p>

<h3 id="DropFiles">DropFiles</h3>
<p>ドラッグ＆ドロップ操作でファイルやフォルダがウィンドウにドロップされるたびに起動します（ただし、このコールバックがすでに実行されている場合、ドロップイベントは無視されます）。</p>
<pre class="Syntax">Gui_<span class="func">DropFiles</span>(GuiObj, GuiCtrlObj, FileArray, X, Y)</pre>
<dl>
  <dt>GuiCtrlObj</dt>
  <dd>
    <p>型：<a href="../Concepts.htm#objects">Object</a> or <a href="../Concepts.htm#nothing">String (empty)</a></p>
    <p>The <a href="GuiControl.htm">GuiControl object</a> of the control upon which the files were dropped (blank if none).</p></dd>

  <dt>FileArray</dt>
  <dd>
    <p>型：<a href="Array.htm">Array</a></p>
    <p>ファイル名の配列。<code>FileArray[1]</code>は最初のファイル、<code>FileArray.Length</code>はファイル数を返す。<a href="For.htm">for-loop</a>を使用して、ファイルを繰り返し処理することができます：</p>
<pre>Gui_DropFiles(GuiObj, GuiCtrlObj, FileArray, X, Y) {
    for i, DroppedFile in FileArray
        MsgBox "File " i " is:`n" DroppedFile
}</pre></dd>

  <dt>X, Y</dt>
  <dd>
    <p>型：<a href="../Concepts.htm#numbers">整数</a></p>
    <p>ファイルがドロップされた場所のX、Y座標（ウィンドウのクライアント領域の左上隅からの相対座標）。</p>
  </dd>
</dl>

<h3 id="Escape">Escape</h3>
<p>GUIウィンドウがアクティブな状態で、ユーザーが<kbd>Esc</kbd>を押したときに起動されます。</p>
<pre class="Syntax">Gui_<span class="func">Escape</span>(GuiObj)</pre>
<p>デフォルトでは、<kbd>Esc</kbd>を押しても何の効果もありません。既知の制限：ウィンドウの最初のコントロールが無効になっている場合（コントロールの種類によって異なる可能性があります）、Escapeイベントは起動されません。この効果を生み出す他の状況もあるかもしれません。</p>

<h3 id="Size">Size</h3>
<p>ウィンドウのサイズ変更、最小化、最大化、復元時に起動されます。</p>
<pre class="Syntax">Gui_<span class="func">Size</span>(GuiObj, MinMax, Width, Height)</pre>
<dl>
  <dt>MinMax</dt><dd>
    <p>型：<a href="../Concepts.htm#numbers">整数</a></p>
    <p>以下のいずれかの値：</p>
    <ul>
      <li>0 = ウィンドウは最小化も最大化もされません。</li>
      <li>1 = ウィンドウが最大化されます。</li>
      <li>-1 = ウィンドウが最小化されます。</li>
    </ul>
    <p>最大化されたウィンドウは、復元/最大化解除せずにサイズを変更することができるため、値が1の場合、必ずしもユーザーがウィンドウを最大化したことに応じてこのイベントが発生したことを意味しないことに注意します。</p></dd>
  <dt>幅、高さ</dt><dd>
    <p>型：<a href="../Concepts.htm#numbers">整数</a></p>
    <p>ウィンドウのクライアント領域（タイトルバー、メニューバー、ボーダーを除く領域）の新しい幅と高さを指定します。</p></dd>
</dl>
<p>スクリプトは、Size イベントを使用して、ユーザーによるウィンドウのサイズ変更に対応してコントロールの位置を変更したり、サイズを変更したりすることができます。</p>
<p>ウィンドウのサイズが変更された場合（スクリプトでも）、Sizeイベントがすぐに発生しない場合があります。他のウィンドウイベントと同様に、現在のスレッドが<a href="Thread.htm#Interrupt">割り込み不可能な</a>場合、スレッドが割り込み可能になるまで、Sizeイベントは発生しません。スクリプトがウィンドウのサイズを変更したばかりの場合は、この例に従ってSizeイベントを直ちに発生させるようにしてください：</p>
<pre><a href="Critical.htm#Off">Critical</a>"Off"<em>; Critical "Onが一度も使われなかったとしても。</em>
<a href="Sleep.htm">Sleep</a> -1</pre>
<p><a href="Gui.htm#Show">Gui.Show</a>は、自動的に<code>Sleep -1</code>を行うので、その場合は一般にSleepを呼び出す必要はない。</p>

<h2 id="Control_Events">Control Events</h2>

<h3 id="Change">Change</h3>
<p>コントロールの値が変化したときに発生します。</p>
<pre class="Syntax">Ctrl_<span class="func">Change</span>(GuiCtrlObj, Info)</pre>
<dl>
  <dt>Info</dt>
  <dd>
    <p>型：<a href="../Concepts.htm#numbers">整数</a></p>
    <p><a href="GuiControls.htm#Slider">Slider</a>: A numeric value indicating how the slider moved. For details, see <a href="GuiControls.htm#slider-change">Detecting Changes</a>.</p>
    <p>それ以外のコントロールについては、現在、<em>Info</em>は意味を持ちません。</p>
  </dd>
</dl>
<p>コントロールの新しい値を取得するには、<a href="GuiControl.htm#Value">GuiCtrlObj.Value</a>を使用します。</p>
<p>適用：<a href="GuiControls.htm#DDL">DDL</a>, <a href="GuiControls.htm#ComboBox">ComboBox</a>, <a href="GuiControls.htm#ListBox">ListBox</a>, <a href="GuiControls.htm#Edit">Edit</a>, <a href="GuiControls.htm#DateTime">DateTime</a>, <a href="GuiControls.htm#MonthCal">MonthCal</a>, <a href="GuiControls.htm#Hotkey">Hotkey</a>, <a href="GuiControls.htm#UpDown">UpDown</a>, <a href="GuiControls.htm#Slider">Slider</a>, <a href="GuiControls.htm#Tab">Tab</a>.</p>

<h3 id="Click">Click</h3>
<p>コントロールがクリックされたときに発生します。</p>
<pre class="Syntax">Ctrl_<span class="func">Click</span>(GuiCtrlObj, Info)
Link_<span class="func">Click</span>(GuiCtrlObj, Info, Href)</pre>
<dl>
  <dt>Info</dt>
  <dd>
    <p>型：<a href="../Concepts.htm#numbers">整数</a></p>
    <p><a href="GuiControls.htm#ListView">ListView</a>:クリックされた項目の行番号、またはマウスが項目上にない場合は0を指定します。</p>
    <p><a href="GuiControls.htm#TreeView">TreeView</a>:クリックされた項目のID、またはマウスが項目上にない場合は0を指定します。</p>
    <p><a href="GuiControls.htm#Link">Link</a>:リンクにID属性がある場合は文字列、ない場合はリンクのインデックス（整数値）です。</p>
    <p><a href="GuiControls.htm#StatusBar">StatusBar</a>:クリックした部分の品番（ただし、バー右側のサイズグリップ付近をクリックした場合、品番は非常に大きな整数になる可能性があります）。</p>
    <p>それ以外のコントロールについては、現在、<em>Info</em>は意味を持ちません。</p>
  </dd>
  <dt>Href</dt>
  <dd>
    <p>型：<a href="../Concepts.htm#strings">文字列</a></p>
    <p><a href="GuiControls.htm#Link">Link</a>:リンクのHREF属性です。なお、クリックイベントコールバックが登録されている場合、HREF属性は自動的に実行されません。</p>
  </dd>
</dl>
<p>適用：<a href="GuiControls.htm#Text">Text</a>, <a href="GuiControls.htm#Pic">Pic</a>, <a href="GuiControls.htm#Button">Button</a>, <a href="GuiControls.htm#CheckBox">CheckBox</a>, <a href="GuiControls.htm#Radio">Radio</a>, <a href="ListView.htm">ListView</a>, <a href="TreeView.htm">TreeView</a>, <a href="GuiControls.htm#Link">Link</a>, <a href="GuiControls.htm#StatusBar">StatusBar</a>.</p>

<h3 id="DoubleClick">DoubleClick</h3>
<p>コントロールがダブルクリックされたときに発生します。</p>
<pre class="Syntax">Ctrl_<span class="func">DoubleClick</span>(GuiCtrlObj, Info)</pre>
<dl>
  <dt>Info</dt>
  <dd>
    <p>型：<a href="../Concepts.htm#numbers">整数</a></p>
    <p><a href="GuiControls.htm#ListView">ListView</a>, <a href="GuiControls.htm#TreeView">TreeView</a> and <a href="GuiControls.htm#StatusBar">StatusBar</a>: Same as for the <a href="#Click">Click</a> event.</p>
    <p><a href="GuiControls.htm#ListBox">ListBox</a>:The position number of the currently focused item. 最後の項目の下の空白をダブルクリックすると、通常、最後の項目がフォーカスされ、選択範囲がそのままになります。</p>
  </dd>
</dl>
<p>適用：<a href="GuiControls.htm#Text">Text</a>, <a href="GuiControls.htm#Pic">Pic</a>, <a href="GuiControls.htm#Button">Button</a>, <a href="GuiControls.htm#CheckBox">CheckBox</a>, <a href="GuiControls.htm#Radio">Radio</a>, <a href="GuiControls.htm#ComboBox">ComboBox</a>, <a href="GuiControls.htm#ListBox">ListBox</a>, <a href="ListView.htm">ListView</a>, <a href="TreeView.htm">TreeView</a>, <a href="GuiControls.htm#StatusBar">StatusBar</a>.</p>

<h3 id="ColClick">ColClick</h3>
<p>ListViewのカラムヘッダーの1つがクリックされたときに発生します。</p>
<pre class="Syntax">Ctrl_<span class="func">ColClick</span>(GuiCtrlObj, Info)</pre>
<dl>
  <dt>Info</dt>
  <dd>
    <p>型：<a href="../Concepts.htm#numbers">整数</a></p>
    <p>クリックされた1ベースの列番号です。これは、カラムが作成されたときに割り当てられたオリジナルの番号です。つまり、ユーザーによるカラムのドラッグ＆ドロップは反映されません。</p>
  </dd>
</dl>
<p>適用：<a href="ListView.htm">ListView</a>.</p>

<h3 id="Ctrl-ContextMenu">ContextMenu</h3>
<p>コントロールにキーボードフォーカスがある状態で、ユーザーがコントロールを右クリックするか、<kbd>メニュー</kbd>または<kbd>Shift</kbd><kbd>+</kbd> <kbd>F10</kbd>を押したときに発生します。</p>
<pre class="Syntax">Ctrl_<span class="func">ContextMenu</span>(GuiCtrlObj, Item, IsRightClick, X, Y)</pre>
<p>詳しくは、「<a href="#ContextMenu">ContextMenu</a>」をご覧ください。</p>
<p>適用：All controls except <a href="GuiControls.htm#Edit">Edit</a> and <a href="GuiControls.htm#MonthCal">MonthCal</a> (and the Edit control within a <a href="GuiControls.htm#ComboBox">ComboBox</a>), which have their own standard context menu.</p>

<span id="LoseFocus"></span><h3 id="Focus">Focus / LoseFocus</h3>
<p>コントロールがキーボードフォーカスを獲得したとき、または失ったときに発生します。</p>
<pre class="Syntax">Ctrl_<span class="func">Focus</span>(GuiCtrlObj, Info)
Ctrl_<span class="func">LoseFocus</span>(GuiCtrlObj, Info)</pre>
<dl>
  <dt>Info</dt>
  <dd><p>Reserved.</p></dd>
</dl>
<p>適用：<a href="GuiControls.htm#Button">Button</a>, <a href="GuiControls.htm#CheckBox">CheckBox</a>, <a href="GuiControls.htm#Radio">Radio</a>, <a href="GuiControls.htm#DDL">DDL</a>, <a href="GuiControls.htm#ComboBox">ComboBox</a>, <a href="GuiControls.htm#ListBox">ListBox</a>, <a href="ListView.htm">ListView</a>, <a href="TreeView.htm">TreeView</a>, <a href="GuiControls.htm#Edit">Edit</a>, <a href="GuiControls.htm#DateTime">DateTime</a>.</p>
<p>非対応：<a href="GuiControls.htm#Hotkey">Hotkey</a>, <a href="GuiControls.htm#Slider">Slider</a>, <a href="GuiControls.htm#Tab">Tab</a> および <a href="GuiControls.htm#Link">Link</a>. なお、<a href="GuiControls.htm#Text">Text</a>、<a href="GuiControls.htm#Pic">Pic</a>、<a href="GuiControls.htm#MonthCal">MonthCal</a>、<a href="GuiControls.htm#UpDown">UpDown</a>、<a href="GuiControls.htm#StatusBar">StatusBar</a>コントロールは、キーボードフォーカスを受け付けません。</p>

<h3 id="ItemCheck">ItemCheck</h3>
<p>ListViewまたはTreeViewのアイテムがチェックされたとき、またはチェックされていないときに発生します。</p>
<pre class="Syntax">Ctrl_<span class="func">ItemCheck</span>(GuiCtrlObj, Item, Checked)</pre>
<p>適用：<a href="ListView.htm">ListView</a>, <a href="TreeView.htm">TreeView</a>.</p>

<h3 id="ItemEdit">ItemEdit</h3>
<p>ListView または TreeView のアイテムのラベルがユーザーによって編集されたときに発生します。</p>
<pre class="Syntax">Ctrl_<span class="func">ItemEdit</span>(GuiCtrlObj, Item)</pre>
<p>項目のラベルは、コントロールのオプションで<code>-ReadOnly</code>が使用されている場合のみ編集可能です。</p>
<p>適用：<a href="ListView.htm">ListView</a>, <a href="TreeView.htm">TreeView</a>.</p>

<h3 id="ItemExpand">ItemExpand</h3>
<p>TreeView のアイテムが展開または折りたたまれたときに発生します。</p>
<pre class="Syntax">Ctrl_<span class="func">ItemExpand</span>(GuiCtrlObj, Item, Expanded)</pre>
<p>適用：<a href="TreeView.htm">TreeView</a>.</p>

<h3 id="ItemFocus">ItemFocus</h3>
<p>ListView でフォーカスされている項目が変更されたときに発生します。</p>
<pre class="Syntax">Ctrl_<span class="func">ItemFocus</span>(GuiCtrlObj, Item)</pre>
<p>適用：<a href="ListView.htm">ListView</a>.</p>

<h3 id="ItemSelect">ItemSelect</h3>
<p>ListViewまたはTreeViewのアイテムが選択されたとき、またはListViewのアイテムが選択解除されたときに発生します。</p>
<pre class="Syntax">ListView_<span class="func">ItemSelect</span>(GuiCtrlObj, Item, Selected)
TreeView_<span class="func">ItemSelect</span>(GuiCtrlObj, Item)</pre>
<p>適用：<a href="ListView.htm">ListView</a>, <a href="TreeView.htm">TreeView</a>.</p>
<p>ListView:このイベントは、選択解除や選択された項目ごとに1回発生するので、ユーザーの1回の操作に対して複数回発生させることができる。</p>


<h2 id="Other_Events">その他のイベント</h2>
<p>その他のタイプのGUIイベントは、<a href="GuiOnNotify.htm">OnNotify</a>、<a href="GuiOnCommand.htm">OnCommand</a>、<a href="OnMessage.htm">OnMessage</a>で検出し、対応することができます。例えば、ユーザーがウィンドウ内の特定のコントロールにマウスを移動すると、スクリプトはToolTipを介してコンテキストセンシティブヘルプを表示することができます。これは、<a href="Gui.htm#ExToolTip">GUI ToolTipの例</a>で実証されています。</p>


</body>
</html>
