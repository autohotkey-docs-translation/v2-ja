<!DOCTYPE HTML>
<html lang="ja">
<head>
<title>Switch - Syntax &amp; Usage | AutoHotkey v2</title>
<meta name="description" content="The Switch statement executes one case from a list of mutually exclusive candidates." />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>Switch</h1>

<p>相互に排他的な候補のリストから1つのケースを実行します。</p>

<pre class="Syntax"><span class="func">Switch</span> <span class="optional">SwitchValue, CaseSense</span>
{
<span class="func">Case</span> CaseValue1:
<i>Statements1</i>
<span class="func">Case</span> CaseValue2a, CaseValue2b:
<i>Statements2</i>
<span class="func">Default</span>:
<i>Statements3</i>
}</pre>

<h2 id="Parameters">パラメータ</h2>
<dl>

  <dt>SwitchValue, CaseValue...</dt>
  <dd>
    <p>Values to compare, as described in the <a href="#Remarks">remarks</a> below.</p>
  </dd>

  <dt>CaseSense</dt>
  <dd>
    <p>型：<a href="../Concepts.htm#numbers">整数</a>または<a href="../Concepts.htm#strings">文字列</a></p>
    <p>Optionally specify one of the following values to force all values to be compared as strings:</p>
    <p><code>"On"</code> または <code>1</code> (<code>True</code>):Each comparison is case sensitive.</p>
    <p><code>"Off"</code> または <code>0</code> (<code>False</code>):A～Zは小文字と同一視されます。</p>
    <p id="Locale"><code>"Locale"</code>: Each comparison is case insensitive according to the rules of the current user's locale. For details, see <a href="StrCompare.htm">StrCompare</a>.</p>
  </dd>

</dl>

<h2 id="Remarks">備考</h2>
<p>If present, <em>SwitchValue</em> is evaluated once and compared to each case value until a match is found, and then that case is executed. Otherwise, the first case which evaluates to <a href="../Concepts.htm#boolean">true</a> (non-zero and non-empty) is executed. If there is no matching case and a <code>Default</code> is present, it is executed.</p>
<p>As with the <code>=</code> and <code>==</code> operators, when <em>CaseSense</em> is omitted, numeric comparison is performed if <em>SwitchValue</em> and the case value are both pure numbers, or if one is a pure number and the other is a numeric string. Each case value is considered separately and does not affect the type of comparison used for other case values.</p>
<p>If the <em>CaseSense</em> parameter is present, all values are compared as strings, not as numbers, and a <a href="Error.htm#TypeError">TypeError</a> is thrown if <em>SwitchValue</em> or a <em>CaseValue</em> evaluates to an object.</p>
<p>If the <em>CaseSense</em> parameter is omitted, string comparisons are case-sensitive by default.</p>
<p>Each case may list up to 20 values. Each value must be an <a href="../Language.htm#expressions">expression</a>, but can be a simple one such as a literal number, quoted string or variable. <code>Case</code> and <code>Default</code> must be terminated with a colon <code>:</code>.</p>
<p>The first statement of each case may be below <code>Case</code> or on the same line, following the colon. Each case implicitly ends at the next <code>Case</code>/<code>Default</code> or the closing brace. Unlike the switch statement found in some other languages, there is no implicit fall-through and <a href="Break.htm">Break</a> is not used (except to break out of an enclosing loop).</p>
<p>As all cases are enclosed in the same block, a label defined in one case can be the target of <a href="Goto.htm">Goto</a> from another case. However, if a label is placed immediately above <code>Case</code> or <code>Default</code>, it targets the end of the previous case, not the beginning of the next one.</p>
<p><code>Default</code> is not required to be listed last.</p>

<h2 id="Related">関連</h2>
<p><a href="If.htm">If</a>, <a href="Else.htm">Else</a>, <a href="Block.htm">Blocks</a></p>

<h2 id="examples">例</h2>
<div class="ex" id="ExInput">
<p><a class="ex_number" href="#ExInput"></a> To test this example, type <kbd>[</kbd> followed by one of the abbreviations listed below, any other 5 characters, or Enter/Esc/Tab/<kbd>.</kbd>; or wait for 4 seconds.</p>
<pre>~[::
{
    Hook := InputHook("V T5 L4 C", "{enter}.{esc}{tab}", "btw,otoh,fl,ahk,ca")
    Hook.Start()
    Hook.Wait()
    switch Hook.EndReason
    {
    case "Max":
MsgBox 'You entered "' Hook.Input '", which is the maximum length of text.'
    case "Timeout":
MsgBox 'You entered "' Hook.Input '" at which time the input timed out.'
    case "EndKey":
MsgBox 'You entered "' Hook.Input '" and terminated the input with ' Hook.EndReason '.'
    default:  <em>; Match</em>
        switch Hook.Input
        {
        case "btw":Send "{backspace 3}by the way"
        case "otoh":Send "{backspace 4}on the other hand"
        case "fl":Send "{backspace 2}Florida"
        case "ca":Send "{backspace 2}California"
        case "ahk":
Send "{backspace 3}"
            Run "https://www.autohotkey.com"
        }
    }
}</pre>
</div>

</body>
</html>
