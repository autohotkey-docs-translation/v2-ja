<!DOCTYPE HTML>
<html lang="jac">
<head>
<title>#Warn - 構文と使用法｜AutoHotkey v2</title>
<meta name="description" content="#Warn指令は、タイポやglobal宣言の欠落など、エラーを示す可能性のある特定の条件について警告を有効または無効にします。" />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>#Warn</h1>

<p>タイポや「グローバル」宣言の欠落など、エラーを示す可能性のある特定の条件に対する警告の有効・無効を設定します。</p>

<pre class="Syntax"><span class="func">#Warn</span> <span class="optional">WarningType, WarningMode</span></pre>

<h2 id="Parameters">パラメータ</h2>
<dl>

  <dt>WarningType</dt>
  <dd>
    <p>型：<a href="../Concepts.htm#strings">文字列</a></p>

    <p>省略した場合は、<em>All</em>がデフォルトとなります。Otherwise, specify the type of warning to enable or disable.</p>
    <p id="VarUnset"><strong>VarUnset：</strong>スクリプトの実行を開始する前に、次のいずれにも使用されることのない各変数の最初の参照に対して警告を表示します：</p>
    <ul>
      <li><code>MyVar := ""</code>のように、直接、非動的な代入のターゲットとして。</li>
      <li><a href="../Variables.htm#ref">参照演算子</a>（例えば、<code>&amp;MyVar</code>）と共に使用します。</li>
      <li><a href="IsSet.htm">IsSet</a>に直接渡される（例えば、<code>IsSet(MyVar)</code>)。</li>
    </ul>
    <p id="LocalSameAsGlobal"><strong>LocalSameAsGlobal：</strong>スクリプトの実行前に、グローバル変数と同じ名前の<em>未宣言</em>のローカル変数に対して警告を表示するようにします。これは、グローバル変数を関数内で宣言してから代入しようとした場合に起こるエラーを防止するためのものです。もし本当にローカルな変数であることを意図していたのであれば、<code>local x</code>や<code>static y</code>などの宣言を用いて警告を抑制することができます。</p>
    <p>この警告は、デフォルトでは無効になっています。</p>
    <pre>#Warn
g := 1
ShowG() {       <em>; 関数が一度も呼び出されない場合でも警告は表示されます。</em>
    <em>; global g ; &lt;-- グローバル変数に代入するために必要です。</em>
    g := 2
}
ShowG
MsgBox g        <em>; 宣言がない場合、上記はローカルな「g」に割り当てられる。</em></pre>
    <p id="Unreachable"><strong>Unreachable：</strong>スクリプトの実行を開始する前に、同じネスティングレベルの<code>Return</code>、<code>Break</code>、<code>Continue</code>、<code>Throw</code>、<code>Goto</code>の直後の各行について、その行がラベルの対象でない限り、警告を表示するようにします。そんなセリフがあっても実行されることはない。</p>
    <p>コードが到達できないことを意図している場合（例えば、<code>return</code>によってコードのブロックを一時的に無効にした場合、またはホットキーやホットストリングをコメントアウトすることによって一時的に無効にした場合）、到達できないコードもコメントアウトすることを検討してください。また、最初の到達不可能な行の上に<a href="../misc/Labels.htm">ラベル</a>を定義することで、警告を抑制することも可能です。</p>
    <p><strong>All：</strong>サポートされているすべての警告タイプに、与えられた<em>WarningMode</em>を適用します。</p>
  </dd>

  <dt>WarningMode</dt>
  <dd>
    <p>型：<a href="../Concepts.htm#strings">文字列</a></p>

    <p>省略された場合は、<em>MsgBox</em>がデフォルトとなる。Otherwise, specify a value indicating how warnings should be delivered.</p>
    <p><strong>MsgBox：</strong>警告の内容を説明するメッセージボックスを表示します。なお、メッセージボックスが解除されると、スクリプトは通常通り実行されます。</p>
    <p><strong>StdOut：</strong>警告の説明をファイル名と行番号とともに<em>標準出力</em>（プログラムの標準出力ストリーム）に送信します。これにより、SciTEのような高級エディタがスクリプトを中断することなく警告を捕らえることができ、ユーザーは後でエディタの出力ペインから問題のある行にジャンプすることができます。</p>
    <p><strong>OutputDebug：</strong>警告の説明をデバッガに送信して表示させる。デバッガがアクティブでない場合は、何の効果もありません。詳しくは、<a href="OutputDebug.htm">OutputDebug</a>をご覧ください。</p>
    <p><strong>Off：</strong>与えられた<em>WarningType</em>の警告を無効化します。</p>
  </dd>

</dl>
<h2 id="Remarks">備考</h2>
	<p>If this directive is unspecified in the script, all warnings are enabled and use the MsgBox mode, except for LocalSameAsGlobal, which is disabled.</p>
<p>VarUnset、LocalSameAsGlobal、Unreachableの警告を出すチェックは、すべてのディレクティブがパースされた後、スクリプトが実行される前に行われます。したがって、スクリプト内の位置は重要ではありません（また、他のディレクティブと同様、#Warnは条件付きで実行することはできません）。</p>
<p>ただし、複数の#Warnディレクティブの並び順は重要です。ある予告を設定した最後の発生で、その予告のモードが決定されます。したがって、例えば、以下の2つのステートメントは、LocalSameAsGlobal以外のすべての警告を有効にする効果を合わせ持っています：</p>
<pre>#Warn All
#Warn LocalSameAsGlobal, Off
</pre>
<h2 id="Related">関連</h2>
<p><a href="../Functions.htm#Local">ローカル変数とグローバル変数</a></p>
<h2 id="Examples">例</h2>
<div class="ex" id="ExAllOff">
<p><a class="ex_number" href="#ExAllOff"></a> すべての警告を無効にします。推奨されません。</p>
<pre>#Warn All, Off</pre>
</div>

<div class="ex" id="ExOmitted">
<p><a class="ex_number" href="#ExOmitted"></a> あらゆる種類の警告を有効にし、各警告をメッセージボックスで表示します。</p>
<pre>#Warn</pre>
</div>

<div class="ex" id="ExLSAGOutputDebug">
<p><a class="ex_number" href="#ExLSAGOutputDebug"></a> グローバル変数と同じ名前を持つ宣言されていないローカル変数に対して、OutputDebugに警告を送ります。</p>
<pre>#Warn LocalSameAsGlobal, OutputDebug</pre>
</div>

</body>
</html>
