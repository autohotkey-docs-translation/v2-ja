<!DOCTYPE HTML>
<html lang="ja">
<head>
<title>StrReplace - 構文と使用法｜AutoHotkey v2</title>
<meta name="description" content="StrReplace 関数は、指定された部分文字列を新しい文字列に置き換える。" />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge" />
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>StrReplace</h1>
<p>指定された部分文字列を新しい文字列で置き換えます。</p>
<pre class="Syntax">ReplacedStr := <span class="func">StrReplace</span>(Haystack, Needle <span class="optional">, ReplaceText, CaseSense, &amp;OutputVarCount, Limit</span>)</pre>

<h2 id="Parameters">パラメータ</h2>
<dl>

  <dt>Haystack</dt>
  <dd>
    <p>型：<a href="../Concepts.htm#strings">文字列</a></p>
    <p>内容を検索・置換する文字列。</p>
  </dd>

  <dt>Needle</dt>
  <dd>
    <p>型：<a href="../Concepts.htm#strings">文字列</a></p>
    <p>検索する文字列です。</p>
  </dd>

  <dt>ReplaceText</dt>
  <dd>
    <p>型：<a href="../Concepts.htm#strings">文字列</a></p>
    <p>If blank or omitted, <em>Needle</em> will be replaced with blank (empty), meaning it will be omitted from the return value. それ以外の場合は、<em>Needle</em>を置き換える文字列を指定する。</p>
  </dd>
  
  <dt>CaseSense</dt>
  <dd>
    <p>型：<a href="../Concepts.htm#strings">String</a> or <a href="../Concepts.htm#boolean">Integer (boolean)</a></p>
    <p>If omitted, it defaults to <em>Off</em>. それ以外の場合は、次のいずれかの値を指定します：</p>
    <p><strong>On</strong> または <strong>1</strong> (true):検索では大文字と小文字が区別される。</p>
    <p><strong>Off</strong> または <strong>0</strong> (false):The search is not case-sensitive, i.e. the letters A-Z are considered identical to their lowercase counterparts.</p>
    <p><strong>Locale:</strong> The search is not case-sensitive according to the rules of the current user's locale. 例えば、英語や西欧のロケールでは、A～Zの小文字だけでなく、ÄやÜなどの非ASCII文字も小文字と同じように扱われることがほとんどです。<em>Locale</em>は、比較する文字列の性質によって、<em>Off</em>の1～8倍遅くなります。</p>
  </dd>

  <dt>&amp;OutputVarCount</dt>
  <dd>
    <p>型：<a href="../Concepts.htm#variable-references">VarRef</a></p>
    <p>If omitted, the corresponding value will not be stored. そうでない場合は、置換が発生した回数を格納する出力変数への参照を指定する（何もない場合は0）。</p>
  </dd>

  <dt>Limit</dt>
  <dd>
    <p>型：<a href="../Concepts.htm#numbers">整数</a></p>
    <p>If omitted, it defaults to -1, which replaces <u>all</u> occurrences of the pattern found in <em>Haystack</em>. それ以外の場合は、置換を許可する最大数を指定します。<em>ヘイスタック</em>の右側はそのまま。</p>
  </dd>

</dl>

<h2 id="Return_Value">戻り値</h2>
<p>型：<a href="../Concepts.htm#strings">文字列</a></p>
<p>この関数は、指定された文字列の置換されたバージョンを返す。</p>

<h2 id="Remarks">備考</h2>
<p>組み込み変数<strong>A_Space</strong>と <strong>A_Tab</strong>には、それぞれスペースとタブが1文字ずつ格納される。スペースやタブを単独で、あるいは<em>ニードル</em>の先頭や末尾で検索する場合に便利である。</p>

<h2 id="Related">関連</h2>
<p><a href="RegExReplace.htm">RegExReplace</a>, <a href="InStr.htm">InStr</a>, <a href="SubStr.htm">SubStr</a>, <a href="StrLen.htm">StrLen</a>, <a href="StrLower.htm">StrLower</a>, <a href="StrLower.htm">StrUpper</a></p>

<h2 id="Examples">例</h2>
<div class="ex" id="ExClipboard">
<p><a class="ex_number" href="#ExClipboard"></a> クリップボードの内容からすべてのCR-LFペアを削除する。</p>
<pre>A_Clipboard := StrReplace(A_Clipboard, "`r`n")</pre>
</div>

<div class="ex" id="ExVar">
<p><a class="ex_number" href="#ExVar"></a> すべてのスペースをプラスに置き換える。</p>
<pre>NewStr := StrReplace(OldStr, A_Space, "+")</pre>
</div>

<div class="ex" id="ExRemoveBlankLines">
<p><a class="ex_number" href="#ExRemoveBlankLines"></a> 変数内のテキストからすべての空行を削除する。</p>
<pre>Loop
{
    MyString := StrReplace(MyString, "`r`n`r`n", "`r`n",, &amp;Count)
    if (Count = 0)  <em>; No more replacements needed.</em>
        break
}</pre>
</div>

</body>
</html>
