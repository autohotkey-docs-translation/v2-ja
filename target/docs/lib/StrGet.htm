<!DOCTYPE HTML>
<html lang="ja">
<head>
<title>StrGet - 構文と使用法｜AutoHotkey v2</title>
<meta name="description" content="StrGet関数は、メモリアドレスまたはバッファから文字列をコピーし、オプションで指定されたコードページから変換する。" />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>StrGet</h1>

<p>メモリアドレスまたはバッファから文字列をコピーし、オプションで指定されたコードページからの変換を行います。</p>

<pre class="Syntax">String := <span class="func">StrGet</span>(Source <span class="optional">, Length, Encoding</span>)
String := <span class="func">StrGet</span>(Source <span class="optional">, Encoding</span>)</pre>
<h2 id="Parameters">パラメータ</h2>
<dl>

  <dt>Source</dt>
  <dd>
    <p>型：<a href="../Concepts.htm#objects">オブジェクト</a>または<a href="../Concepts.htm#numbers">整数</a></p>
    <p>文字列を含む<a href="Buffer.htm">Buffer</a>のようなオブジェクト、または文字列のメモリアドレス。</p>
    <p><a href="Buffer.htm#Ptr">Ptr</a>プロパティと<a href="Buffer.htm#Size">Size</a>プロパティを実装したオブジェクトであれば何でも使用できますが、この関数はネイティブの<a href="Buffer.htm">Buffer</a>オブジェクトに最適化されています。これらのプロパティを持つオブジェクトを渡すことで、関数が不正な場所からメモリを読み込むことがないようにします。そうすると、クラッシュやその他の予測不可能な動作が起こる可能性があります。</p>
    <p>Bufferライクなオブジェクトが提供される場合、または<em>Length</em>パラメータが指定される場合、文字列は<a href="../Concepts.htm#null-termination">ヌル終端</a>である必要はない。</p>
  </dd>

  <dt>Length</dt>
  <dd>
    <p>型：<a href="../Concepts.htm#numbers">整数</a></p>
    <p>文字列が<a href="../Concepts.htm#null-termination">ヌル終端</a>である場合、これは設定しないか省略することができる。それ以外の場合は、読み込む最大<a href="../Concepts.htm#character">文字数</a>を指定する。</p>
    <p>デフォルトでは、StrGetは最初のバイナリ・ゼロまでしかコピーしない。<em>Length</em>が負の場合、その絶対値は、文字列に含まれる可能性のある2進数のゼロを含め、変換する文字数を正確に示します。</p>
    <p class="warning"><strong>注意：</strong>文字列がヌル終端でない場合に<em>Length</em>を省略すると、アクセス違反が発生し、プロ グラムが終了するなどの望ましくない結果を引き起こす可能性がある。正しくない長さを指定すると、予期せぬ動作をすることがある。</p>
  </dd>

  <dt>エンコード</dt>
  <dd>
    <p>型：<a href="../Concepts.htm#strings">文字列</a>または<a href="../Concepts.htm#numbers">整数</a></p>
    <p>未設定または省略された場合、文字列は変換されずに単にコピーされる。それ以外の場合は、ソース・エンコーディングを指定する。例えば、<code>"UTF-8"</code>、<code>"UTF-16"</code>、<code>"CP936"</code>などである。数値識別子では、<em>Length</em>が指定されている場合のみ、接頭辞 "CP"を省略することができる。システム・デフォルトのANSIコード・ページを使用する場合は、空文字列または<code>"CP0"</code>を指定する。</p>
  </dd>

</dl>

<h2 id="Return_Value">戻り値</h2>
<p>型：<a href="../Concepts.htm#strings">文字列</a></p>
<p>この関数は、コピーまたは変換された文字列を返す。ソース・エンコーディングが正しく指定されていれば、返り値は常に<a href="../Concepts.htm#string-encoding">ネイティブ・エンコーディング</a>を使用する。これは常に<a href="../Concepts.htm#null-termination">ヌル終端</a>であるが、上述のように<em>Length</em>が負の場合を除き、ヌル終端は返り値の<a href="StrLen.htm">長さ</a>に含まれない。</p>

<h2 id="Error_Handling">エラー処理</h2>
<p>無効なパラメータが検出された場合は<a href="Error.htm#ValueError">ValueError</a>がスローされる。</p>
<p>変換が実行できなかった場合は<a href="Error.htm#OSError">OSError</a>がスローされます。</p>

<h2 id="Remarks">備考</h2>
<p>返り値は常に現在の実行ファイルの<a href="../Concepts.htm#string-encoding">ネイティブ・エンコーディング</a>であることに注意してください。一方、<i>Encoding</i>は与えられた<i>Source</i>から読み込まれた文字列をどのように解釈するかを指定します。<em>Encoding</em>が指定されていない場合、文字列は変換されずに単にコピーされる。</p>
<p class="note">つまり、StrGetは、メモリアドレスやバッファからテキストを取得したり、スクリプトが理解できる形式に変換したりするために使用される。</p>
<p>コード・ページ間の変換が必要な場合、戻り値の長さがソース文字列の長さと異なることがある。</p>

<h2 id="Related">関連</h2>
<p><a href="../Concepts.htm#string-encoding">String Encoding</a>, <a href="StrPut.htm">StrPut</a>, <a href="../Compat.htm">Binary Compatibility</a>, <a href="FileEncoding.htm">FileEncoding</a>, <a href="DllCall.htm">DllCall</a>, <a href="Buffer.htm">Buffer object</a>, <a href="VarSetStrCapacity.htm">VarSetStrCapacity</a></p>

<h2 id="Examples">例</h2>
<div class="ex" id="ExNumEnc">
<p><a class="ex_number" href="#ExNumEnc"></a> <em>Source</em>の後に<em>Length</em>または<em>Encoding</em>を直接指定することもできるが、その場合<em>Encoding</em>は数値であってはならない。</p>
<pre>
str := StrGet(address, "cp0")  <em>; Code page 0, unspecified length</em>
str := StrGet(address, n, 0)   <em>; Maximum n chars, code page 0</em>
str := StrGet(address, 0)      <em>; Maximum 0 chars (always blank)</em>
</pre>
</div>

</body>
</html>
