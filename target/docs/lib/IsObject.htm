<!DOCTYPE HTML>
<html lang="ja">
<head>
<title>IsObject - 構文と使用法｜AutoHotkey v2</title>
<meta name="description" content="IsObject 関数は、指定された値がオブジェクトである場合、0 以外の数値を返す。" />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>IsObject</h1>

<p>指定された値がオブジェクトである場合、0以外の数値を返します。</p>

<pre class="Syntax">Boolean := <span class="func">IsObject</span>(Value)</pre>
<h2 id="Parameters">パラメータ</h2>
<dl>

  <dt>値</dt>
  <dd>
    <p>型：<a href="Any.htm">任意</a></p>
    <p>チェックする値です。</p>
  </dd>

</dl>

<h2 id="Return_Value">戻り値</h2>
<p>型：<a href="../Concepts.htm#boolean">整数（ブーリアン）</a></p>
<p>This function returns 1 (true) if <em>Value</em> is an object, otherwise 0 (false).</p>

<h2 id="Remarks">備考</h2>
<p>プリミティブな値（数値や文字列）でないものは、COMのラッパーオブジェクトなど、<a href="Object.htm">Object</a>から派生しないものも含めて、オブジェクトとみなされます。これは、原始的な価値観とは対照的に、オブジェクトにはいくつかの共通した特徴があるため、このような区別がなされています：</p>
<ul>
  <li>各オブジェクトは動的に割り当てられ、<a href="../Objects.htm#Reference_Counting">参照カウント</a>される。変数、プロパティ、配列の要素は、いくつでも同じオブジェクトを参照することができます。不変の値の場合はこの区別は重要ではありませんが、オブジェクトは変幻自在のプロパティを持つことができます。</li>
  <li>各オブジェクトは、<a href="https://learn.microsoft.com/windows/win32/api/oaidl/nn-oaidl-idispatch">IDispatch</a>と互換性のあるインターフェースポインタでもある<a href="../Objects.htm#ObjPtr">ユニークなアドレス</a>を持っています。</li>
  <li>オブジェクトは、それが同じオブジェクトである場合にのみ、別の値と等しく比較されます。</li>
  <li>オブジェクトを暗黙のうちに文字列や数値に変換することはできません。</li>
</ul>

<h2 id="Related">関連</h2>
<p><a href="../Objects.htm">オブジェクト</a></p>
<h2 id="Examples">例</h2>
<div class="ex" id="ExBasic">
<p><a class="ex_number" href="#ExBasic"></a> 値がオブジェクトであるため、"This is an object."と報告する。</p>
<pre>obj := {key:"value"}

if IsObject(obj)
    MsgBox "This is an object."
else
    MsgBox "This is not an object."</pre>
</div>

</body>
</html>
