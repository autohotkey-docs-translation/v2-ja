<!DOCTYPE HTML>
<html lang="ja">
<head>
<title>Run / RunWait - 構文と使用法｜AutoHotkey v2</title>
<meta name="description" content="Run関数とRunWait関数は、外部プログラムを実行します。RunWaitは、プログラムが終了するまで待ってから続行します。" />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<style type="text/css">
.style3 {color: #000; background: rgba(255, 255, 0, 0.4);}
</style>
</head>
<body>

<h1>Run / RunWait</h1>

<p>外部プログラムを実行します。Runとは異なり、RunWaitはプログラムが終了するまで待機してから続行します。</p>

<pre class="Syntax">
<span class="func">Run</span> Target <span class="optional">, WorkingDir, Options, &amp;OutputVarPID</span>
ExitCode := <span class="func">RunWait</span>(Target <span class="optional">, WorkingDir, Options, &amp;OutputVarPID</span>)
</pre>
<h2 id="Parameters">パラメータ</h2>
<dl>

  <dt>Target</dt>
  <dd>
      <p>Type: <a href="../Concepts.htm#strings">String</a></p>
      <p>A document, URL, executable file (.exe, .com, .bat, etc.), shortcut (.lnk), <a href="#CLSID">CLSID</a>, or <a href="#verbs">system verb</a> to launch (see remarks). If <em>Target</em> is a local file and no path was specified with it, how the file is located typically depends on the type of file and other conditions. See <a href="#Interpretation_of_Target">Interpretation of Target</a> for details.</p>
      <p>To pass parameters, add them immediately after the program or document name as follows:</p>
      <pre>Run 'MyProgram.exe Param1 Param2'</pre>
      <p>If the program/document name or a parameter contains spaces, it is safest to enclose it in double quotes as follows (even though it may work without them in some cases):</p>
      <pre>Run '"My Program.exe" "param with spaces"'</pre>
  </dd>

  <dt>WorkingDir</dt>
  <dd>
      <p>Type: <a href="../Concepts.htm#strings">String</a></p>
      <p>If blank or omitted, the script's own working directory (<a href="../Variables.htm#WorkingDir">A_WorkingDir</a>) will be used. Otherwise, specify the initial working directory to be used by the new process. This typically also affects relative paths in <em>Target</em>, but interpretation of command-line parameters depends on the target program.</p>
  </dd>

  <dt>Options</dt>
  <dd>
      <p>Type: <a href="../Concepts.htm#strings">String</a></p>
      <p>If blank or omitted, <em>Target</em> will be launched normally. Otherwise, specify one or more of the following options:</p>
      <p><strong>Max:</strong> launch maximized</p>
      <p><strong>Min:</strong> launch minimized</p>
      <p><strong>Hide:</strong> launch hidden (cannot be used in combination with either of the above)</p>
      <p class="note"><strong>Note:</strong> Some applications (e.g. Calc.exe) do not obey the requested startup state and thus Max/Min/Hide will have no effect.</p>
  </dd>

  <dt>&amp;OutputVarPID</dt>
  <dd>
      <p>Type: <a href="../Concepts.htm#variable-references">VarRef</a></p>
      <p>省略したときは、対応する値は保存されません。Otherwise, specify a reference to the output variable in which to store the newly launched program's unique <a href="../misc/WinTitle.htm#ahk_pid">Process ID (PID)</a>. PIDを決定できなかった場合、この変数は空白になります。これは通常、直接の実行ファイルではなく、システムの動詞、文書、ショートカットが起動された場合に起こります。RunWaitもこのパラメータをサポートしていますが、その<em>OutputVarPID</em>は <a href="../misc/Threads.htm">別のスレッド</a>でチェックする必要があります（そうしないと、RunWaitに続く行が実行されるまでにプロセスが終了してしまうため、PIDは無効となります）。</p>
      <p>Run関数がPIDを取得した後、プロセスによって作成されるウィンドウは、まだ存在しないかもしれません。少なくとも1つのウィンドウが作成されるのを待つには、<code><a href="WinWait.htm">WinWait</a>"ahk_pid " OutputVarPID</code>を使用します。</p>
  </dd>

</dl>

<h2 id="Return_Value">戻り値</h2>
<p>Type: <a href="../Concepts.htm#numbers">Integer</a></p>
<p>RunWaitはRunと異なり、<em>Target</em>がクローズされるか終了するまで待機し、その時の戻り値はプログラムの終了コード（符号付き32ビット整数）となります。プログラムによっては、まだ実行中であるにもかかわらず、すぐに戻ってくるように見えるものがありますが、これは別のプロセスを生成するものです。</p>

<h2 id="Error_Handling">エラー処理</h2>
<p><em>Target</em>を起動できない場合、<a href="Try.htm">Try</a>/<a href="Catch.htm">Catch</a>文によってエラーが捕捉されない限り、例外が発生し（つまり、エラーウィンドウが表示され）、現在のスレッドが終了する。事例：</p>
<pre>try
    Run "NonExistingFile"
catch
    MsgBox "File does not exist."
</pre>
<p>組込変数<a href="../Variables.htm#LastError">A_LastError</a>には、オペレーティングシステムのGetLastError()関数の結果が設定されます。</p>
<h2 id="Interpretation_of_Target">Interpretation of Target</h2>
<p>Run/RunWait itself does not interpret command-line parameters or search for the target file. Instead, it attempts to execute the target as follows:</p>
<ul>
  <li>If no verb is specified, <em>Target</em> is passed as-is to the <em>lpCommandLine</em> parameter of <a href="https://learn.microsoft.com/windows/win32/api/processthreadsapi/nf-processthreadsapi-createprocessw">CreateProcess</a>.</li>
  <li>If a verb is specified or CreateProcess fails, and <a href="RunAs.htm">RunAs</a> is not in effect, <a href="https://learn.microsoft.com/windows/win32/api/shellapi/nf-shellapi-shellexecuteexw">ShellExecuteEx</a> is attempted.</li>
</ul>
<p>If <em>Target</em> specifies a name but not a directory, the system will search for and launch the file if it is integrated ("known"), e.g. by being contained in one of the PATH folders. The exact search order depends on whether CreateProcess and/or ShellExecuteEx is called. If CreateProcess is called, the application directory (which contains the AutoHotkey interpreter or compiled script) takes precedence over the working directory specified by <em>WorkingDir</em>. To avoid this, specify the directory; e.g. <code>.\program.exe</code>.</p>
<p>When ShellExecuteEx is being attempted, <em>Target</em> is interpreted as follows:</p>
<ul>
  <li>The substring of <em>Target</em> ending at the first space or tab may be either a <a href="#verbs">predefined verb name</a> or an asterisk followed by a verb name. If present, the optional asterisk, verb name and a single delimiting space or tab are excluded from further consideration. Verb names containing spaces or tabs are not supported, but symbols such as hyphen are permitted.</li>
  <li>If a leading double-quote mark is present, the substring between that and the next double-quote mark is considered to be the target file or action.</li>
  <li>Otherwise, the first substring which ends at a space and is either an existing file (specified by absolute path or relative to <em>WorkingDir</em>) or ends in .exe, .bat, .com, .cmd or .hta is considered the action. This allows file types such as .ahk, .vbs or .lnk to accept parameters while still allowing "known" executables such as wordpad.exe to be launched without an absolute path.</li>
  <li>A single delimiting space is ignored, if present, and the remainder of <em>Target</em> is passed as-is to CreateProcess or ShellExecuteEx as command-line parameters.</li>
</ul>
<h2 id="Remarks">備考</h2>
<p><a href="../Variables.htm#ComSpec">ComSpec</a>（cmd.exe）を使ってプログラムを実行する場合（プログラムの入力や出力をリダイレクトする必要があるため）、実行ファイルのパスや名前にスペースが含まれている場合は、その文字列全体を外側の引用符で囲む必要があります。以下の例では、外側の引用符が黄色で強調表示されています：</p>
<pre>Run A_ComSpec ' /c <span class="style3">"</span>"C:\My Utility.exe" "param 1" "second param" &gt;"C:\My File.txt"<span class="style3">"</span>'</pre>
<p>Run<code>"C:゙My DocumentsTest.txt "</code>よりも<code>Run 'C:゙WindowsNotepad.exe "C:゙My DocumentsTest.txt"</code>のように<em>Target</em>が完全パスであればパフォーマンスは若干向上するかもしれません。</p>
<p id="CLSID">Special <a href="../misc/CLSID-List.htm">CLSIDs</a> may be opened via Run. Most of them can be opened by using the shell: prefix. Some can be opened without it. 事例：</p>
<pre>Run "shell:::{D20EA4E1-3957-11D2-A40B-0C5020524153}"  <em>; Windows Tools.</em>
Run "::{20D04FE0-3AEA-1069-A2D8-08002B30309D}"  <em>; This PC (formerly My Computer or Computer).</em>
Run "::{645FF040-5081-101B-9F08-00AA002F954E}"  <em>; Recycle Bin.</em></pre>
<p id="verbs">システム動詞は、エクスプローラーのファイルの右クリックメニューで利用できるアクションに対応しています。動詞を指定せずにファイルを起動した場合、そのファイルタイプのデフォルトの動詞（通常は「open」）が使用されます。指定された場合、動詞の後にターゲットファイル名が続くようにする。現在、以下の動詞に対応しています：</p>
<table class="info">
  <tr>
    <th style="width:8%">Verb</th>
    <th abbr="説明">説明</th>
  </tr>
  <tr>
    <td>*<i>verb</i></td>
    <td>システムで定義された、またはカスタムされた任意の動詞。For example: <code>Run "*Compile " A_ScriptFullPath</code>. <i>管理者として実行</i>右クリックメニューの代わりに<a href="#RunAs">*RunAs</a>動詞を使用することができます。</td>
  </tr>
  <tr>
    <td>properties</td>
    <td>
      <p>表示されているファイルのエクスプローラーのプロパティウィンドウを表示します。For example: <code>Run 'properties "C:\My File.txt"'</code></p>
      <p class="note"><strong>注：</strong> プロパティウィンドウはスクリプトが終了すると自動的に閉じます。これを防ぐには、<a href="WinWait.htm">WinWait</a>でウィンドウが表示されるのを待ち、<a href="WinWaitClose.htm">WinWaitClose</a>でユーザーがウィンドウを閉じるのを待ちます。</p>
    </td>
  </tr>
  <tr>
    <td>find</td>
    <td>エクスプローラの「検索仲間」または「ファイル検索」ウィンドウのインスタンスを、指定されたフォルダーで開くことができます。For example: <code>Run "find D:\"</code></td>
  </tr>
  <tr>
    <td>explore</td>
    <td>指定されたフォルダーにエクスプローラーのインスタンスを開きます。For example: <code>Run "explore " A_ProgramFiles</code>.</td>
  </tr>
  <tr>
    <td>edit</td>
    <td>指示されたファイルを編集用に開きます。表示されたファイルの種類に「編集」アクションが関連付けられていない場合は、動作しないことがあります。For example: <code>Run 'edit "C:\My File.txt"'</code></td>
  </tr>
  <tr>
    <td>open</td>
    <td>指定されたファイルを開く（ほとんどのファイルタイプでデフォルトの動作であるため、通常は必要ありません）。For example: <code>Run 'open "My File.txt"'</code>.</td>
  </tr>
  <tr>
    <td>print</td>
    <td>指定されたファイルを、もしあれば、関連するアプリケーションとともに印刷します。For example: <code>Run 'print "My File.txt"'</code></td>
  </tr>
</table>
<p>RunWaitが待機状態にある間、<a href="../Hotkeys.htm">ホットキー</a>、<a href="Menu.htm">カスタムメニュー項目</a>、または<a href="SetTimer.htm">タイマー</a>を使って新しい<a href="../misc/Threads.htm">スレッド</a>を起動することができます。</p>

<h2 id="RunAs">管理者として実行</h2>
<p>実行ファイルの場合、<em>*RunAs</em>動詞は、そのファイルの右クリックメニューから「<em>管理者として実行</em>」を選択することと同じです。例えば、次のコードは、現在のスクリプトをadminとして再起動しようとするものです：</p>
<pre>full_command_line := DllCall("GetCommandLine", "str")

if not (A_IsAdmin or RegExMatch(full_command_line, " /restart(?!\S)"))
{
    try
    {
        if A_IsCompiled
            Run '*RunAs "' A_ScriptFullPath '" /restart'
        else
            Run '*RunAs "' A_AhkPath '" /restart "' A_ScriptFullPath '"'
    }
    ExitApp
}

MsgBox "A_IsAdmin: " A_IsAdmin "`nCommand line: " full_command_line</pre>
<p>ユーザーが<a href="https://en.wikipedia.org/wiki/User_Account_Control">ユーザーアカウント制御（UAC）</a>ダイアログをキャンセルしたとき、またはその他の理由で実行に失敗したときは、スクリプトは終了します。</p>
<p><a href="../Scripts.htm#SlashR">/restart</a>を使用すると、ExitAppが呼び出される前にスクリプトの新しいインスタンスが開始されても、<a href="_SingleInstance.htm">単一インスタンス</a>のプロンプトが表示されないようにします。</p>
<p>UACが無効の場合、<em>*RunAs</em>は昇格させずにプロセスを起動します。コマンドラインで<code>/restart</code>をチェックすることで、その場合にスクリプトが暴走ループに入らないようにします。なお、<code>/restart</code>は組み込みのスイッチなので、<a href="../Scripts.htm#cmd_args">コマンドラインパラメータの配列</a>には含まれません。</p>
<p>この例は、スクリプトの必要性に応じて変更することができます：</p>
<ul>
  <li>If the script absolutely requires admin rights, check <a href="../Variables.htm#IsAdmin">A_IsAdmin</a> a second time in case <em>*RunAs</em> failed to elevate the script (i.e. because UAC is disabled).</li>
  <li>To keep the script running even if the user cancels the UAC prompt, move <a href="ExitApp.htm">ExitApp</a> into the try block.</li>
  <li>再起動に失敗した場合（スクリプトファイルが変更または削除された場合など）でもスクリプトを実行し続けるには、ExitAppを削除して、Runの代わりにRunWaitを使用します。成功すると、<code>/restart</code>によって新しいインスタンスが古いインスタンスを終了させます。失敗すると、新しいインスタンスは終了し、RunWaitが戻ります。</li>
</ul>
<p>AutoHotkeyのインストーラは、<em>.ahk</em>ファイルに対して<em>RunAs</em>動詞を登録しており、<code>Run "*RunAs script.ahk"</code>でスクリプトを管理者として起動できます。</p>

<h2 id="Related">関連</h2>
<p><a href="RunAs.htm">RunAs</a>, <a href="Process.htm">Process functions</a>, <a href="Exit.htm">Exit</a>, <a href="../misc/CLSID-List.htm">CLSID List</a>, <a href="DllCall.htm">DllCall</a></p>

<h2 id="Examples">例</h2>
<div class="ex" id="ExBasic">
<p><a class="ex_number" href="#ExBasic"></a> Runは、任意のディレクトリからWindowsシステムのプログラムを起動することができます。なお、.exeなどの実行ファイルの拡張子は省略可能です。</p>
<pre>Run "notepad"</pre>
</div>

<div class="ex" id="ExURL">
<p><a class="ex_number" href="#ExURL"></a> Runは、URLの起動が可能です：</p>
<p>以下は、ユーザーのデフォルトのウェブブラウザでインターネットアドレスを開くものです。</p>
<pre>Run "https://www.google.com"</pre>
<p>以下は、受信者が記入されたデフォルトの電子メールアプリケーションを開くものです。</p>
<pre>Run "mailto:someone@somedomain.com"</pre>
<p>以下は、上記と同じに、件名と本文を追加します。</p>
<pre>Run "mailto:someone@somedomain.com?subject=This is the subject line&amp;body=This is the message body's text."</pre>
</div>

<div class="ex" id="ExErrorLevel">
<p><a class="ex_number" href="#ExErrorLevel"></a> 最大化されたアプリケーションでドキュメントを開き、失敗時にカスタムエラーメッセージを表示します。</p>
<pre>try Run("ReadMe.doc", , "Max")
if A_LastError
    MsgBox "The document could not be launched."</pre>
</div>

<div class="ex" id="ExVerb">
<p><a class="ex_number" href="#ExVerb"></a> 最小化状態でdirコマンドを実行し、出力をテキストファイルに保存します。その後、テキストファイルとそのプロパティダイアログが開かれます。</p>
<pre>RunWait A_ComSpec " /c dir C:\ &gt;&gt;C:\DirTest.txt", , "Min"
Run "C:\DirTest.txt"
Run "properties C:\DirTest.txt"
Persistent  <em>; Keep the script from exiting, otherwise the properties dialog will close.</em></pre>
</div>

<div class="ex" id="ExCLSID">
<p><a class="ex_number" href="#ExCLSID"></a> Runは<a href="../misc/CLSID-List.htm">CLSID</a>を起動することができます：</p>
<p>次はごみ箱を開きます。</p>
<pre>Run "::{645FF040-5081-101B-9F08-00AA002F954E}"</pre>
<p>次はPC（従来のマイコンピュータまたはコンピュータ）を開きます。</p>
<pre>Run "::{20D04FE0-3AEA-1069-A2D8-08002B30309D}"</pre>
</div>

<div class="ex" id="ExMultipleCmds">
<p><a class="ex_number" href="#ExMultipleCmds"></a> 複数のコマンドを連続して実行する場合は、各コマンドの間に"&amp;&amp;"を使用します。</p>
<pre>Run A_ComSpec "/c dir /b &gt; C:\list.txt &amp;&amp; type C:\list.txt &amp;&amp; pause"</pre>
</div>

<div class="ex" id="ExStdOut">
<p><a class="ex_number" href="#ExStdOut"></a> 以下のカスタム関数を使用して、コマンドを実行してその出力を取得したり、複数のコマンドを一度に実行してその出力を取得したりすることができます。WshShellオブジェクトについては、<a href="https://learn.microsoft.com/previous-versions/aew9yb99(v=vs.85)">Microsoft Docs</a>を参照してください。</p>
<pre>MsgBox RunWaitOne("dir " A_ScriptDir)

MsgBox RunWaitMany("
(
echo Put your commands here,
echo each one will be run,
echo and you'll get the output.
)")

RunWaitOne(command) {
    shell := ComObject("WScript.Shell")
    <em>; Execute a single command via cmd.exe</em>
    exec := shell.Exec(A_ComSpec " /C " command)
    <em>; Read and return the command's output</em>
    return exec.StdOut.ReadAll()
}

RunWaitMany(commands) {
    shell := ComObject("WScript.Shell")
    <em>; Open cmd.exe with echoing of commands disabled</em>
    exec := shell.Exec(A_ComSpec " /Q /K echo off")
    <em>; Send the commands to execute, separated by newline</em>
    exec.StdIn.WriteLine(commands "`nexit")  <em>; Always exit at the end!</em>
    <em>; Read and return the output of all commands</em>
    return exec.StdOut.ReadAll()
}
</pre>
</div>

<div class="ex" id="ExecScript">
<p><a class="ex_number" href="#ExecScript"></a> 与えられたコードを新しいAutoHotkeyのプロセスとして実行します。</p>
<pre>ExecScript(Script, Wait:=true)
{
    shell := ComObject("WScript.Shell")
    exec := shell.Exec("AutoHotkey.exe /ErrorStdOut *")
    exec.StdIn.Write(Script)
    exec.StdIn.Close()
    if Wait
        return exec.StdOut.ReadAll()
}

<em>; Example:</em>
ib := InputBox("Enter an expression to evaluate as a new script.",,, 'Ord("*")')
if ib.result = "Cancel"
    return
result := ExecScript('FileAppend ' ib.value ', "*"')
MsgBox "Result: " result
</pre>
</div>

</body>
</html>
