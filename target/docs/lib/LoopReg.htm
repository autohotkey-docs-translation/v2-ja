<!DOCTYPE HTML>
<html lang="ja">
<head>
<title>Loop Reg - 構文と使用法｜AutoHotkey v2</title>
<meta name="description" content="Loop Regは、指定したレジストリサブキーの内容を1項目ずつ取得します。" />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>Loop Reg</h1>

<p>指定されたレジストリサブキーの内容を一度に1項目ずつ取得します。</p>

<pre class="Syntax"><span class="func">Loop Reg</span> KeyName <span class="optional">, Mode</span></pre>
<h2 id="Parameters">パラメータ</h2>
<dl>

  <dt>KeyName</dt>
  <dd>
    <p>型：<a href="../Concepts.htm#strings">文字列</a></p>
    <p>レジストリキーのフルネームです。例：<code>"HKLM\Software\SomeApplication"</code>。</p>
    <p>キーは、HKEY_LOCAL_MACHINE（または HKLM）、HKEY_USERS（または HKU）、HKEY_CURRENT_USER（または HKCU）、HKEY_CLASSES_ROOT（または HKCR）、またはHKEY_CURRENT_CONFIG（または HKCC）で始まらなければなりません。</p>
    <p><a href="#remote">リモートレジストリ</a>にアクセスするには、<code>"\\workstation01\HKLM"</code>のようにコンピューター名とバックスラッシュを前に追加してください。</p>
  </dd>
  
  <dt>Mode</dt>
  <dd>
    <p>型：<a href="../Concepts.htm#strings">文字列</a></p>
    <p>空白または省略された場合、値のみが含まれ、サブキーは再帰されません。それ以外の場合は、以下の文字を1つ以上指定してください：</p>
    <ul>
      <li>K = Include keys.</li>
      <li>V = Include values. KとVの両方が省略された場合の値も含まれます。</li>
      <li>R = Recurse into subkeys. R が省略された場合、<em>KeyName</em>のサブキー内のキーと値は含まれません。</li>
    </ul>
  </dd>


</dl>

<h2 id="Remarks">備考</h2>
<p>レジストリループは、レジストリ値やサブキーのコレクションを一度に1つずつ操作したい場合に便利です。値とサブキーは逆順（下から上）に取得されるため、ループを中断させることなく、<a href="RegDelete.htm">RegDelete</a>と <a href="RegDeleteKey.htm">RegDeleteKey</a>をループ内で使用することができます。</p>
<p id="vars">どのレジストリ-ループ内にも、以下の変数が存在します。内側のレジストリループが外側のレジストリループで囲まれている場合、最も内側のループのレジストリ項目が優先されます：</p>
<table class="info">
  <tr>
    <th abbr="変数">変数</th>
    <th abbr="説明">説明</th>
  </tr>
  <tr>
    <td>A_LoopRegName</td>
    <td>現在検索されている項目の名前。値名またはサブキーの名前のいずれかを指定します。Windows RegEditで「(既定)」と表示される値名は、値が割り当てられていれば取得できますが、A_LoopRegNameは空白になります。</td>
  </tr>
  <tr>
    <td>A_LoopRegType</td>
    <td>現在検索されているアイテムのタイプで、以下の単語のいずれかです：KEY（つまり、現在検索されている項目は値ではなくサブキー）、REG_SZ、REG_EXPAND_SZ、REG_MULTI_SZ、REG_DWORD、REG_QWORD、REG_BINARY、REG_LINK、REG_RESOURCE_LIST、REG_FULL_RESOURCE_DESCRIPTOR、 REG_RESOURCE_REQUIREMENTS_LIST、REG_DWORD_BIG_ENDIAN （ほとんどのWindowsハードでは稀でしょうね）。現在検索されている項目が不明なタイプの場合、空となります。</td>
  </tr>
  <tr>
    <td>A_LoopRegKey</td>
    <td>現在のループ項目が含まれるキーのフルネーム。リモートレジストリアクセスの場合、この値にはコンピュータ名は含まれ<u>ません</u>。</td>
  </tr>
  <tr>
    <td>A_LoopRegTimeModified</td>
    <td>現在のサブキーまたはその値のいずれかが最後に変更された時刻。Format <a href="FileSetTime.htm">YYYYMMDDHH24MISS</a>. 現在検索されている項目がサブキーでない場合（すなわち<em>A_LoopRegType</em>がKEYという単語でない場合）、この変数は空となります。</td>
  </tr>
</table>
<p>レジストリループ内で使用する場合、以下の関数を簡略化して使用することで、現在検索されている項目が操作されるべきことを示すことができます：</p>
<table class="info">
  <tr>
    <th style="min-width: 11em;">構文</th>
    <th abbr="説明">説明</th>
  </tr>
  <tr>
    <td><code>Value := <a href="RegRead.htm">RegRead</a>()</code></td>
    <td>現在の項目を読み取ります。現在の項目がキーである場合、例外が発生します。</td>
  </tr>
  <tr>
    <td><code><a href="RegWrite.htm">RegWrite</a> Value</code><br><code><a href="RegWrite.htm">RegWrite</a></code></td>
    <td>現在のアイテムに書き込みます。<em>Value</em>が省略された場合、項目の種類に応じて 0 または空白とします。現在の項目がキーの場合、例外が発生し、レジストリは変更されません。</td>
  </tr>
  <tr>
    <td><code><a href="RegDelete.htm">RegDelete</a></code></td>
    <td>現在の項目が値である場合、それを削除します。現在の項目がキーの場合、そのデフォルト値が代わりに削除されます。</td>
  </tr>
  <tr>
    <td><code><a href="RegDeleteKey.htm">RegDeleteKey</a></code></td>
    <td>現在のアイテムがキーの場合、削除します。現在の項目が値の場合、その値を<em>含む</em>キーは、すべてのサブキーと値を含めて削除されます。</td>
  </tr>
  <tr>
    <td><code>RegCreateKey</code></td>
    <td>上記の RegDeleteKey と同様にキーを対象とします。ループ中にキーが削除された場合、RegCreateKeyを使用して再作成することができます。そうでない場合は、RegCreateKeyは、スクリプトがキーへの書き込みアクセス権を持っているかどうかを確認するだけです。</td>
  </tr>
</table>
<p id="remote">リモートレジストリにアクセスする場合（前述の<em>KeyName</em>パラメータを使用する場合）、以下の注意事項があります：</p>
<ul>
  <li>対象マシンでは、リモートレジストリサービスが稼働している必要があります。</li>
  <li>リモートレジストリへのアクセスは、ターゲットコンピュータがあなたと同じドメインにない場合、またはローカルまたはリモートのユーザー名に十分な権限がない場合に失敗することがあります（ただし、可能な回避策については以下を参照してください）。</li>
  <li>ユーザー名のドメイン、ワークグループ、権限によっては、レジストリへのリモートアクセスに先立ち、ドライブのマッピングなど、共有デバイスへの接続が必要な場合があります。レジストリへのアクセスや編集を許可されたリモートユーザー名とパスワードを使用して、このような接続を行うと、副次的にリモートレジストリアクセスが可能になる場合があります。</li>
  <li>すでに別のユーザーとしてターゲットコンピュータに接続している場合（たとえば、ユーザーGuestでマップされたドライブ）、リモートレジストリ機能で再接続して現在ログオンしているユーザー名で再認証するために、その接続を終了する必要がある場合があります。</li>
</ul>
<p id="otb">オプションで、オープンブレースを下ではなく同じラインに表示させるOTB（One True Brace）スタイルを採用することも可能です。事例：<code>Loop Reg "HKLM\Software\AutoHotkey", "V" {</code>。</p>
<p><a href="Block.htm">ブロック</a>、<a href="Break.htm">Break</a>、<a href="Continue.htm">Continue</a>、A_Index変数（どのタイプのループにも存在する）については、「<a href="Loop.htm">Loop</a>」をご覧ください。</p>
<p>このループには、オプションで<a href="Else.htm">Else</a>文が続くことがあり、指定されたタイプのレジストリ項目が見つからなかった場合（つまり、ループがゼロ回繰り返された場合）に実行されます。</p>

<h2 id="Related">関連</h2>
<p><a href="Loop.htm">Loop</a>、<a href="Break.htm">Break</a>、<a href="Continue.htm">Continue</a>、<a href="Block.htm">ブロック</a>、<a href="RegRead.htm">RegRead</a>、<a href="RegWrite.htm">RegWrite</a>、<a href="RegDelete.htm">RegDelete</a>、<a href="RegDeleteKey.htm">RegDeleteKey</a>、<a href="SetRegView.htm">SetRegView</a></p>

<h2 id="Examples">例</h2>
<div class="ex" id="ExBasic">
<p><a class="ex_number" href="#ExBasic"></a> 指定されたレジストリサブキーの内容を一度に1項目ずつ取得します。</p>
<pre>Loop Reg, "HKEY_LOCAL_MACHINE\Software\SomeApplication"
    MsgBox A_LoopRegName</pre>
</div>

<div class="ex" id="ExRegDelete">
<p><a class="ex_number" href="#ExRegDelete"></a> Internet Explorerのユーザーが入力したURLの履歴を削除します。</p>
<pre>Loop Reg, "HKEY_CURRENT_USER\Software\Microsoft\Internet Explorer\TypedURLs"
    RegDelete</pre>
</div>

<div class="ex" id="ExTest">
<p><a class="ex_number" href="#ExTest"></a> 動作するテストスクリプトです。</p>
<pre>Loop Reg, "HKCUSoftware", "Microsoft", "R KV"  <em>; キーと値を再帰的に取得します。</em>
{
    if A_LoopRegType = "key"
        value := ""
    else
    {
        try
            value := RegRead()
        catch
            value := "*error*"
    }
    Result := MsgBox(A_LoopRegName " = " value " (" A_LoopRegType ")`n`nContinue?",, "y/n")
}
Until Result = "No"</pre>
</div>

<div class="ex" id="ExRegSearch">
<p><a class="ex_number" href="#ExRegSearch"></a> レジストリ全体から特定の値を再帰的に検索します。</p>
<pre>
RegSearch("Notepad")

RegSearch(Target)
{
    Loop Reg, "HKEY_LOCAL_MACHINE", "KVR"
    {
        if !CheckThisRegItem()  <em>; 停止を指示されました。</em>
            return
    }
    Loop Reg, "HKEY_USERS", "KVR"
    {
        if !CheckThisRegItem()  <em>; 停止を指示されました。</em>
            return
    }
    Loop Reg, "HKEY_CURRENT_CONFIG", "KVR"
    {
        if !CheckThisRegItem()  <em>; 停止を指示されました。</em>
            return
    }
    <em>; Note: I believe HKEY_CURRENT_USER does not need to be searched if
    ; HKEY_USERS is being searched. Similarly, HKEY_CLASSES_ROOT provides a
    ; combined view of keys from HKEY_LOCAL_MACHINE and HKEY_CURRENT_USER, so
    ; searching all three isn't necessary.</em>

    CheckThisRegItem()
    {
        if A_LoopRegType = "KEY"  <em>; 鍵の名前もチェックしたい場合は、この2行を削除してください。</em>
            return true
        try
            RegValue := RegRead()
        catch
            return true
        if InStr(RegValue, Target)
        {
            Result := MsgBox(
            (
            "The following match was found:
            " A_LoopRegKey "\" A_LoopRegName "
            Value = " RegValue "
            
            Continue?"
            ),, "y/n")
            if Result = "No"
                return false  <em>; 発信者に検索をやめるように伝える。</em>
        }
        return true
    }
}
</pre>
</div>

</body>
</html>
