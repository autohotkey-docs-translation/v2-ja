<!DOCTYPE HTML>
<html lang="ja">
<head>
<title>A_MenuMaskKey - 構文と使用法｜AutoHotkey v2</title>
<meta name="description" content="A_MenuMaskKeyは、WindowsキーまたはAltキーのキーアップイベントのマスクに使用するキーを制御する組み込み変数です。" />
<meta name="ahk:equiv-v1" content="lib/_MenuMaskKey.htm" />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>A_MenuMaskKey</h1>

<p><em>A_MenuMaskKey</em>は、WindowsキーまたはAltキーのキーアップイベントのマスクに使用するキーを制御する<a href="../Concepts.htm#built-in-variables">組み込み変数</a>です。</p>
<p><em>A_MenuMaskKey</em>で仮想キーコード（NN）とスキャンコード（NNN）を表すvkNNscNNN形式の<a href="../Concepts.htm#strings">文字列</a>を取得または設定できます。空白の時は、マスクは無効になります。</p>
<p>スクリプトは、<a href="../KeyList.htm">キー名</a>、<a href="../KeyList.htm#vk">vkNN</a>シーケンス、<a href="../KeyList.htm#sc">scNNN</a>シーケンスを割り当てることもでき、この場合、一般にキーが送信されるまでVKまたはSCコードのどちらかがゼロのままとされ、その後自動的に決定されます。<code>"vk00sc000"</code>を割り当てたときは、<code>""</code>を割り当てたの同様にマスクが無効になります。</p>
<p>返される文字列は、どう割り当てられたかにかかわらず、有効な場合は常に vkNNscNNN の形式になり、無効な場合は空白になります。すべてのvkNNscNNN配列と、ゼロでないすべてのvkNNまたはscNNN配列が許容されるが、組み合わせによっては、メニューの抑制に失敗することがある。それ以外の無効なキーは、<a href="Error.htm#ValueError">ValueError</a>がスローされます。</p>
<p>初期値はvk11sc01D（左コントロールキー）です。</p>

<h2 id="Remarks">備考</h2>
<p>スタートメニューやアクティブウィンドウのメニューバーが予期せぬタイミングで起動しないように、マスクキーが自動送信されます。</p>
<p>この変数を使用すると、マスクキーを副作用の少ないキーに変更することができます。例えば、マイクロソフト社が「unassigned」と表記するvkE8や、「no mapping」（何の機能も持たないキー）という意味で予約されているvkFFなど、一般的に何の効果もない仮想キーコードが良い候補となります。VKがゼロでSCがゼロでないなど、一部の値ではスタートメニューの抑制に失敗することがあります。キーコードは、既存のキーと合わせる必要はありません。</p>
<p class="note"><strong>注:</strong>マイクロソフトは、未使用のキーコードに機能を割り当てることがあります。例えば、かつてvk07は未定義で使っても問題ありませんでしたが、Windows 10 ビルド1909以降、ゲームバーを開くために予約されるようになりました。</p>
<p>この設定はグローバルであり、スクリプト全体の動作に影響を与えるために一度だけ指定する必要があることを意味します。</p>
<p><strong>ホットキー</strong>についてキーボードフックやマウスフックを使ってホットキーを実装した場合、最終的なキー入力はアクティブウィンドウやシステムから見えない場合があります。もし、WinやAltのキーダウンとキーアップ<em>だけを</em>検出し、その間にキー入力がなければ、通常はメニューを起動します。これを防ぐために、キーボードやマウスのフックが自動的にマスクキーを送信する場合があります。</p>
<p>フックホットキーを押すと、次のAltまたはWinのキーアップがマスクされるのは、以下の条件をすべて満たしている場合です。</p>
<ul>
  <li>ホットキーは抑制されます（<a href="../Hotkeys.htm#Tilde">チルダ修飾子</a>がありません）。</li>
  <li><kbd>Alt</kbd>または<kbd>Win</kbd>は、ホットキーが押されると論理的にダウンします。</li>
  <li>モディファイアが物理的にダウンしているか、ホットキーがモディファイアの起動を要求している。例えば、<code>$#a::</code>と<code>AppsKey::RWin</code>の組み合わせでは、<kbd>Menu</kbd>+<kbd>A</kbd>を押したときにマスクが発生しますが、<kbd>Menu</kbd>単体ではスタートメニューを開くことができます。</li>
  <li><kbd>Ctrl</kbd>+<kbd>Alt</kbd>ではメニューバーが起動しないため、ホットキー押下時に<kbd>Ctrl</kbd>が押されていた場合、<kbd>Alt</kbd>はマスクされない。</li>
  <li><kbd>Win</kbd>キーが<kbd>Ctrl</kbd>、<kbd>Shift</kbd>、<kbd>Alt</kbd>で変更された場合、スタートメニューは通常起動しないので、<kbd>Win</kbd>はマスクされない。ただし、キーリピートは、物理的に最後に押されたキーであれば<kbd>Win</kbd>でも発生するため、直近のWinのキーが<em>いつ</em>ダウンするかを予測することは困難です。</li>
  <li>キーボードフックがインストールされていないか（マウスのホットキー用）、最後のAltまたはWinキーダウン以降、他の（サポートされていない）キーダウンまたはキーアップイベントがないかのいずれかです。なお、キーリピートは修飾キーでも、他のキー送信後でも発生しますが、最後に物理的に押されたキーに対してのみ発生します。</li>
</ul>
<p>マウスホットキーは、キーボードフックが装着されていない場合、マスクキーを即座に送信する場合があります。</p>
<p><a href="../Hotkeys.htm#Tilde">チルダ修飾子</a>を持つホットキーは、キーのネイティブ機能をブロックすることを目的としていないため、マスキングを引き起こすことはありません。<kbd>Win</kbd>が他のキーと組み合わせて使用されたことをシステムが検出するため、<code>~#a::</code>のようなホットキーでもメニューは抑制されます。ただし、マウスのホットキーや両<kbd>Win</kbd>自身（<code>~LWin::</code>、<code>~RWin::</code>）は、スタートメニューを抑制しません。</p>
<p>スタートメニュー（またはアクティブウィンドウのメニューバー）は、任意のキーストロークを送信することで抑制することができます。次の例は、左<kbd>Win</kbd>でスタートメニューを起動する機能を無効にし、モディファイアとして使用できるようにしたものです。</p>
<pre>~LWin::Send "{Blind}{vkE8}"</pre>
<p><strong>送信：</strong> <a href="Send.htm">Send</a>、<a href="ControlSend.htm">ControlSend</a>と関連するものは、通常の操作の一部として修飾キーを解放することが多い。例えば、ホットキー<code>&lt;#a::SendText Address</code>は、通常、<em>Address</em>の内容を送信する前に左<kbd>Win</kbd>を離し、送信後に左<kbd>Win</kbd>を押し戻す必要があります（他のWinキーの組み合わせが動作し続けるように）。このような場合、WinやAltのキーアップでメニューが起動しないように、マスクキーを送信することがあります。</p>

<h2 id="Related">関連</h2>
<p>See <a href="https://www.autohotkey.com/board/topic/20619-extraneous-control-key-presses-generated-by-or-hotkeys/">this archived forum thread</a> for background information.</p>

<h2 id="Examples">例</h2>
<div class="ex" id="ExBasic">
<p><a class="ex_number" href="#ExBasic"></a> 基本的な使い方です。</p>
<pre>A_MenuMaskKey := "vkE8"  <em>; マスキングキーをvkE8などの未割り当てのものに変更します。</em>
#Space::Run A_ScriptDir  <em>; 追加のCtrlキー操作は発生しません。</em></pre>
</div>

<div class="ex" id="ExAdvanced">
<p><a class="ex_number" href="#ExAdvanced"></a> この変数によって、LControlの代わりにvkFFが送信される仕組みを詳しく説明します。</p>
<pre>A_MenuMaskKey := "vkFF"  <em>; vkFFはマッピングなしです。</em>
#UseHook
#Space::
!Space::
{
    KeyWait "LWin"
    KeyWait "RWin"
    KeyWait "Alt"
    KeyHistory
}</pre>
</div>

</body>
</html>
