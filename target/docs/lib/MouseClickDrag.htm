<!DOCTYPE HTML>
<html lang="ja">
<head>
<title>MouseClickDrag - 構文と使用法｜AutoHotkey v2</title>
<meta name="description" content="MouseClickDrag 関数は、指定されたマウスボタンをクリックしたまま、移動先の座標にマウスを移動し、ボタンを離すものです。" />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>MouseClickDrag</h1>

<p>指定したマウスボタンをクリックしたまま、移動先の座標にマウスを移動し、ボタンを離します。</p>

<pre class="Syntax"><span class="func">MouseClickDrag</span> WhichButton, X1, Y1, X2, Y2 <span class="optional">, Speed, Relative</span></pre>
<h2 id="Parameters">パラメータ</h2>
<dl>

  <dt>WhichButton</dt>
  <dd>
    <p>型：<a href="../Concepts.htm#strings">文字列</a></p>
    <p>クリックするボタンです。左、右、真ん中（またはそれぞれの頭文字だけ）。第4ボタンにX1、第5ボタンにX2を指定します。事例：<code>MouseClickDrag "X1", ...</code>.</p>
    <p>左はプライマリーボタン、右はセカンダリーボタンに対応します。ユーザーがシステム設定でボタンを入れ替えると、ボタンの物理的な位置は入れ替わりますが、効果は変わりません。</p>
  </dd>

  <dt>X1, Y1</dt>
  <dd>
    <p>型：<a href="../Concepts.htm#numbers">整数</a></p>
    <p>ドラッグ開始位置のx/y座標（マウスはドラッグ開始直前にこの座標に移動します）。座標は、<a href="CoordMode.htm">CoordMode</a>で変更されない限り、アクティブウィンドウからの相対座標となります。省略された場合、マウスの現在位置が使用されます。</p>
  </dd>

  <dt>X2, Y2</dt>
  <dd>
    <p>型：<a href="../Concepts.htm#numbers">整数</a></p>
    <p>マウスをドラッグする先のx/y座標（つまり、ボタンを押したままの状態）。座標は、<a href="CoordMode.htm">CoordMode</a>で変更されない限り、アクティブウィンドウからの相対座標となります。</p>
  </dd>

  <dt>Speed</dt>
  <dd>
    <p>型：<a href="../Concepts.htm#numbers">整数</a></p>
    <p>マウスを動かす速度を0（最速）～100（最遅）の範囲で指定します。</p>
    <p class="note"><strong>注意</strong>：スピードを0にすると、マウスが瞬時に動きます。</p>
    <p>省略された場合、デフォルトの速度（<a href="SetDefaultMouseSpeed.htm">SetDefaultMouseSpeed</a>で設定されたもの、またはそれ以外の2）が使用されることになります。</p>
    <p><a href="SendMode.htm">SendInput/Playモード</a>では<em>Speed</em>は無視され、マウスは瞬時に移動します（ただし、<a href="SetMouseDelay.htm">SetMouseDelay</a>にはSendPlayに適用されるモードがあります）。観客に向けてデモンストレーションを行うスクリプトのように、視覚的にゆっくりとマウスを動かしたい場合は、次のようにします。 <code><a href="Send.htm#Click">SendEvent {Click 100 200}</a></code>または<code><a href="SendMode.htm">SendMode</a>Event</code>（オプションで<a href="BlockInput.htm">BlockInputと</a>併用する）。</p>
  </dd>

  <dt>Relative</dt>
  <dd>
    <p>型：<a href="../Concepts.htm#strings">文字列</a></p>
    <p>省略した場合、X、Y座標は絶対値として扱われます。この動作を変更するには、次の文字を指定します：</p>
    <p><strong>R：</strong>X1、Y1座標は、現在のマウス位置からのオフセットとして扱われます。つまり、カーソルは現在位置から右にX1ピクセル（マイナスの場合は左）、下にY1ピクセル（マイナスの場合は上）だけ移動することになります。同様に、X2、Y2座標は、X1、Y1座標からのオフセットとして扱われます。例えば、次のようにすると、まずカーソルを開始位置から下と右に5ピクセル移動させ、その位置から下と右に10ピクセルずつドラッグします：<code>MouseClickDrag "Left", 5, 5, 10, 10, , "R"</code>.</p>
  </dd>

</dl>

<h2 id="Remarks">備考</h2>
<p><a href="SendMode.htm">SendModeで</a>設定された送信方式を使用します。</p>
<p>ドラッグは各種送信機能でも行えますが、機能名でモードを指定できるため、より柔軟な対応が可能です。事例：</p>
<pre>SendEvent "{Click 6 52 Down}{click 45 52 Up}"</pre>
<p>上記の方法のもう一つの利点は、MouseClickDragとは異なり、ユーザーがシステムのコントロールパネルでマウスの左右のボタンを入れ替えた場合に自動的に補正されることです。</p>
<p><a href="SendMode.htm">SendPlayモード</a>は、他のモードに比べ、より幅広いゲームにおいてマウスイベントを正常に発生させることができます。ただし、WordPadやMetapadなどのRichEditコントロールでは、SendPlayによるドラッグが効かない場合があります（他のコントロールも可能性があります）。</p>
<p>アプリケーションやゲームによっては、マウスの動きが速いと追従できないことがあります。<em>speed</em>パラメータまたは<a href="SetDefaultMouseSpeed.htm">SetDefaultMouseSpeed</a>を使用すると、速度を下げることができます（デフォルトの<a href="SendMode.htm">SendEventモードのみ</a>）。</p>
<p><a href="BlockInput.htm">BlockInput</a>関数を使用すると、ユーザーによる物理的なマウス操作が、マウス関数によって生成されるシミュレーションマウスイベントを妨害することを防ぐことができます。ただし、<a href="SendMode.htm">SendInput/Play</a>モードでは、ユーザーの物理的なマウス操作を自動的に後回しにするため、一般にこの操作は必要ありません。</p>
<p>マウスのクリックダウンとクリックアップのたびに、自動的に遅延が発生します（<a href="SendMode.htm">SendInputモード</a>は除く）。この遅延は、ドラッグ操作の際のマウスの移動後にも発生します。ディレイの長さを変更する場合は、<a href="SetMouseDelay.htm">SetMouseDelay</a>を使用します。</p>
<h2 id="Related">関連</h2>
<p><a href="CoordMode.htm">CoordMode</a>, <a href="SendMode.htm">SendMode</a>, <a href="SetDefaultMouseSpeed.htm">SetDefaultMouseSpeed</a>, <a href="SetMouseDelay.htm">SetMouseDelay</a>, <a href="Click.htm">Click</a>, <a href="MouseClick.htm">MouseClick</a>, <a href="MouseGetPos.htm">MouseGetPos</a>, <a href="MouseMove.htm">MouseMove</a>, <a href="BlockInput.htm">BlockInput</a></p>
<h2 id="Examples">例</h2>
<div class="ex" id="ExBasic">
<p><a class="ex_number" href="#ExBasic"></a> マウスの左ボタンをクリックしたまま、マウスカーソルを移動先の座標に移動させ、ボタンを離します。</p>
<pre>MouseClickDrag "left", 0, 200, 600, 400</pre>
</div>

<div class="ex" id="ExPaint">
<p><a class="ex_number" href="#ExPaint"></a> MS Paintを開き、小さな家を描きます。</p>
<pre>Run "mspaint.exe"
if !WinWaitActive("ahk_class MSPaintApp",, 2)
    return
WinMaximize
MouseClickDrag "L", 150, 350, 150, 250
MouseClickDrag "L", 150, 250, 200, 200
MouseClickDrag "L", 200, 200, 250, 250
MouseClickDrag "L", 250, 250, 150, 250
MouseClickDrag "L", 150, 250, 250, 350
MouseClickDrag "L", 250, 350, 250, 250
MouseClickDrag "L", 250, 250, 150, 350
MouseClickDrag "L", 150, 350, 250, 350</pre>
</div>

</body>
</html>
