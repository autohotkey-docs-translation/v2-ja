<!DOCTYPE HTML>
<html lang="ja">
<head>
<title>MouseClickDrag - 構文と使用法｜AutoHotkey v2</title>
<meta name="description" content="MouseClickDrag 関数は、指定されたマウスボタンをクリックしたまま、移動先の座標にマウスを移動し、ボタンを離すものです。" />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>MouseClickDrag</h1>

<p>指定したマウスボタンをクリックしたまま、移動先の座標にマウスを移動し、ボタンを離します。</p>

<pre class="Syntax"><span class="func">MouseClickDrag</span> WhichButton, X1, Y1, X2, Y2 <span class="optional">, Speed, Relative</span></pre>
<h2 id="Parameters">パラメータ</h2>
<dl>

  <dt>WhichButton</dt>
  <dd>
    <p>型：<a href="../Concepts.htm#strings">String</a></p>
    <p>If blank or omitted, it defaults to Left (the left mouse button). Otherwise, specify Left, Right, Middle (or just the first letter of each of these); or X1 (fourth button) or X2 (fifth button). 事例：<code>MouseClickDrag "X1", 0, 0, 10, 10</code>.</p>
    <p>左はプライマリーボタン、右はセカンダリーボタンに対応します。ユーザーがシステム設定でボタンを入れ替えると、ボタンの物理的な位置は入れ替わりますが、効果は変わりません。</p>
  </dd>

  <dt>X1, Y1</dt>
  <dd>
    <p>型：<a href="../Concepts.htm#numbers">整数</a></p>
    <p>Specify the X and Y coordinates of the drag's starting position (the mouse will be moved to these coordinates right before the drag is started). Coordinates are relative to the active window's client area unless <a href="CoordMode.htm">CoordMode</a> was used to change that.</p>
    <p><span class="ver">[v2.0.7+]</span>: If both X1 and Y1 are omitted, the mouse cursor's current position is used. Due to a bug, X1 and Y1 were mandatory in previous versions.</p>
  </dd>

  <dt>X2, Y2</dt>
  <dd>
    <p>型：<a href="../Concepts.htm#numbers">整数</a></p>
    <p>The X and Y coordinates to drag the mouse to (that is, while the button is held down). Coordinates are relative to the active window's client area unless <a href="CoordMode.htm">CoordMode</a> was used to change that.</p>
  </dd>

  <dt>Speed</dt>
  <dd>
    <p>型：<a href="../Concepts.htm#numbers">整数</a></p>
    <p>省略された場合、デフォルトの速度（<a href="SetDefaultMouseSpeed.htm">SetDefaultMouseSpeed</a>で設定されたもの、またはそれ以外の2）が使用されることになります。Otherwise, specify the speed to move the mouse in the range 0 (fastest) to 100 (slowest). スピードを0にすると、マウスが瞬時に動きます。</p>
    <p><a href="SendMode.htm">SendInput/Playモード</a>では<em>Speed</em>は無視され、マウスは瞬時に移動します（ただし、<a href="SetMouseDelay.htm">SetMouseDelay</a>にはSendPlayに適用されるモードがあります）。To visually move the mouse more slowly -- such as a script that performs a demonstration for an audience -- use <code><a href="Send.htm#Click">SendEvent "{Click 100 200}"</a></code> or <code><a href="SendMode.htm">SendMode</a> "Event"</code> (optionally in conjuction with <a href="BlockInput.htm">BlockInput</a>).</p>
  </dd>

  <dt>Relative</dt>
  <dd>
    <p>型：<a href="../Concepts.htm#strings">String</a></p>
    <p>If blank or omitted, the X and Y coordinates will be used for absolute positioning. Otherwise, specify the following letter:</p>
    <p><strong>R：</strong>X1、Y1座標は、現在のマウス位置からのオフセットとして扱われます。つまり、カーソルは現在位置から右にX1ピクセル（マイナスの場合は左）、下にY1ピクセル（マイナスの場合は上）だけ移動することになります。同様に、X2、Y2座標は、X1、Y1座標からのオフセットとして扱われます。例えば、次のようにすると、まずカーソルを開始位置から下と右に5ピクセル移動させ、その位置から下と右に10ピクセルずつドラッグします：<code>MouseClickDrag "Left", 5, 5, 10, 10, , "R"</code>.</p>
  </dd>

</dl>

<h2 id="Remarks">備考</h2>
<p><a href="SendMode.htm">SendModeで</a>設定された送信方式を使用します。</p>
<p>Dragging can also be done via the various <a href="Send.htm">Send</a> functions, which is more flexible because the mode can be specified via the function name. 事例：</p>
<pre>SendEvent "{Click 6 52 Down}{click 45 52 Up}"</pre>
<p>上記の方法のもう一つの利点は、MouseClickDragとは異なり、ユーザーがシステムのコントロールパネルでマウスの左右のボタンを入れ替えた場合に自動的に補正されることです。</p>
<p><a href="SendMode.htm">SendPlayモード</a>は、他のモードに比べ、より幅広いゲームにおいてマウスイベントを正常に発生させることができます。ただし、WordPadやMetapadなどのRichEditコントロールでは、SendPlayによるドラッグが効かない場合があります（他のコントロールも可能性があります）。</p>
<p>アプリケーションやゲームによっては、マウスの動きが速いと追従できないことがあります。<em>speed</em>パラメータまたは<a href="SetDefaultMouseSpeed.htm">SetDefaultMouseSpeed</a>を使用すると、速度を下げることができます（デフォルトの<a href="SendMode.htm">SendEventモードのみ</a>）。</p>
<p><a href="BlockInput.htm">BlockInput</a>関数を使用すると、ユーザーによる物理的なマウス操作が、マウス関数によって生成されるシミュレーションマウスイベントを妨害することを防ぐことができます。ただし、<a href="SendMode.htm">SendInput/Play</a>モードでは、ユーザーの物理的なマウス操作を自動的に後回しにするため、一般にこの操作は必要ありません。</p>
<p>マウスのクリックダウンとクリックアップのたびに、自動的に遅延が発生します（<a href="SendMode.htm">SendInputモード</a>は除く）。この遅延は、ドラッグ操作の際のマウスの移動後にも発生します。ディレイの長さを変更する場合は、<a href="SetMouseDelay.htm">SetMouseDelay</a>を使用します。</p>
<h2 id="Related">関連</h2>
<p><a href="CoordMode.htm">CoordMode</a>, <a href="SendMode.htm">SendMode</a>, <a href="SetDefaultMouseSpeed.htm">SetDefaultMouseSpeed</a>, <a href="SetMouseDelay.htm">SetMouseDelay</a>, <a href="Click.htm">Click</a>, <a href="MouseClick.htm">MouseClick</a>, <a href="MouseGetPos.htm">MouseGetPos</a>, <a href="MouseMove.htm">MouseMove</a>, <a href="BlockInput.htm">BlockInput</a></p>
<h2 id="Examples">例</h2>
<div class="ex" id="ExBasic">
<p><a class="ex_number" href="#ExBasic"></a> マウスの左ボタンをクリックしたまま、マウスカーソルを移動先の座標に移動させ、ボタンを離します。</p>
<pre>MouseClickDrag "left", 0, 200, 600, 400</pre>
</div>

<div class="ex" id="ExPaint">
<p><a class="ex_number" href="#ExPaint"></a> MS Paintを開き、小さな家を描きます。</p>
<pre>Run "mspaint.exe"
if !WinWaitActive("ahk_class MSPaintApp",, 2)
    return
MouseClickDrag "L", 150, 450, 150, 350
MouseClickDrag "L", 150, 350, 200, 300
MouseClickDrag "L", 200, 300, 250, 350
MouseClickDrag "L", 250, 350, 150, 350
MouseClickDrag "L", 150, 350, 250, 450
MouseClickDrag "L", 250, 450, 250, 350
MouseClickDrag "L", 250, 350, 150, 450
MouseClickDrag "L", 150, 450, 250, 450</pre>
</div>

</body>
</html>
