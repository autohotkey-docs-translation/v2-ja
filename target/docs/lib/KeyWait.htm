<!DOCTYPE HTML>
<html lang="ja">
<head>
<title>KeyWait - 構文と使用法｜AutoHotkey v2</title>
<meta name="description" content="The KeyWait function waits for a key or mouse/controller button to be released or pressed down." />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>KeyWait</h1>

<p>Waits for a key or mouse/controller button to be released or pressed down.</p>

<pre class="Syntax"><span class="func">KeyWait</span> KeyName <span class="optional">, Options</span></pre>
<h2 id="Parameters">パラメータ</h2>
<dl>

  <dt>KeyName</dt>
  <dd>
      <p>型：<a href="../Concepts.htm#strings">文字列</a></p>
      <p>This can be just about any single character from the keyboard or one of the key names from the <a href="../KeyList.htm">key list</a>, such as a mouse/controller button. Controller attributes other than buttons are not supported.</p>
      <p>また、<code>vkFF</code>のような明示的な仮想鍵コードを指定することもできる。これは、キーに名前がなく、押しても何も表示されないような場合に便利です。その仮想キーコードは、<a href="../KeyList.htm#SpecialKeys">キー一覧ページ</a>の下部にある手順で決定することができます。</p></dd>

  <dt>Options</dt>
  <dd>
      <p>型：<a href="../Concepts.htm#strings">文字列</a></p>
      <p>If blank or omitted, the function will wait indefinitely for the specified key or mouse/controller button to be physically released by the user. ただし、<a href="InstallKeybdHook.htm">キーボードフック</a>が装着されておらず、<em>KeyName</em>が <a href="Send.htm">Send</a>関数などで人為的に解放されたキーボードキーである場合は、物理的に解放されたとみなされます。<a href="InstallMouseHook.htm">マウスフック</a>未装着時のマウスボタンも同様です。</p>
      <p>Otherwise, specify a string of one or more of the following options (in any order, with optional spaces in between):</p>
      <p><strong>D:</strong> Wait for the key to be pushed down.</p>
      <p><strong>L:</strong> Check the logical state of the key, which is the state that the OS and the active window believe the key to be in (not necessarily the same as the physical state). This option is ignored for controller buttons.</p>
      <p><strong>T:</strong> Timeout (e.g. <code>T3</code>). タイムアウトして0を返すまでの待ち時間を示す秒数です。キーまたはボタンが指定された状態になった場合、この関数はタイムアウトを待たずに終了します。代わりに、すぐに1が返されます。</p>
      <p>タイムアウト値には、2.5などの浮動小数点数を指定できますが、0x03などの16進数値を指定してはいけません。</p></dd>

</dl>

<h2 id="Return_Value">戻り値</h2>
<p>型：<a href="../Concepts.htm#boolean">整数（ブーリアン）</a></p>
<p>この関数は、タイムアウトした場合は 0（偽）を、そうでない場合は 1（真）を返します。</p>

<h2 id="Remarks">備考</h2>
<p>キーボードやマウスのボタンの物理的な状態は、キーボードやマウスのフックが設置されていない限り、通常は論理的な状態と同じであり、その場合、ユーザーが物理的にキーを押しているかどうかが正確に反映されます。スクリプトがフックを使用しているかどうかは、<a href="KeyHistory.htm">KeyHistory</a>関数またはメニュー項目で確認できます。スクリプトに<a href="InstallKeybdHook.htm">InstallKeybdHook</a>関数と<a href="InstallMouseHook.htm">InstallMouseHook</a>関数を追加することで、どちらかまたは両方のフックを強制的にインストールさせることができます。</p>
<p>関数が待機状態にある間、<a href="../Hotkeys.htm">ホットキー</a>、<a href="Menu.htm">カスタムメニュー項目</a>、または<a href="SetTimer.htm">タイマー</a>によって新しい<a href="../misc/Threads.htm">スレッド</a>を起動することができます。</p>
<p>2つ以上のキーが離されるのを待つには、KeyWaitを連続して使用します。事例：</p>
<pre>KeyWait "Control"  <em>; ControlとAltの両方が解除</em>されるのを待つ。
KeyWait "Alt"</pre>
<p>To wait for any one key among a set of keys to be pressed down, see <a href="InputHook.htm#ExAnyKey">InputHook example #4</a>.</p>
<h2 id="Related">関連</h2>
<p><a href="GetKeyState.htm">GetKeyState</a>, <a href="../KeyList.htm">Key List</a>, <a href="InputHook.htm">InputHook</a>, <a href="KeyHistory.htm">KeyHistory</a>, <a href="InstallKeybdHook.htm">InstallKeybdHook</a>, <a href="InstallMouseHook.htm">InstallMouseHook</a>, <a href="ClipWait.htm">ClipWait</a>, <a href="WinWait.htm">WinWait</a></p>
<h2 id="Examples">例</h2>
<div class="ex" id="ExBasic">
<p><a class="ex_number" href="#ExBasic"></a> Aキーが解放されるのを待ちます。</p>
<pre>KeyWait "a"</pre>
</div>

<div class="ex" id="ExDown">
<p><a class="ex_number" href="#ExDown"></a> マウスの左ボタンが押し下げられるのを待ちます。</p>
<pre>KeyWait "LButton", "D"</pre>
</div>

<div class="ex" id="ExTimeout">
<p><a class="ex_number" href="#ExTimeout"></a> Waits up to 3 seconds for the first controller button to be pressed down.</p>
<pre>KeyWait "Joy1", "D T3"</pre>
</div>

<div class="ex" id="ExLogical">
<p><a class="ex_number" href="#ExLogical"></a> 左Altキーが論理的に解除されるのを待ちます。</p>
<pre>KeyWait "LAlt", "L"</pre>
</div>

<div class="ex" id="ExHotkey">
<p><a class="ex_number" href="#ExHotkey"></a> このホットキーを押すと、KeyWaitはユーザーが物理的にCapsLockキーを離すのを待ちます。そのため、以降の記述は、プレスではなくリリースで行っています。この動作は、<code>~CapsLock up::</code>と似ています。</p>
<pre>~CapsLock::
{
    KeyWait "CapsLock"  <em>; ユーザーが物理的に解除するのを待ちます。</em>
    MsgBox "You pressed and released the CapsLock key."
}</pre>
</div>

<div class="ex" id="ExRemap">
<p><a class="ex_number" href="#ExRemap"></a> Remaps a key or mouse button. (<a href="../misc/Remap.htm">内蔵のリマッピング</a>機能を使った方が簡単なので、この例は説明のためだけです)。次のホットキーでは、NumpadAddが押されている間、マウスボタンが押されたままになっており、NumpadAddが効果的にマウスボタンに変換されています。</p>
<pre>*NumpadAdd::
{
    MouseClick "left",,, 1, 0, "D"  <em>; Hold down the left mouse button.</em>
    KeyWait "NumpadAdd"  <em>; Wait for the key to be released.</em>
    MouseClick "left",,, 1, 0, "U"  <em>; Release the mouse button.</em>
}</pre>
</div>

<div class="ex" id="ExDouble">
<p><a class="ex_number" href="#ExDouble"></a> キーがダブルプレスされたことを検出します（ダブルクリックに似ています）。KeyWaitは、RControlキーを押しながら他のキーを変更する際に、キーボードのオートリピート機能が不要な二度押しを発生させないようにするために使用します。これは、ホットキーのスレッドを実行し続けることで、#MaxThreadsPerHotkeyがデフォルト設定の1であることを頼りに、自動繰り返しをブロックすることで実現します。For a more elaborate script that distinguishes between single, double and triple-presses, see <a href="SetTimer.htm#ExampleCount">SetTimer example #3</a>.</p>
<pre>~RControl::
{
    if (A_PriorHotkey != "~RControl" or A_TimeSincePriorHotkey &gt; 400)
    {
        <em>; プレスの間隔が空きすぎて、ダブルプレスになっていません。</em>
        KeyWait "RControl"
        return
    }
    MsgBox "You double-pressed the right control key."
}</pre>
</div>

</body>
</html>
