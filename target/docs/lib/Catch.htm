<!DOCTYPE HTML>
<html lang="ja">
<head>
<title>Catch - 構文と使用法｜AutoHotkey v2</title>
<meta name="description" content="The Catch statement specifies one or more statements to execute if a value or error is thrown during execution of a Try statement." />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>キャッチ</h1>

<p>Specifies one or more <a href="../Concepts.htm#statement">statements</a> to execute if a value or error is thrown during execution of a <a href="Try.htm">Try</a> statement.</p>

<pre class="Syntax" style="line-height: 120%"><span class="func">Catch</span> <span class="optional">ErrorClass</span> <span class="optional"><span class="func">as</span> OutputVar</span>
{
    <i>Statements</i>
}</pre>
<h2 id="Parameters">パラメータ</h2>
<dl>

  <dt>ErrorClass</dt>
  <dd>
    <p>Type: <a href="Class.htm">Class</a></p>
    <p><code>Error</code>、<code>TimeoutError</code>、<code>MyCustomError</code>など、捕捉すべき値のクラスです。これは、カンマで区切られたクラスのリストであることも可能です。各クラスの<a href="Class.htm#Prototype">プロトタイプ</a>はロード時に解決されるため、クラスは任意の表現ではなく、正確なフルネームで指定する必要があります。<a href="Error.htm">Error</a>から派生していなくても、<a href="../ObjList.htm">組み込み</a>クラスや<a href="../Objects.htm#Custom_Classes">ユーザー定義</a>クラスであれば使用可能です。</p>
    <p>クラスが指定されていない場合、デフォルトは<code>Error</code>です。</p>
    <p>To catch anything at all, use <code>catch Any</code>.</p>
    <p>無効なクラス名を使用した場合や、同名のローカル変数が存在するためにクラスにアクセスできない場合、ロードタイムエラーが表示されます。</p>
  </dd>

  <dt>OutputVar</dt>
  <dd>
    <p>Type: <a href="../Concepts.htm#variables">Variable</a></p>
    <p>投げられた値を格納する出力変数で、通常は<a href="Error.htm">Errorオブジェクト</a>です。これは<a href="../Language.htm#dynamic-variables">動的な変数</a>ではありえない。</p>
    <p>省略された場合、投げられた値に直接アクセスすることはできませんが、パラメータなしで<a href="Throw.htm">Throw</a>を使用することにより、再投げることができます。</p>
  </dd>

  <dt><i>文</i></dt>
  <dd>
    <p>値またはエラーがスローされた場合に実行する<a href="../Concepts.htm#statement">文</a>です。</p>
    <p>一般に、単一のステートメントのみを使用する場合は、中括弧は不要です。詳しくは、<a href="Block.htm">{...} (block)</a>を参照してください。</p>
  </dd>

</dl>

<h2 id="Remarks">備考</h2>
<p>Multiple <em>Catch</em> statements can be used one after the other, with each one specifying a different class (or multiple classes). If the value is not an instance of any of the listed classes, it is not caught by this <em>Try-Catch</em>, but might be caught by one further up the call stack.</p>
<p>Every use of <em>Catch</em> must belong to (be associated with) a <a href="Try.htm">Try</a> statement above it. A <em>Catch</em> always belongs to the nearest unclaimed <em>Try</em> statement above it unless a <a href="Block.htm">block</a> is used to change that behavior.</p>
<p>The parameter list may optionally be enclosed in parentheses, in which case the space or tab after <code>catch</code> is optional.</p>
<p><em>Catch</em> may optionally be followed by <a href="Else.htm">Else</a>, which is executed if no exception was thrown within the associated <em>Try</em> block.</p>
<p><a href="Block.htm#otb">OTB（One True Brace）スタイル</a>はオプションで使用することができます。事例：</p>
<pre>try {
    ...
} catch Error {
    ...
}</pre>
<p>ロードタイムエラーは<em>try</em>文が実行される前に発生するため、捕捉することができません。</p>

<h2 id="Related">関連</h2>
<p><a href="Try.htm">Try</a>, <a href="Throw.htm">Throw</a>, <a href="Error.htm">Error Object</a>, <a href="Else.htm">Else</a>, <a href="Finally.htm">Finally</a>, <a href="Block.htm">Blocks</a>, <a href="OnError.htm">OnError</a></p>

<h2 id="Examples">例</h2>
<p><a href="Try.htm#Examples">Try</a>をご覧ください。</p>

</body>
</html>
