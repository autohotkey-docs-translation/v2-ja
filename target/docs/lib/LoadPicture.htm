<!DOCTYPE HTML>
<html lang="ja">
<head>
<title>LoadPicture - 構文と使用法｜AutoHotkey v2</title>
<meta name="description" content="LoadPicture 関数は、ファイルから画像をロードし、ビットマップまたはアイコンハンドルを返します。" />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>LoadPicture</h1>

<p>ファイルから画像を読み込み、ビットマップまたはアイコンハンドルを返します。</p>
<pre class="Syntax">Handle := <span class="func">LoadPicture</span>(Filename <span class="optional">, Options, &amp;OutImageType</span>)</pre>

<h2 id="Parameters">パラメータ</h2>
<dl>

  <dt>Filename</dt>
  <dd>
    <p>Type: <a href="../Concepts.htm#strings">String</a></p>
    <p>画像のファイル名。絶対パスが指定されていない場合、通常は<a href="../Variables.htm#WorkingDir">A_WorkingDir</a>にあると仮定されます。DLLまたはEXEファイルの名前がパスなしで与えられた場合、現在の実行ファイル（AutoHotkey.exeまたはコンパイルされたスクリプト）のディレクトリまたはシステムディレクトリからロードされる場合があります。</p>
  </dd>
  
  <dt>Options</dt>
  <dd>
    <p>Type: <a href="../Concepts.htm#strings">String</a></p>
    <p>If blank or omitted, it defaults to no options. そうでないときは、次のオプションの1つ以上を、それぞれスペースまたはタブで区切って文字列として指定します：</p>
    <p><strong>W</strong><em>n</em> and <strong>H</strong><em>n</em>: The width and height to load the image at, where <em>n</em> is an integer. 一方の寸法が省略または-1された場合、もう一方の寸法をもとに縦横比を保ったまま自動計算されます。両方が省略された場合、画像のオリジナルサイズが使用されます。どちらかの寸法が0であれば、その寸法に対してオリジナルサイズが使用されます。For example: <code>"w80 h50"</code>, <code>"w48 h-1"</code> or <code>"w48"</code> (preserve aspect ratio), <code>"h0 w100"</code> (use original height but override width).</p>
    <p><strong>Icon</strong><em>n</em>: Indicates which icon to load from a file with multiple icons (generally an EXE or DLL file). 例えば、<code>"Icon2 "</code>は、ファイルの2番目のアイコンをロードします。<code>"Icon1"</code>を指定することで、対応している画像フォーマットであれば、どのようなものでもアイコンに変換することが可能です。However, the icon is converted back to a bitmap if the <em>OutImageType</em> parameter is omitted.</p>
    <p><strong>GDI+:</strong> Use GDI+ to load the image, if available. 例えば、<code>"GDI+ w100"</code>.</p>
  </dd>
  
  <dt>&amp;OutImageType</dt>
  <dd>
    <p>Type: <a href="../Concepts.htm#variable-references">VarRef</a></p>
    <p>If omitted, the corresponding value will not be stored, and the return value will always be a bitmap handle (icons/cursors are converted if necessary) because reliably using or deleting an icon/cursor/bitmap handle requires knowing which type it is. Otherwise, specify a reference to the output variable in which to store a number indicating the type of handle being returned: 0 (IMAGE_BITMAP), 1 (IMAGE_ICON) or 2 (IMAGE_CURSOR).</p>
  </dd>

</dl>

<h2 id="Return_Value">戻り値</h2>
<p>Type: <a href="../Concepts.htm#numbers">Integer</a></p>
<p>This function returns a <a href="../misc/ImageHandles.htm">bitmap or icon handle</a> depending on whether a picture or icon is specified and whether the <em>&amp;OutImageType</em> parameter is present or not.</p>

<h2 id="Remarks">備考</h2>
<p>LoadPicture also supports <a href="../misc/ImageHandles.htm">the handle syntax</a>, such as for creating a resized image based on an icon or bitmap which has already been loaded into memory, or converting an icon to a bitmap by omitting <em>&amp;OutImageType</em>.</p>
<p>画像をメモリから解放する必要がある場合は、ハンドルの種類に応じて適切な関数を呼び出します。</p>
<pre>if (not OutImageType)  <em>; IMAGE_BITMAP (0) or the OutImageType parameter was omitted.</em>
    DllCall("DeleteObject", "ptr", Handle)
else if (OutImageType = 1)  <em>; IMAGE_ICON</em>
    DllCall("DestroyIcon", "ptr", Handle)
else if (OutImageType = 2)  <em>; IMAGE_CURSOR</em>
    DllCall("DestroyCursor", "ptr", Handle)</pre>

<h2 id="Related">関連</h2>
<p><a href="../misc/ImageHandles.htm">イメージハンドル</a></p>

<h2 id="Examples">例</h2>
<div class="ex" id="ExSlideShow">
<p><a class="ex_number" href="#ExSlideShow"></a> 一部の画像をプリロードして再利用します。</p>
<pre>Pics := []
<em>; Find some pictures to display.</em>
Loop Files, A_WinDir "\Web\Wallpaper\*.jpg", "R"
{
    <em>; 各画像を読み込み、配列に追加する。</em>
    Pics.Push(LoadPicture(A_LoopFileFullPath))
}
if !Pics.Length
{
    <em>; このような場合は、上記のLoop行のパスを編集してください。</em>
    MsgBox("No pictures found!Try a different directory.")
    ExitApp
}
<em>; Add the picture control, preserving the aspect ratio of the first picture.</em>
MyGui := Gui()
Pic := MyGui.Add("Pic", "w600 h-1 +Border", "HBITMAP:*" Pics[1])
MyGui.OnEvent("Escape", (*) =&gt; ExitApp())
MyGui.OnEvent("Close", (*) =&gt; ExitApp())
MyGui.Show
Loop 
{
    <em>; 写真を切り替えます！</em>
    Pic.Value := "HBITMAP:*" Pics[Mod(A_Index, Pics.Length)+1]
    Sleep 3000
}</pre>
</div>

</body>
</html>
