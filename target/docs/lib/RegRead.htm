<!DOCTYPE HTML>
<html lang="ja">
<head>
<title>RegRead - 構文と使用法｜AutoHotkey v2</title>
<meta name="description" content="RegRead 関数は、レジストリから値を読み取ります。" />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>RegRead</h1>

<p>レジストリから値を読み込みます。</p>

<pre class="Syntax">Value := <span class="func">RegRead</span>(<span class="optional">KeyName, ValueName, Default</span>)
</pre>
<h2 id="Parameters">パラメータ</h2>
<dl>

  <dt>KeyName</dt>
  <dd>
    <p>型：<a href="../Concepts.htm#strings">文字列</a></p>
    <p>レジストリキーのフルネームです。</p>
    <p>HKEY_LOCAL_MACHINE、HKEY_USERS、HKEY_CURRENT_USER、HKEY_CLASSES_ROOT、HKEY_CURRENT_CONFIG（またはHKLMなど、それぞれの略称）で始まる必要があります。<a href="LoopReg.htm#remote">リモートレジストリ</a>にアクセスするには、この例のように、コンピュータ名の前にスラッシュを付けます：\\workstation01\HKEY_LOCAL_MACHINE</p>
    <p><em>KeyName</em>は <a href="LoopReg.htm">レジストリループ</a>が実行されている場合のみ省略可能で、その場合、現在のループアイテムのキーがデフォルトとなる。項目がサブキーの場合、デフォルトでそのサブキーのフルネームが使用されます。項目が値の場合、<em>ValueName</em>のデフォルトはその値の名前であるが、オーバーライドすることができる。</p>
  </dd>

  <dt>ValueName</dt>
  <dd>
    <p>型：<a href="../Concepts.htm#strings">文字列</a></p>
    <p>取得する値の名前。空白または省略された場合、キーのデフォルト値が取得される（ただし、上記の場合を除く）。RegEditでは、デフォルト値が「(Default)」と表示されます。デフォルト値がない場合（つまり、RegEditが「value not set」と表示した場合）、<a href="Error.htm#OSError">OSError</a>が投げられる。</p>
  </dd>
  
  <dt>デフォルト</dt>
  <dd>
    <p>型：Any</p>
    <p>指定されたキーまたは値が存在しない場合に返す値。省略された場合、デフォルト値を返す代わりに<a href="Error.htm#OSError">OSError</a>が投げられる。</p>
  </dd>

</dl>

<h2 id="Return_Value">戻り値</h2>
<p>型：<a href="../Concepts.htm#strings">文字列</a>または<a href="../Concepts.htm#numbers">整数</a></p>
<p>説明： 指定されたレジストリキーの値を返します。</p>

<h2 id="Error_Handling">エラー処理</h2>
<p><em>Default</em>が省略された場合の存在しないキーや値、パーミッションエラーなど、問題があった場合に<a href="Error.htm#OSError">OSError</a>がスローされる。</p>
<p><a href="../Variables.htm#LastError">A_LastError</a>には、オペレーティングシステムのGetLastError()関数の結果が設定されます。</p>

<h2 id="Remarks">備考</h2>
<p>現在、以下の値の種類にのみ対応しています：REG_SZ, REG_EXPAND_SZ, REG_MULTI_SZ, REG_DWORD, and REG_BINARY.</p>
<p>REG_DWORDの値は、常に正の10進数で表されます。負の数を想定していた場合は、<code>OutputVar := OutputVar &lt;&lt; 32 &gt;&gt; 32</code>などで符号付き32ビット整数に変換する。</p>
<p>REG_BINARYキーを読み込むと、16進数の文字列が表示されます。例えば、REG_BINARYの値01,a9,ff,77は、文字列01A9FF77として読み込まれることになります。</p>
<p>REG_MULTI_SZキーを読み込む場合、各構成要素は改行文字(`n)で終わります。構成要素がない場合は、空文字列が返されます。戻り値から個々の構成要素を抽出する例については、<a href="FileSelect.htm">FileSelect</a>を参照してください。</p>
<p>複数のレジストリキーや値を取得し、操作するためには、<a href="LoopReg.htm">レジストリループ</a>の使用を検討します。</p>
<p>リモートコンピュータのレジストリにアクセスする方法については、<a href="LoopReg.htm#remote">registry-loop</a>の備考を参照してください。</p>
<p>32ビットスクリプトでレジストリの64ビットセクションのエントリを読み書きしたり、その逆を行うには、<a href="SetRegView.htm">SetRegView</a>を使用します。</p>

<h2 id="Related">関連</h2>
<p><a href="RegCreateKey.htm">RegCreateKey</a>, <a href="RegDelete.htm">RegDelete</a>, <a href="RegDeleteKey.htm">RegDeleteKey</a>, <a href="RegWrite.htm">RegWrite</a>, <a href="LoopReg.htm">Registry-loop</a>, <a href="SetRegView.htm">SetRegView</a>, <a href="IniRead.htm">IniRead</a></p>

<h2 id="Examples">例</h2>
<div class="ex" id="ExBasic">
<p><a class="ex_number" href="#ExBasic"></a> レジストリから値を読み取り、<var>TestValue</var>に格納します。</p>
<pre>TestValue := RegRead("HKEY_LOCAL_MACHINE\Software\SomeApplication", "TestValue")</pre>
</div>

<div class="ex" id="ExProgramFiles">
<p><a class="ex_number" href="#ExProgramFiles"></a> Program Files」ディレクトリのパスを取得し、報告します。別の方法については、<a href="EnvGet.htm#ExProgramFiles">EnvGetの例2</a>を参照してください。</p>
<pre><em>; The line below ensures that the path of the 64-bit Program Files
; directory is returned if the OS is 64-bit and the script is not.</em>
<a href="SetRegView.htm">SetRegView</a> 64

ProgramFilesDir := RegRead("HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion", "ProgramFilesDir")
MsgBox "Program files are in:" ProgramFilesDir</pre>
</div>


<div class="ex" id="ExType">
<p><a class="ex_number" href="#ExType"></a> レジストリ値のTYPEを取得します（例：REG_SZ、REG_DWORD）。</p>
<pre>MsgBox RegKeyType("HKCU", "Environment", "TEMP")
return

RegKeyType(RootKey, SubKey, ValueName)  <em>; This function returns the type of the specified value.</em>
{
    Loop Reg, RootKey "\" SubKey
        if (A_LoopRegName = ValueName)
            return A_LoopRegType
    return "Error"
}</pre>
</div>

</body>
</html>
