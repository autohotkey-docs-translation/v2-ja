<!DOCTYPE HTML>
<html lang="ja">
<head>
<title>BlockInput - 構文と使用法｜AutoHotkey v2</title>
<meta name="description" content="BlockInput関数は、ユーザーがキーボードやマウスを使ってコンピュータと対話する機能を無効化または有効化するものです。" />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>BlockInput</h1>

<p>キーボードとマウスを使ってコンピューターと対話するユーザーの能力を無効または有効にします。</p>

<pre class="Syntax"><span class="func">BlockInput</span> OnOff
<span class="func">BlockInput</span> SendMouse
<span class="func">BlockInput</span> MouseMove</pre>
<h2 id="Parameters">パラメータ</h2>
<dl>

  <dt>OnOff</dt>
  <dd>
    <p>型：<a href="../Concepts.htm#strings">文字列</a>または<a href="../Concepts.htm#numbers">整数</a></p>
    <p>すべてのユーザー入力を無条件でブロックするモードです。以下のいずれかの値を指定します。</p>
    <p><strong>On</strong>または1（<a href="../Variables.htm#True">true</a>）：ユーザーがコンピューターと対話することができない（マウスやキーボードの入力が効果を発揮しない）状態です。</p>
    <p><strong>Off</strong> または 0 （<a href="../Variables.htm#False">false</a>）：入力が再有効化されます。</p>
  </dd>
  <dt>SendMouse</dt>
  <dd>
    <p>型：<a href="../Concepts.htm#strings">文字列</a></p>
    <p>このモードは、特定の送信および/またはマウス機能の実行中にのみ、ユーザー入力をブロックします。次のいずれかの単語を指定します。</p>
    <p><strong>Send:</strong> The user's keyboard and mouse input is ignored while a <a href="Send.htm">SendEvent</a> is in progress (including <a href="Send.htm">Send</a> and <a href="Send.htm">SendText</a> if <code>SendMode "Event"</code> has been used). これにより、ユーザーのキー入力が模擬キー入力の流れを乱すことを防いでいます。送信終了後、入力は再び有効になります（以前に<code>BlockInput "On"</code>を使用してブロックされていた場合を除く）。</p>
    <p><strong>Mouse:</strong> The user's keyboard and mouse input is ignored while a <a href="Click.htm">Click</a>, <a href="MouseMove.htm">MouseMove</a>, <a href="MouseClick.htm">MouseClick</a>, or <a href="MouseClickDrag.htm">MouseClickDrag</a> is in progress (the traditional <a href="SendMode.htm">SendEvent mode</a> only). これにより、ユーザーのマウスの動きやクリックが、シミュレートされたマウスイベントを乱すことを防ぐことができます。マウス操作が終了すると、入力は再び有効になります（以前に<code>BlockInput "On"</code>を使用してブロックされている場合を除く）。</p>
    <p><strong>SendAndMouse:</strong> A combination of the above two modes.</p>
    <p><strong>Default:</strong> Turns off both the <em>Send</em> and the <em>Mouse</em> modes, but does not change the current state of input blocking. 例えば、現在<code>BlockInput "On"</code>が有効な場合、<code>BlockInput "Default"</code>を使用しても、これをオフにすることはできません。</p>
  </dd>
  <dt id="MouseMove">MouseMove</dt>
  <dd>
    <p>型：<a href="../Concepts.htm#strings">文字列</a></p>
    <p>このモードは、マウスカーソルの移動のみをブロックします。次のいずれかの単語を指定します。</p>
    <p><strong>MouseMove:</strong> The mouse cursor will not move in response to the user's physical movement of the mouse (DirectInput applications are a possible exception). スクリプトがこの機能を初めて使用するとき、<a href="InstallMouseHook.htm">マウスフック</a>がインストールされます（まだインストールされていない場合）。マウスフックは、次に<a href="Suspend.htm">サスペンド</a>または<a href="Hotkey.htm">ホットキー</a>機能を使用するまで設置されたままとなり、ホットキーやホットストリングで必要とされない場合は、その時点で削除されます（<a href="_Hotstring.htm">#Hotstring NoMouse</a>を参照）。</p>
    <p><strong>MouseMoveOff:</strong> Allows the user to move the mouse cursor.</p>
  </dd>

</dl>

<h2 id="Remarks">備考</h2>
<p>BlockInputの3つのモード（<em>OnOff</em>、<em>SendMouse</em>、<em>MouseMove</em>）は、それぞれ独立して動作します。例えば、<code>BlockInput "On"</code>は、<em>SendMouse</em>からのワードの1つが有効であっても、<code>BlockInput "Off"</code>が使われるまで、入力をブロックし続けます。他の例として、<code>BlockInput "On"</code>と<code>BlockInput "MouseMove"</code>の両方が有効な場合、両方がオフになるまでマウスの移動がブロックされることがあります。</p>
<p class="note"><strong>注：</strong>UACが有効になっていたり、スクリプトが管理者として実行されていない場合、<em>OnOff</em>と <em>SendMouse</em>モードは効果がない場合があります。詳しくは、<a href="../FAQ.htm#uac">FAQ</a>をご参照ください。</p>
<p>BlockInputよりも、<code><a href="SendMode.htm">SendMode</a> "Input"</code>や<code><a href="SendMode.htm">SendMode</a> "Play"</code>を使用した方が、キー入力やマウスクリックが途切れることなく行える場合があります。これは、BlockInputとは異なり、これらのモードでは送信中にユーザーが入力したものを破棄せず、代わりにそれらのキーストロークをバッファリングして後に送信するためです。BlockInputを避けることで、次の段落で説明するスティッキングキーを回避することもできます。</p>
<p>ユーザーがキーを押しているときにBlockInputがアクティブになると、そのキーが "stuck down"になってしまうことがあります。この例では、BlockInputをオンにする前にキーが解放されるのを待つことで、これを回避することができます。</p>
<pre>^!p::
{
    KeyWait "Control"  <em>; キーが解除されるのを待ちます。  ホットキーのモディファイアごとに1つのKeyWaitを使用します。</em>
    KeyWait "Alt"
    BlockInput True
    <em>; ... キー操作やマウスクリックを送信する...</em>
    BlockInput False
}</pre>
<p>BlockInputが有効な場合、ユーザー入力はブロックされますが、AutoHotkeyはキーストロークやマウスクリックをシミュレートできます。ただし、<kbd>Ctrl</kbd>+<kbd>Alt</kbd>+<kbd>Del</kbd>を押すと、Windows APIの機能により、入力が再有効化されます。</p>
<p>BlockInputがオンの場合でも、ある種の<a href="_UseHook.htm">フックホットキー</a>はトリガーすることができます。例えば、<code>MButton</code>（マウスフック）、<code>LWin &amp; Space</code>（キーボードフック、修飾語"$#"ではなく明示的な接頭語を持つ）などがあります。</p>
<p>スクリプトが終了すると、入力は自動的に再有効化されます。</p>
<h2 id="Related">関連</h2>
<p><a href="SendMode.htm">SendMode</a>, <a href="Send.htm">Send</a>, <a href="Click.htm">Click</a>, <a href="MouseMove.htm">MouseMove</a>, <a href="MouseClick.htm">MouseClick</a>, <a href="MouseClickDrag.htm">MouseClickDrag</a></p>
<h2 id="Examples">例</h2>
<div class="ex" id="ExBasic">
<p><a class="ex_number" href="#ExBasic"></a> BlockInputをONにした状態でF5を送るとメモ帳が開き、時刻や日付を貼り付けることができます。なお、BlockInputは、スクリプトが管理者として実行されている場合にのみ動作する可能性があります。</p>
<pre>BlockInput true
Run "notepad"
WinWaitActive "ahk_class Notepad"
Send "{F5}" <em>; 時刻と日付を貼り付けます。</em>
BlockInput false</pre>
</div>
</body>
</html>
