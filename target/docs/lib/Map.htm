<!DOCTYPE HTML>
<html lang="ja">
<head>
<title>Map Object - メソッドとプロパティ｜AutoHotkey v2</title>
<meta name="description" content="Mapオブジェクトは、キーと呼ばれる1つの値の集合を、別の値の集合に関連付ける、またはマッピングします。" />
<meta name="ahk:equiv-v1" content="lib/Object.htm" />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>Map Object</h1>
<pre class="NoIndent">クラスは、拡張オブジェクトに割り当てられます。</pre>

<p><strong>Map</strong>オブジェクトは、<em>キー</em>と呼ばれる1つの値の集合を、別の値の集合に関連付ける、または<em>マッピング</em>します。キーとそのキーに対応する値をキー・バリュー・ペアと呼びます。マップには、任意の数のキーと値のペアを含めることができますが、各キーは一意でなければなりません。</p>
<p>キーは、<a href="../Concepts.htm#numbers">整数</a>、<a href="../Objects.htm">オブジェクト</a>参照、ヌル文字で終端された<a href="../Concepts.htm#strings">文字列</a>のいずれかを指定することができます。文字列キーの比較は大文字と小文字を区別し、オブジェクトの比較は参照/アドレスで行います。<a href="../Concepts.htm#numbers">Float</a>キーは自動的に String に変換されます。</p>
<p>マップの最も単純な使用方法は、暗黙の<a href="#__Item">__Item</a>プロパティによってキーと値のペアを取得または設定することであり、マップオブジェクトの後に続く括弧の間にキーを記述するだけです。事例：</p>
<pre>clrs := Map()
clrs["Red"] := "ff0000"
clrs["Green"] := "00ff00"
clrs["Blue"] := "0000ff"
for clr in Array("Blue", "Green")
    MsgBox clrs[clr]
</pre>
<p>"Map"はクラスそのものなので、以下ではあらゆるMapオブジェクトのプレースホルダとして "MapObj"を使用します。</p>
<p>Mapオブジェクトは、<a href="Object.htm">Object</a>から継承されたメソッドやプロパティに加え、以下のような定義済みのメソッドやプロパティを持ちます。</p>

<h2 id="toc">目次</h2>
<ul class="indent">
  <li><a href="#StaticMethods">静的メソッドです</a>:
    <ul>
      <li><a href="#Call">Call</a>:Mapを作成し、項目を設定する。</li>
    </ul>
  </li>
  <li><a href="#Methods">メソッド</a>:
    <ul>
      <li><a href="#Clear">Clear</a>:マップからすべてのキーとバリューのペアを削除します。</li>
      <li><a href="#Clone">Clone</a>:マップの浅いコピーを返します。</li>
      <li><a href="#Delete">Delete</a>:マップからキーとバリューのペアを削除します。</li>
      <li><a href="#Get">Get</a>:キーに関連する値、またはデフォルト値を返します。</li>
      <li><a href="#Has">Has</a>:指定されたキーがマップ内に関連する値を持つ場合、true を返す。</li>
      <li><a href="#Set">Set</a>:0個以上の項目を設定する。</li>
      <li><a href="#__Enum">__Enum</a>:キーとバリューのペアを列挙します。</li>
      <li><a href="#__New">__New</a>:項目を設定します。セットに相当します。</li>
    </ul>
  </li>
  <li><a href="#Properties">プロパティ</a>:
    <ul>
      <li><a href="#Count">Count</a>:マップに存在するキーとバリューのペアの数を取得します。</li>
      <li><a href="#Capacity">Capacity</a>:マップの現在の容量を取得または設定します。</li>
      <li><a href="#CaseSense">CaseSense</a>:マップの大文字と小文字の区別の設定を取得または設定します。</li>
      <li><a href="#Default">Default</a>:キーが見つからない場合に返されるデフォルト値を定義します。</li>
      <li><a href="#__Item">__Item</a>:キーと値のペアの値を取得または設定します。</li>
    </ul>
  </li>
</ul>

<h2 id="StaticMethods">静的メソッド</h2>

<div class="methodShort" id="Call"><h3>Call</h3>
<p>Mapを作成し、項目を設定する。</p>
<pre class="Syntax">MapObj := Map(Key1, Value1, Key2, Value2, ...)
MapObj := Map.<span class="func">Call</span>(Key1, Value1, Key2, Value2, ...)</pre>
<p>これは、<code>MapObj[Key] := Value</code>で各項目を設定することと同じですが、<a href="#__Item">__Item</a>が呼ばれないことと、1回の呼び出しで複数回展開しないように<a href="#Capacity">容量</a>が自動的に調整されることが異なります。</p>
<p>パラメータは<a href="#__New">__New</a>で定義します。</p>
</div>

<h2 id="Methods">メソッド</h2>

<div class="methodShort" id="Clear"><h3>Clear</h3>
<p>マップからすべてのキーとバリューのペアを削除します。</p>
<pre class="Syntax">MapObj.<span class="func">Clear</span>()</pre>
</div>

<div class="methodShort" id="Clone"><h3>Clone</h3>
<p>マップの浅いコピーを返します。</p>
<pre class="Syntax">Clone := MapObj.<span class="func">Clone</span>()</pre>
<p>すべてのキーとバリューのペアが新しいマップにコピーされます。オブジェクトの<em>参照</em>はコピーされますが（通常の代入と同様）、オブジェクトそのものはコピーされません。</p>
<p><a href="Object.htm#Clone">Obj.Clone</a>に準じて、自プロパティ、自メソッド、ベースはコピーされます。</p>
</div>

<div class="methodShort" id="Delete"><h3>Delete</h3>
<p>マップからキーとバリューのペアを削除します。</p>
<pre class="Syntax">RemovedValue := MapObj.<span class="func">Delete</span>(Key)</pre>
<h4 id="Delete_Parameters">パラメータ</h4>
<dl>
  <dt>Key</dt>
  <dd>
    <p>型：<a href="../Concepts.htm#numbers">Integer</a>, <a href="../Concepts.htm#objects">Object</a> or <a href="../Concepts.htm#strings">String</a></p>
    <p>任意の1つのキーです。マップにこのキーが含まれていない場合、<a href="Error.htm#UnsetError">UnsetItemError</a>が投げられる。</p>
  </dd>
</dl>
<h4 id="Delete_Return_Value">戻り値</h4>
<p>型：<a href="../Concepts.htm#values">任意</a></p>
<p>This method returns the removed value.</p>
</div>

<div class="methodShort" id="Get"><h3>Get</h3>
<p>キーに関連する値、またはデフォルト値を返します。</p>
<pre class="Syntax">Value := MapObj.<span class="func">Get</span>(Key <span class="optional">, Default</span>)</pre>
<p>この方法では、次のようなことができます。</p>
<ul>
  <li><em>Key</em>に関連する値が見つかれば、その値を返す。</li>
  <li><em>Default</em>パラメータが指定されている場合は、その値を返します。</li>
  <li><code>MapObj.Default</code>が定義されている場合、その値を返します。</li>
  <li><a href="Error.htm#UnsetError">UnsetItemError</a>を投げる。</li>
</ul>
<p><em>Default</em>が省略された場合、<a href="#__Item">__Item</a>が呼び出されないことを除けば<code>MapObj[Key]</code>と同等である。</p>
</div>

<div class="methodShort" id="Has"><h3>Has</h3>
<p>指定されたキーがマップ内に関連する値を持つ場合はtrueを、そうでない場合はfalseを返します。</p>
<pre class="Syntax">MapObj.<span class="func">Has</span>(Key)</pre>
</div>

<div class="methodShort" id="Set"><h3>Set</h3>
<p>0個以上の項目を設定する。</p>
<pre class="Syntax">MapObj.<span class="func">Set</span>(<span class="optional">Key, Value, Key2, Value2, ...</span>)</pre>
<p>これは、<code>MapObj[Key] := Value</code>で各項目を設定することと同じですが、<a href="#__Item">__Item</a>が呼ばれないことと、1回の呼び出しで複数回展開しないように<a href="#Capacity">容量</a>が自動的に調整されることが異なります。</p>
<h4 id="Set_Return_Value">戻り値</h4>
<p>型：<a href="../Concepts.htm#objects">Object</a></p>
<p>This method returns the Map.</p>
</div>

<div class="methodShort" id="__Enum"><h3>__Enum</h3>
<p>キーとバリューのペアを列挙します。</p>
<pre class="Syntax">For Key <span class="optional">, Value</span> in MapObj</pre>
<p>新しい<a href="Enumerator.htm">列挙者</a>を返します。このメソッドは通常、直接呼び出されることはありません。その代わり、マップオブジェクトは直接<a href="For.htm">forループ</a>に渡され、forループは__Enumを一度呼び出し、ループの各繰り返しで列挙器を一度呼び出します。列挙者を呼び出すたびに、次のキーや値が返されます。forループの変数は、列挙者のパラメータに対応しており、次のようになっています。</p>
<dl>
  <dt>Key</dt>
  <dd>
    <p>型：<a href="../Concepts.htm#numbers">Integer</a>, <a href="../Concepts.htm#objects">Object</a> or <a href="../Concepts.htm#strings">String</a></p>
    <p>The key.</p>
  </dd>
  <dt>値</dt>
  <dd>
    <p>型：<a href="../Concepts.htm#values">任意</a></p>
    <p>The value.</p>
  </dd>
</dl>
</div>

<div class="methodShort" id="__New"><h3>__New</h3>
<p>項目を設定します。<a href="#Set">セット</a>に相当します。</p>
<pre class="Syntax">MapObj.<span class="func">__New</span>(<span class="optional">Key, Value, Key2, Value2, ...</span>)</pre>
<p>このメソッドは<a href="#Call">Call</a>をサポートするために存在し、直接呼び出すことは意図していません。<a href="../Objects.htm#Custom_NewDelete">建設と破壊</a>をご覧ください。</p>
</div>

<h2 id="Properties">プロパティ</h2>

<div class="methodShort" id="Count"><h3>Count</h3>
<p>マップに存在するキーとバリューのペアの数を取得します。</p>
<pre class="Syntax">Count := MapObj.<span class="func">Count</span></pre>
</div>

<div class="methodShort" id="Capacity"><h3>Capacity</h3>
<p>マップの現在の容量を取得または設定します。</p>
<pre class="Syntax">MaxItems := MapObj.<span class="func">Capacity</span></pre>
<pre class="Syntax">MapObj.<span class="func">Capacity</span> := MaxItems</pre>
<p><em>MaxItems</em> is an <a href="../Concepts.htm#numbers">integer</a> representing the maximum number of key-value pairs the map should be able to contain before it must be automatically expanded. 現在のキーと値のペアの数より少ない値を設定した場合、その数が代わりに使用され、未使用のスペースは解放される。</p>
</div>

<div class="methodShort" id="CaseSense"><h3>CaseSense</h3>
<p>マップの大文字と小文字の区別の設定を取得または設定します。</p>
<pre class="Syntax">CurrentSetting := MapObj.<span class="func">CaseSense</span></pre>
<pre class="Syntax">MapObj.<span class="func">CaseSense</span> := NewSetting</pre>
<p><em>CurrentSetting</em> is <em>NewSetting</em> if assigned, otherwise On by default (but note that this property only retrieves the string variant of the current setting).</p>
<p><em>NewSetting</em> is one of the following <a href="../Concepts.htm#strings">strings</a> or <a href="../Concepts.htm#boolean">integers (boolean)</a>:</p>
<p><strong>On</strong> または <strong>1</strong> (true):Key lookups are case-sensitive. これは初期設定です。</p>
<p><strong>Off</strong> または <strong>0</strong> (false):Key lookups are not case-sensitive, i.e. the letters A-Z are considered identical to their lowercase counterparts.</p>
<p><strong>Locale:</strong> Key lookups are not case-sensitive according to the rules of the current user's locale. 例えば、英語や西欧のロケールでは、A～Zの小文字だけでなく、ÄやÜなどの非ASCII文字も小文字と同じように扱われることがほとんどです。<em>Locale</em>は、比較する文字列の性質によって、<em>Off</em>の1～8倍遅くなります。</p>
<p>このプロパティに代入しようとすると、Mapが空でない場合は例外が発生する。</p>
</div>

<div class="methodShort" id="Default"><h3>デフォルト</h3>
<p>キーが見つからない場合に返されるデフォルト値を定義します。</p>
<pre class="Syntax">MapObj.<span class="func">Default</span> := Value</pre>
<p>このプロパティは、実はデフォルトでは存在せず、スクリプトで定義することができます。If defined, its value is returned by <a href="#__Item">__Item</a> or <a href="#Get">Get</a> if the requested item cannot be found, instead of throwing an <a href="Error.htm#UnsetError">UnsetItemError</a>. It can be implemented by any of the normal means, including a <a href="Object.htm#DefineProp">dynamic property</a> or <a href="../Objects.htm#Meta_Functions">meta-function</a>, but determining which key was queried would require overriding <a href="#__Item">__Item</a> or <a href="#Get">Get</a> instead.</p>
</div>

<div class="methodShort" id="__Item"><h3>__Item</h3>
<p>キーと値のペアの値を取得または設定します。</p>
<pre class="Syntax">Value := MapObj[Key]
Value := MapObj.<span class="func">__Item</span>[Key]</pre>
<pre class="Syntax">MapObj[Key] := Value
MapObj.<span class="func">__Item</span>[Key] := Value</pre>
<p>値を取得する場合、<em>Key</em>は他の値と以前に関連づけられたユニークな値でなければならない。ただし、<a href="#Default">Default</a>プロパティが定義されている場合は、その値が返されます。</p>
<p>値を割り当てる際、<em>Key</em>には <em>Value</em>と関連付ける任意の値、言い換えれば、<em>Value</em>に後からアクセスするための<em>キー</em>を指定することができる。<a href="../Concepts.htm#numbers">Float</a>キーは自動的に String に変換されます。</p>
<p>プロパティ名 __Item は、上記のように通常は省略されますが、プロパティをオーバーライドする際に使用されます。</p>
</div>

</body>
</html>
