<!DOCTYPE HTML>
<html lang="jp">
<head>
<title>Any - Methods &amp; Properties | AutoHotkey v2</title>
<meta name="description" content="Any represents the root of the AutoHotkey type hierarchy." />
<meta name="ahk:equiv-v1" content="index.htm" />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>Any</h1>

<p><code>Any</code> is the class at the root of AutoHotkey's type hierarchy. All other types are a sub-type of Any.</p>
<p><code>Any.Prototype</code> defines methods and properties that are applicable to all values and objects (currently excluding <a href="ComValue.htm">ComValue</a> and derived types) unless overridden. The prototype object itself is natively an <a href="Object.htm">Object</a>, but has no <code>base</code> and therefore does not identify as an instance of Object.</p>

<h2 id="toc">目次</h2>
<ul class="indent">
  <li><a href="#Methods">Methods</a>:
    
    <ul>
      <li><a href="#GetMethod">GetMethod</a>: Retrieves the implementation function of a method.</li>
      <li><a href="#HasBase">HasBase</a>: Returns true if <em>BaseObj</em> is in <em>Value</em>'s chain of base objects.</li>
      <li><a href="#HasMethod">HasMethod</a>: Returns true if the value has a method by this name.</li>
      <li><a href="#HasProp">HasProp</a>: Returns true if the value has a property by this name.</li>
    </ul>
  </li>
  <li><a href="#Properties">Properties</a>:
    
    <ul>
      <li><a href="#Base">Base</a>: Retrieves the value's base object.</li>
    </ul>
  </li>
  <li><a href="#Functions">Functions</a>:
    
    <ul>
      <li><a href="#GetBase">ObjGetBase</a>: Returns the value's base object.</li>
    </ul>
  </li>
</ul>

<h2 id="Methods">メソッド</h2>

<div class="methodShort" id="GetMethod"><h3>GetMethod</h3>
<p>Retrieves the implementation function of a method.</p>
<pre class="Syntax">Value.<span class="func">GetMethod</span>(<span class="optional">Name, ParamCount</span>)</pre>
<p>This method is exactly equivalent to <code>GetMethod(Value, Name, ParamCount)</code>, unless overridden.</p>
</div>

<div class="methodShort" id="HasBase"><h3>HasBase</h3>
<p>Returns true if <em>BaseObj</em> is in <em>Value</em>'s chain of base objects, otherwise false.</p>
<pre class="Syntax">Value.<span class="func">HasBase</span>(BaseObj)</pre>
<p>This method is exactly equivalent to <code>HasBase(Value, BaseObj)</code>, unless overridden.</p>
</div>

<div class="methodShort" id="HasMethod"><h3>HasMethod</h3>
<p>Returns true if the value has a method by this name, otherwise false.</p>
<pre class="Syntax">Value.<span class="func">HasMethod</span>(<span class="optional">Name, ParamCount</span>)</pre>
<p>This method is exactly equivalent to <code>HasMethod(Value, Name, ParamCount)</code>, unless overridden.</p>
</div>

<div class="methodShort" id="HasProp"><h3>HasProp</h3>
<p>Returns true if the value has a property by this name, otherwise false.</p>
<pre class="Syntax">Value.<span class="func">HasProp</span>(Name)</pre>
<p>This method is exactly equivalent to <code>HasProp(Value, Name)</code>, unless overridden.</p>
</div>

<h2 id="Properties">Properties</h2>

<div class="methodShort" id="Base"><h3>Base</h3>
<p>Retrieves the value's <a href="../Objects.htm#delegation">base object</a>.</p>
<pre class="Syntax">BaseObj := Value.Base</pre>
<p>For <a href="../Objects.htm#primitive">primitive values</a>, the return value is the pre-defined prototype object corresponding to <code>Type(Value)</code>.</p>
<p>こちらもご覧ください。<a href="#GetBase">ObjGetBase</a>, <a href="Object.htm#SetBase">ObjSetBase</a>, <a href="Object.htm#Base">Obj.Base</a></p>
</div>

<h2 id="Functions">機能紹介</h2>

<div class="methodShort" id="GetBase"><h3>ObjGetBase</h3>
<p>Returns the value's <a href="../Objects.htm#delegation">base object</a>.</p>
<pre class="Syntax">BaseObj := <span class="func">ObjGetBase</span>(Value)</pre>
<p>No <a href="../Objects.htm#Meta_Functions">meta-functions</a> or <a href="../Objects.htm#Custom_Classes_property">property functions</a> are called. Overriding the <a href="#Base">Base</a> property does not affect the behaviour of this function.</p>
<p>If there is no base, the return value is an empty string. Only the Any prototype itself has no base.</p>
<p>こちらもご覧ください。<a href="#Base">Base</a>, <a href="Object.htm#SetBase">ObjSetBase</a>, <a href="Object.htm#Base">Obj.Base</a></p>
</div>

</body>
</html>
