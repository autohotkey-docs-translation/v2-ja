<!DOCTYPE HTML>
<html lang="ja">
<head>
<title>Any - メソッドとプロパティ｜AutoHotkey v2</title>
<meta name="description" content="Anyは、AutoHotkeyのタイプ階層のルートを表します。" />
<meta name="ahk:equiv-v1" content="index.htm" />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>Any</h1>

<p><code>Any</code>は、AutoHotkeyのタイプ階層のルートにあるクラスです。それ以外のタイプは、Anyのサブタイプになります。</p>
<p><code>Any.Prototype</code>は、オーバーライドされない限り、すべての値およびオブジェクト（現在は<a href="ComValue.htm">ComValue</a>および派生型を除く）に適用されるメソッドおよびプロパティを定義します。プロトタイプオブジェクト自体は、本来<a href="Object.htm">Object</a>であるが、<code>ベース</code>がないため、Objectのインスタンスとして識別しない。</p>

<h2 id="toc">目次</h2>
<ul class="indent">
  <li><a href="#Methods">Methods</a>:
    <ul>
      <li><a href="#GetMethod">GetMethod</a>: Retrieves the implementation function of a method.</li>
      <li><a href="#HasBase">HasBase</a>: Returns true if the specified base object is in the value's chain of base objects.</li>
      <li><a href="#HasMethod">HasMethod</a>: Returns true if the value has a method by this name.</li>
      <li><a href="#HasProp">HasProp</a>: Returns true if the value has a property by this name.</li>
    </ul>
  </li>
  <li><a href="#Properties">Properties</a>:
    <ul>
      <li><a href="#Base">Base</a>: Retrieves the value's base object.</li>
    </ul>
  </li>
  <li><a href="#Functions">Functions</a>:
    <ul>
      <li><a href="#GetBase">ObjGetBase</a>: Returns the value's base object.</li>
    </ul>
  </li>
</ul>

<h2 id="Methods">メソッド</h2>

<div class="methodShort" id="GetMethod"><h3>GetMethod</h3>
<p>メソッドの実装関数を取得します。</p>
<pre class="Syntax">Value<span class="func">.GetMethod</span><span class="optional">(名前、ParamCount</span>)</pre>
<p>このメソッドは、オーバーライドされていない限り、<code>GetMethod(Value, Name, ParamCount)</code>と全く同じです。</p>
</div>

<div class="methodShort" id="HasBase"><h3>HasBase</h3>
<p>Returns true if the specified <a href="../Objects.htm#delegation">base object</a> is in the value's chain of base objects, otherwise false.</p>
<pre class="Syntax">Value.<span class="func">HasBase</span>(BaseObj)</pre>
<p>このメソッドは、オーバーライドされていない限り、<code>HasBase(Value, BaseObj)</code>と全く同じです。</p>
</div>

<div class="methodShort" id="HasMethod"><h3>HasMethod</h3>
<p>値がこの名前のメソッドを持っている場合はtrueを、そうでない場合はfalseを返します。</p>
<pre class="Syntax">Value.<span class="func">HasMethod</span>(<span class="optional">Name, ParamCount</span>)</pre>
<p>このメソッドは、オーバーライドされない限り、<code>HasMethod(Value, Name, ParamCount)</code>と全く同等です。</p>
</div>

<div class="methodShort" id="HasProp"><h3>HasProp</h3>
<p>値がこの名前のプロパティを持つ場合はtrueを、そうでない場合はfalseを返します。</p>
<pre class="Syntax">Value.<span class="func">HasProp</span>(Name)</pre>
<p>このメソッドは、オーバーライドされない限り、<code>HasProp(Value, Name)</code>と全く同等です。</p>
</div>

<h2 id="Properties">属性</h2>

<div class="methodShort" id="Base"><h3>Base</h3>
<p>値の<a href="../Objects.htm#delegation">ベースとなるオブジェクト</a>を取得します。</p>
<pre class="Syntax">BaseObj := Value.<span class="func">Base</span></pre>
<p><a href="../Objects.htm#primitive">原始的な値</a>の場合は、<code>Type(Value)</code>に対応する定義済みのプロトタイプオブジェクトが返り値として返されます。</p>
<p>See also: <a href="#GetBase">ObjGetBase</a>, <a href="Object.htm#SetBase">ObjSetBase</a>, <a href="Object.htm#Base">Obj.Base</a></p>
</div>

<h2 id="Functions">関数</h2>
<h3 id="GetBase">ObjGetBase</h3>
<p>値の<a href="../Objects.htm#delegation">ベースとなるオブジェクト</a>を返します。</p>
<pre class="Syntax">BaseObj := <span class="func">ObjGetBase</span>(Value)</pre>
<p><a href="../Objects.htm#Meta_Functions">メタファンクション</a>や <a href="../Objects.htm#Custom_Classes_property">プロパティファンクション</a>は呼び出されません。<a href="#Base">Base</a>プロパティをオーバーライドしても、この関数の動作に影響はありません。</p>
<p>ベースがない場合、戻り値は空文字列となる。Any原型そのものにのみベースがない。</p>
<p>See also: <a href="#Base">Base</a>, <a href="Object.htm#SetBase">ObjSetBase</a>, <a href="Object.htm#Base">Obj.Base</a></p>

</body>
</html>
