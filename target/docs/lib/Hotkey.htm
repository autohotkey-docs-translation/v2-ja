<!DOCTYPE HTML>
<html lang="ja">
<head>
<title>Hotkey - 構文と使用法｜AutoHotkey v2</title>
<meta name="description" content="Hotkey機能は、スクリプトの実行中にホットキーを作成、変更、有効化、または無効化する機能です。" />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>Hotkey</h1>

<p>スクリプトの実行中にホットキーを作成、変更、有効化、または無効化します。</p>
<pre class="Syntax">
<span class="func">Hotkey</span> KeyName <span class="optional">, Action, Options</span>
</pre>

<h2 id="Parameters">パラメータ</h2>
<dl>

  <dt>KeyName</dt>
  <dd>
    <p>型：<a href="../Concepts.htm#strings">文字列</a></p>
    <p><a href="../Hotkeys.htm#Symbols">修飾記号</a>を含む、ホットキーの起動キーの名前。例えば、<kbd>Win</kbd>+<kbd>C</kbd>のホットキーには<code>#c</code>を指定します。</p>
    <p><em>KeyName</em>がすでにホットキーとして存在する場合、そのホットキーは、関数の他のパラメータの値で更新されます。</p>
    <p><em>KeyName</em>には、既存のホットキー（ダブルコロン構文で作成）の名前を指定することもでき、そのホットキーは、関数の他のパラメータの値で更新されます。</p>
    <p><em>既存</em>のホットキーを指定する場合、<em>KeyName</em>の大文字と小文字は区別されません。ただし、キーの名前は既存のホットキーと同じスペルでなければなりません（例：この目的ではEscはEscapeと同じではありません）。また、^!+#などの<a href="../Hotkeys.htm#Symbols">修飾記号</a>の順番は関係ありません。<a href="GetKeyName.htm">GetKeyName</a>を使用して、キー名の標準的な綴りを取得することができます。</p>
    <p>ホットキーが最初に作成されたとき（Hotkey関数またはスクリプトの<a href="../Hotkeys.htm">ダブルコロン構文</a>による）、そのキー名と修飾記号の順序が、<a href="../Variables.htm#ThisHotkey">A_ThisHotkey</a>と <em>Action</em>のパラメータに反映されて、そのホットキーの永久名称となります。この名前は、ホットキーのすべての<a href="_HotIf.htm#variant">バリエーション</a>で共有され、ホットキー機能が後で異なるシンボル順序でホットキーにアクセスしても変更されることはありません。</p>
    <p>ホットキーバリアントがすでに存在する場合、<em>KeyName</em>が<a href="../Hotkeys.htm#Tilde">チルダ (~) 接頭辞を</a>含むか含まないかによって、その動作が更新されます。</p>
    <p>既存のホットキーに<a href="../Hotkeys.htm#prefixdollar">ユースフック（$）プレフィックス</a>を追加することができます。この接頭辞は、ホットキーのすべてのバリエーションに影響し、削除することはできません。</p>
  </dd>

  <dt>アクション</dt>
  <dd>
      <p>型：<a href="../Concepts.htm#strings">文字列</a>または<a href="../misc/Functor.htm">関数オブジェクト</a></p>
      <p>ホットキーが押されたときに実行する（新しい<a href="../misc/Threads.htm">スレッド</a>として）アクション名または関数です。これは、<a href="../misc/Functor.htm">関数オブジェクト</a>、末尾のコロンがない<a href="../Hotkeys.htm">ホットキー</a>名、または以下に示す特別な値のいずれかである可能性があります。</p>
      <p><em>Action</em>が関数の場合、1つのパラメータ（ホットキーの<a href="../Hotkeys.htm#ThisHotkey">名前</a>）で呼び出されます。<a href="../Hotkeys.htm">ダブルコロン構文</a>で定義されたホットキーは、自動的にパラメータ名<code>ThisHotkey</code>を使用します。Hotkeyには、Hotkeyの機能を伴わない<a href="../Hotkeys.htm#Function">機能</a>名を割り当てることもできます。</p>
      <p><em>Action</em>がホットキー名の場合、その元の機能が使用されます。具体的には、現在の<a href="HotIf.htm">HotIf</a>基準に対応するホットキーバリアントの元の機能が使用されます。通常、ホットキーの機能を変更した後に元の機能に戻すために使用しますが、両方のホットキーが同じHotIf基準を使用している場合に、別のホットキーの機能を割り当てるために使用することもできます。</p>
      <p><em>KeyName</em>がすでにホットキーとして存在する場合は、このパラメータを空白にすることができ、その場合、その動作は変更されません。ホットキーの<em>Options</em>のみを変更したい場合に便利です。</p>
      <p class="note"><strong>注意</strong>：機能を指定しても、以前にこの機能を使用した際にホットキーが無効になっている場合は、ホットキーは無効のままとなります。これを防ぐには、「<em>オプション</em>」に「ON」を入れてください。</p>
      <p>このパラメータは、以下の特別な値のいずれかを指定することも可能です：</p>
      <p><strong>On</strong>:ホットキーが有効になります。ホットキーがすでにOnになっている場合は、何もしません。</p>
      <p><strong>Off</strong>:ホットキーが無効になります。ホットキーがすでにOffになっている場合は、何もしません。</p>
      <p><strong>Toggle</strong>:ホットキーが反対の状態（有効または無効）に設定されます。</p>
      <p><strong>AltTab</strong>（その他）：これらは、<a href="../Hotkeys.htm#alttab">ここ</a>で説明するAlt-Tabの特殊なホットキーアクションです。</p>
      </dd>

  <dt id="Options">Options</dt>
  <dd>
      <p>型：<a href="../Concepts.htm#strings">文字列</a></p>
      <p>以下の文字列のうち、0個以上の文字列で、間に任意の空白を入れたもの。事例：<code>On B0</code>.</p>
      <p><strong>On</strong>:ホットキーが現在無効になっている場合は、有効にします。</p>
      <p><strong>Off</strong>:ホットキーが現在有効になっている場合は、無効にします。これは、通常、初期状態では無効な状態のホットキーを作成するために使用されます。</p>
      <p><strong>B</strong> または <strong>B0</strong>:Bを指定すると、<a href="_MaxThreadsBuffer.htm">#MaxThreadsBuffer</a>で説明したように、ホットキーをバッファリングします。このタイプのバッファリングを無効にする場合は、B0（Bに数字0）を指定します。</p>
      <p><strong>Pn</strong>:文字Pの後にホットキーの<a href="../misc/Threads.htm">スレッド優先順位</a>を指定します。ホットキー作成時にPオプションが省略された場合は、0が使用されます。</p>
      <p id="SuspendExempt"><strong>S</strong> または <strong>S0</strong>:Sを指定すると、ホットキーが<a href="Suspend.htm">サスペンド</a>を<a href="_SuspendExempt.htm">免除</a>するようになり、サスペンドをオフにするためにホットキーを使用できるようになります。S0（Sに数字の0）を指定すると、免除が解除され、ホットキーが中断できるようになります。</p>
      <p><strong>Tn</strong>:<a href="_MaxThreadsPerHotkey.htm">MaxThreadsPerHotkey</a>で説明したように、このホットキーで許可するスレッド数を文字Tの後に続けて指定します。事例：<code>T5</code>.</p>
      <p><strong>In</strong> (InputLevel):文字I（またはi）の後にホットキーの<a href="_InputLevel.htm">入力</a>レベルを指定します。事例：<code>I1</code>.</p>
      <p>オプション文字が省略され、ホットキーがすでに存在する場合、それらのオプションは変更されません。しかし、ホットキーがまだ存在しない場合、つまりこの機能によって作成されようとしている場合、オプションは直近で有効だったものがデフォルトとなります。例えば、スクリプトの一番下にある<a href="_MaxThreadsBuffer.htm">#MaxThreadsBuffer</a>のインスタンスが使用されます。<a href="_MaxThreadsBuffer.htm">MaxThreadsBuffer</a>がスクリプトに表示されていない場合は、そのデフォルト設定（この場合はOFF）が使用されます。</p>
      </dd>

</dl>

<h2 id="Error_Handling">エラー処理</h2>
<p>パラメータが無効な場合、またはメモリ確保に失敗した場合は例外がスローされます。</p>
<p>ホットキーが無効であったり、作成できなかったりすると、以下のいずれかの例外が発生することがあります：</p>
<table class="info">
  <tr>
    <th abbr="Class">エラークラス</th>
    <th>メッセージ</th>
    <th style="width: 50%;" abbr="説明">説明</th>
  </tr>
  <tr>
    <td rowspan="4"><a href="Error.htm#ValueError">ValueError</a></td>
    <td>無効なキー名です。</td>
    <td><em>KeyName</em>パラメータは、現在のキーボードレイアウト/言語で認識されていない、またはサポートされていない1つまたは複数のキーを指定します。<a href="Error.htm#Extra">Exception.Extra</a>には、キー名が含まれます。</td>
  </tr>
  <tr>
    <td>未対応のプレフィックスキーです。</td>
    <td>例えば、<code>WheelDown &amp; Enter</code>のようなホットキーの接頭辞としてマウスホイールを使用することはサポートされていません。<a href="Error.htm#Extra">Exception.Extra</a>にはプレフィックスキーが含まれています。</td>
  </tr>
  <tr>
    <td>このAltTabホットキーは、正確に1つの修飾語/接頭辞を持つ必要があります。</td>
    <td rowspan="2"><em>KeyName</em>パラメータは、<a href="../Hotkeys.htm#alttab">AltTabまたはShiftAltTab</a>アクションでの使用には適していません。（最大で）2つのキーの組み合わせが必要です。事例：<code>RControl &amp; RShift::AltTab</code>. <a href="Error.htm#Extra">Exception.Extra</a> contains <em>KeyName</em>.</td>
  </tr>
  <tr>
    <td>このAltTabホットキーは、どのキー（LまたはR）を指定する必要があります。</td>
  </tr>
  <tr>
    <td rowspan="2"><a href="Error.htm#TargetError">TargetError</a></td>
    <td>ホットキーが存在しない。</td>
    <td>この関数は、存在しないホットキーを変更しようとしました。<a href="Error.htm#Extra">Exception.Extra</a> contains <em>KeyName</em>.</td>
  </tr>
  <tr>
    <td>存在しないホットキーバリアント（IfWin）。</td>
    <td>この関数は、既存のホットキーの存在しない<a href="#variant">変種</a>を変更しようとしました。これを解決するには、<a href="HotIf.htm">HotIf</a>を使用して、変更するホットキーの条件と一致するように設定します。<a href="Error.htm#Extra">Exception.Extra</a>に <em>KeyNameが</em>含まれています。</td>
  </tr>
  <tr>
    <td><a href="Error.htm">Error</a></td>
    <td>ホットキーを最大にします。</td>
    <td>このホットキーを作成すると、スクリプトごとに32762個のホットキーという制限を超えてしまいます（ただし、各ホットキーには無制限の<a href="#variant">バリエーション</a>があり、<a href="../Hotstrings.htm">ホットストリング</a>の数には制限がありません）。</td>
  </tr>
</table>
<p>Tip:<a href="Try.htm">Try</a>-<a href="Catch.htm">Catch</a> は、ホットキーのバリアントが存在するかどうかをテストするために使用することができます。事例：</p>
<pre>
try
    Hotkey "^!p"
catch TargetError
    MsgBox "The hotkey does not exist or it has no variant for the current If criteria."
</pre>

<h2 id="Remarks">備考</h2>
<p><a href="HotIf.htm">現在のHotIf設定</a>は、Hotkey機能が動作するホットキーの<a href="#variant">バリアント</a>を決定します。</p>
<p>アクティブなウィンドウの種類に応じて選択したホットキーやホットストリングを自動的に無効にすることを目的とする場合、<code>Hotkey "^!c", "Off"</code> は通常、<a href="WinExist.htm">WinActive</a>/<a href="WinActive.htm">WinExist</a>（またはその動的対応である<a href="HotIf.htm#IfWin">HotIfWinActive/Exist</a>）で<a href="_HotIf.htm">#HotIf</a>を使用するより利便性が低くなります。</p>
<p><a href="../Hotkeys.htm">ダブルコロン構文</a>でホットキーを作成すると、スクリプトの起動時に一括してホットキーを有効にできるため、ホットキー機能を使用するよりもパフォーマンスが向上します（1つずつ有効にするのではありません）。したがって、この機能は、スクリプトの実行が開始されるまでキー名がわからないホットキーだけを作成するために使用するとよいでしょう。例えば、スクリプトのホットキーで様々なアクションを行う場合、<a href="IniRead.htm">INI</a>ファイルで設定することが可能です。</p>
<p>スクリプトが<a href="Suspend.htm">サスペンド</a>されている場合、新しく追加/有効になったホットキーも、サスペンドがオフになるまでサスペンドされます（<a href="Suspend.htm">サスペンド</a>セクションで説明したように免除される場合を除く）。</p>
<p><a href="InstallKeybdHook.htm">キーボード</a>や <a href="InstallMouseHook.htm">マウス</a>のフックは、本機能による変更で正当化される場合、取り付けまたは取り外しが可能です。</p>
<p>ホットキー機能は、自分以外のスクリプトのホットキーを直接有効にしたり無効にしたりすることはできませんが、ほとんどの場合、同じホットキーを作成したり有効にしたりすることで、それらを<a href="../misc/Override.htm">オーバーライド</a>できます。これがうまくいくかどうかは、さまざまな要因が重なって決まります：1) オーバーライドするホットキーが他のスクリプトの<a href="ListHotkeys.htm">フックホットキー</a>であるかどうか（フックでないホットキーは常にオーバーライド可能）、2) 最も最近起動したスクリプトのホットキーが他のスクリプトのそれよりも一般的に優先されるという事実（したがって、オーバーライドしようとするスクリプトが最も最近起動した場合、そのオーバーライドは常に成功します）、 3) このホットキーを有効または作成することによって<a href="InstallKeybdHook.htm">キーボード</a>または<a href="InstallMouseHook.htm">マウス</a>フックを新たにアクティブ化するかどうか（その場合、オーバーライドは必ず成功します）。</p>
<p>スクリプトに少なくとも1つのホットキーが設定されると、そのスクリプトは<a href="../Scripts.htm#persistent">永続的</a>なものとなり、終了させるには<a href="ExitApp.htm">ExitではなくExitApp</a>を使用する必要があります。</p>

<h2 id="variant">バリアント（複製）ホットキー</h2>
<p>特定のホットキーは、各定義が異なる場合、複数回作成することができます。これらは、<em>ホットキーバリアント</em>と呼ばれるものです。事例：</p>
<pre>HotIfWinActive "ahk_class Notepad"
Hotkey "^!c", MyFuncForNotepad
HotIfWinActive "ahk_class WordPadClass"
Hotkey "^!c", MyFuncForWordPad
HotIfWinActive
Hotkey "^!c", MyFuncForAllOtherWindows</pre>
<p>ホットキーの複数のバリエーションが発火の対象となる場合、最も早く作成されたものだけが発火します。ただし、グローバルバリアント（If 基準がないもの）は例外です：常に最も低い優先順位を持つので、他のバリアントが適格でない場合にのみ発火します。</p>
<p>重複するホットキーを作成する場合、^!+#などの<a href="../Hotkeys.htm#Symbols">修飾記号</a>の順番は関係ありません。例えば、<code>"^!c "</code>は<code>"!^c "</code>と同じです。ただし、キーは一貫したスペルで表記する必要があります。例えば、<em>Esc</em>はこの目的では<em>Escape</em>と同じではありません（ただし、ケースは重要ではありません）。最後に、<a href="../Hotkeys.htm#wildcard">ワイルドカード接頭辞(*)</a>を持つホットキーは、ワイルドカードでないものと全く別物です。例えば、「<code>*F1</code>」と「<code>F1</code>」は、それぞれ独自のバリエーションを持つことになります。</p>
<p>文脈依存型ホットキーについて詳しくは、<a href="_HotIf.htm#general-remarks">#HotIfの総論</a>をご覧ください。</p>

<h2 id="Related">関連</h2>
<p><a href="../Hotkeys.htm#Symbols">Hotkey Symbols</a>, <a href="HotIf.htm">HotIf</a>, <a href="../Variables.htm#ThisHotkey">A_ThisHotkey</a>, <a href="_MaxThreadsBuffer.htm">#MaxThreadsBuffer</a>, <a href="_MaxThreadsPerHotkey.htm">#MaxThreadsPerHotkey</a>, <a href="Suspend.htm">Suspend</a>, <a href="../misc/Threads.htm">Threads</a>, <a href="Thread.htm">Thread</a>, <a href="Critical.htm">Critical</a>, <a href="Return.htm">Return</a>, <a href="Menu.htm">Menu object</a>, <a href="SetTimer.htm">SetTimer</a></p>

<h2 id="examples">例</h2>
<div class="ex" id="ExBasic">
<p><a class="ex_number" href="#ExBasic"></a> Ctrl-Alt-Zのホットキーを作成します。</p>
<pre>Hotkey "^!z", MyFunc

MyFunc(ThisHotkey)
{
    MsgBox "You pressed " ThisHotkey
}</pre>
</div>

<div class="ex" id="ExAltTab">
<p><a class="ex_number" href="#ExAltTab"></a> RCtrlとRShiftをAlt-Tabのように操作できるようにします。</p>
<pre>Hotkey "RCtrl &amp; RShift", "AltTab"</pre>
</div>


<div class="ex" id="ExOff">
<p><a class="ex_number" href="#ExOff"></a> Shift-Win-Cのホットキーを無効にします。</p>
<pre>Hotkey "$+#c", "Off"</pre>
</div>

<div class="ex" id="ExT">
<p><a class="ex_number" href="#ExT"></a> 5つのスレッドを許可するようにホットキーを変更します。</p>
<pre>Hotkey "^!a",, "T5"</pre>
</div>

<div class="ex" id="ExIfWin">
<p><a class="ex_number" href="#ExIfWin"></a> <kbd>Alt</kbd>+<kbd>W</kbd>をメモ帳でのみ動作するホットキーとして作成します。</p>
<pre>HotIfWinActive "ahk_class Notepad"
Hotkey "!w", ToggleWordWrap  <em>; !w = Alt+W</em>

ToggleWordWrap(ThisHotkey)
{
    MenuSelect "A",, "Format", "Word Wrap"
}
</pre>
</div>

<div class="ex" id="ExampleIfFn">
<p><a class="ex_number" href="#ExampleIfFn"></a> プリミティブな3キーの組み合わせのホットキーを登録できるGUIを作成します。</p>
<pre>
HkGui := Gui()
HkGui.Add("Text", "xm", "Prefix key:")
HkGui.Add("Edit", "yp x100 w100 vPrefix", "Space")
HkGui.Add("Text", "xm", "Suffix hotkey:")
HkGui.Add("Edit", "yp x100 w100 vSuffix", "f &amp; j")
HkGui.Add("Button", "Default", "Register").OnEvent("Click", RegisterHotkey)
HkGui.OnEvent("Close", (*) =&gt; ExitApp())
HkGui.OnEvent("Escape", (*) =&gt; ExitApp())
HkGui.Show()

RegisterHotkey(*)
{
    Saved := HkGui.Submit(false)
    HotIf (*) =&gt; GetKeyState(Saved.Prefix)
    Hotkey Saved.Suffix, (ThisHotkey) =&gt; MsgBox(ThisHotkey)
}</pre>
</div>

</body>
</html>
