<!DOCTYPE HTML>
<html lang="ja">
<head>
<title>Download - Syntax &amp; Usage | AutoHotkey v2</title>
<meta name="description" content="The Download function downloads a file from the Internet." />
<meta name="ahk:equiv-v1" content="lib/URLDownloadToFile.htm" />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>Download</h1>

<p>Downloads a file from the Internet.</p>

<pre class="Syntax"><span class="func">Download</span> URL, Filename </pre>
<h2 id="Parameters">パラメータ</h2>
<dl>

  <dt>URL</dt>
  <dd>
    <p>型：<a href="../Concepts.htm#strings">文字列</a></p>
    <p>URL of the file to download. For example, http://someorg.org might retrieve the welcome page for that organization.</p>
  </dd>

  <dt>Filename</dt>
  <dd>
    <p>型：<a href="../Concepts.htm#strings">文字列</a></p>
    <p>Specify the name of the file to be created locally, which is assumed to be in <a href="../Variables.htm#WorkingDir">A_WorkingDir</a> if an absolute path isn't specified. Any existing file will be <strong>overwritten</strong> by the new file.</p>
  </dd>

</dl>

<h2 id="Error_Handling">エラー処理</h2>
<p>失敗した場合は例外が発生します。</p>

<h2 id="Remarks">備考</h2>
<p>This function downloads to a file. To download to a variable instead, see the example below. For alternative methods, see the following forum topic: <a href="https://www.autohotkey.com/forum/topic10466.html">www.autohotkey.com/forum/topic10466.html</a></p>
<p>The download might appear to succeed even when the remote file doesn't exist. This is because many web servers send an error page instead of the missing file. This error page is what will be saved in place of <em>Filename</em>.</p>
<p>Firewalls or the presence of multiple network adapters may cause this function to fail. Also, some websites may block such downloads.</p>
<p><strong>Caching</strong>: By default, the URL is retrieved directly from the remote server (that is, never from Internet Explorer's cache). To permit caching, precede the URL with *0 followed by a space; for example: <em>*0 http://someorg.org</em>. The zero following the asterisk may be replaced by any valid dwFlags number; for details, search <a href="http://www.microsoft.com">www.microsoft.com</a> for  InternetOpenUrl.</p>
<p><strong>Proxies</strong>: If a proxy server has been configured in Microsoft Internet Explorer's settings, it will be used.</p>
<p><strong>FTP and Gopher</strong> URLS are also supported. 事例：</p>
<pre>Download "ftp://example.com/home/My File.zip", "C:\My Folder\My File.zip"  <em>; Log in anonymously.</em>
Download "ftp://user:pass@example.com:21/home/My File.zip", "C:\My Folder\My File.zip"  <em>; Log in as a specific user.</em>
Download "ftp://user:pass@example.com/My Directory", "C:\Dir Listing.html"  <em>; Gets a directory listing in HTML format.</em></pre>

<h2 id="Related">関連</h2>
<p><a href="FileRead.htm">FileRead</a>, <a href="FileCopy.htm">FileCopy</a></p>

<h2 id="Examples">例</h2>
<div class="ex" id="ExBasic">
<p><a class="ex_number" href="#ExBasic"></a> Downloads a text file.</p>
<pre>Download "https://www.autohotkey.com/download/2.0/version.txt", "C:\AutoHotkey Latest Version.txt"</pre>
</div>

<div class="ex" id="ExZip">
<p><a class="ex_number" href="#ExZip"></a> Downloads a zip file.</p>
<pre>Download "http://someorg.org/archive.zip", "C:\SomeOrg's Archive.zip"</pre>
</div>

<div class="ex" id="ExWHR">
<p><a class="ex_number" href="#ExWHR"></a> Downloads text to a variable.</p>
<pre>whr := ComObject("WinHttp.WinHttpRequest.5.1")
whr.Open("GET", "https://www.autohotkey.com/download/2.0/version.txt", true)
whr.Send()
<em>; Using 'true' above and the call below allows the script to remain responsive.</em>
whr.WaitForResponse()
version := whr.ResponseText
MsgBox version
</pre>
</div>

<div class="ex" id="ExXHR">
<p><a class="ex_number" href="#ExXHR"></a> Makes an asynchronous HTTP request.</p>
<pre>req := ComObject("Msxml2.XMLHTTP")
<em>; Open a request with async enabled.</em>
req.open("GET", "https://www.autohotkey.com/download/2.0/version.txt", true)
<em>; Set our callback function.</em>
req.onreadystatechange := Ready
<em>; Send the request.  Ready() will be called when it's complete.</em>
req.send()
<em>/*
; If you're going to wait, there's no need for onreadystatechange.
; Setting async=true and waiting like this allows the script to remain
; responsive while the download is taking place, whereas async=false
; will make the script unresponsive.
while req.readyState != 4
    sleep 100
*/</em>
Persistent

Ready() {
    if (req.readyState != 4)<em>; Not done yet.</em>
        return
    if (req.status == 200)<em>; OK.</em>
        MsgBox "Latest AutoHotkey version:" req.responseText
    else
        MsgBox "Status " req.status,, 16
    ExitApp
}</pre>
</div>

</body>
</html>
