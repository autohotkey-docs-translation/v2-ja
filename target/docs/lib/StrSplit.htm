<!DOCTYPE HTML>
<html lang="ja">
<head>
<title>StrSplit - 構文と使用法｜AutoHotkey v2</title>
<meta name="description" content="StrSplit関数は、指定された区切り文字を使用して文字列を部分文字列の配列に分割する。" />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>StrSplit</h1>
<p>指定された区切り文字を使用して、文字列を部分文字列の配列に分離します。</p>
<pre class="Syntax">Array := <span class="func">StrSplit</span>(String <span class="optional">, Delimiters, OmitChars, MaxParts</span>)</pre>

<h2 id="Parameters">パラメータ</h2>
<dl>

  <dt>String</dt>
  <dd>
    <p>型：<a href="../Concepts.htm#strings">文字列</a></p>
    <p>分割する文字列。</p>
  </dd>

  <dt>Delimiters</dt>
  <dd>
    <p>型：<a href="../Concepts.htm#strings">文字列</a>または<a href="Array.htm">配列</a></p>
    <p>If blank or omitted, each character of the input string will be treated as a separate substring.</p>
    <p>そうでない場合は、単一の文字列か文字列の配列（大文字と小文字を区別する）を指定し、それぞれの文字列が部分文字列間の境界を決定するのに使われる。区切り文字は部分文字列の一部とはみなされないので、返される配列に含まれることはない。また、入力文字列内の区切り文字の間に何もない場合、対応する配列要素は空白になる。</p>
    <p>事例：<code>","</code>は、カンマが出現するたびに文字列を分割する。同様に、<code>[A_Space, A_Tab]</code>は、入力文字列中にスペースやタブが出現するたびに新しい配列要素を作成する。</p>
  </dd>

  <dt>OmitChars</dt>
  <dd>
    <p>型：<a href="../Concepts.htm#strings">文字列</a></p>
    <p>If blank or omitted, no characters will be excluded. それ以外の場合は、各配列要素の先頭と末尾から除外する文字のリスト（大文字と小文字を区別）を指定する。例えば、<em>OmitChars</em>が <code>" `t"</code>の場合、すべての要素の最初と最後（途中は除く）からスペースとタブが取り除かれる。</p>
    <p><em>Delimiters</em>が空白の場合、<em>OmitCharsは</em>配列から除外すべき文字を示す。</p>
  </dd>
  
  <dt>MaxParts</dt>
  <dd>
    <p>型：<a href="../Concepts.htm#numbers">整数</a></p>
    <p>If omitted, it defaults to -1, which means "no limit". そうでない場合は、返す部分文字列の最大数を指定する。0でない場合、文字列は最大<em>MaxParts</em>-1回分割され、文字列の残りが最後の部分文字列として返される(先頭または末尾の<em>OmitChars</em>を除く)。</p>
  </dd>

</dl>

<h2 id="Return_Value">戻り値</h2>
<p>型：<a href="Array.htm">配列</a></p>
<p>この関数は、指定された文字列の部分文字列を含む配列を返す。</p>

<h2 id="Remarks">備考</h2>
<p>スペースやタブなどの空白文字は、<em>Delimiters</em>または<em>OmitChars</em>パラメータにそれらの文字が含まれていない限り保持されます。スペースやタブは、<a href="Trim.htm">Trim</a>を使うことで変数の両端から切り取ることができる。事例：<code>Var := Trim(Var)</code></p>
<p>標準的なCSV（カンマ区切り値）形式の文字列を分割するには、CSV処理が組み込まれている<a href="LoopParse.htm">構文解析ループ</a>を使用する。</p>
<p>フィールドを分割する前に別の順序で並べるには、<a href="Sort.htm">ソート</a>機能を使用します。</p>
<p>部分文字列を永久にメモリに保存する必要がない場合は、<a href="LoopParse.htm">構文解析ループ</a>を使用することを検討する。特に<em>String</em>が非常に大きい場合は、大量のメモリを節約できる。事例：</p>
<pre>Colors := "red,green,blue"
Loop Parse, Colors, ","
    MsgBox "Color number " A_Index " is " A_LoopField</pre>

<h2 id="Related">関連</h2>
<p><a href="LoopParse.htm">解析ループ</a>、<a href="Sort.htm">Sort</a>、<a href="SplitPath.htm">SplitPath</a>、<a href="InStr.htm">InStr</a>、<a href="SubStr.htm">SubStr</a>、<a href="StrLen.htm">StrLen</a>、<a href="StrLower.htm">StrLower</a>、<a href="StrLower.htm">StrUpper</a>、<a href="StrReplace.htm">StrReplace</a></p>

<h2 id="Examples">例</h2>
<div class="ex" id="ExSpace">
<p><a class="ex_number" href="#ExSpace"></a> 文を単語の配列に分割し、4番目の単語を報告する。</p>
<pre>TestString := "This is a test."
word_array := StrSplit(TestString, A_Space, ".")  <em>; Omits periods.</em>
MsgBox "The 4th word is " word_array[4]</pre>
</div>

<div class="ex" id="ExComma">
<p><a class="ex_number" href="#ExComma"></a> カンマで区切られた色のリストを部分文字列の配列に分割し、1つずつ走査する。</p>
<pre>colors := "red,green,blue"
For index, color in StrSplit(colors, ",")
    MsgBox "Color number " index " is " color</pre>
</div>

</body>
</html>
