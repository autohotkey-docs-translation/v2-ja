<!DOCTYPE HTML>
<html lang="ja">
<head>
<title>Number - 構文と使用法｜AutoHotkey v2</title>
<meta name="description" content="Number関数は、数値文字列を整数または浮動小数点数に変換します。" />
<meta name="ahk:equiv-v1" content="index.htm" />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge" />
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>Number</h1>
<p>数値文字列を整数または浮動小数点数に変換します。</p>
<pre class="Syntax">NumValue := <span class="func">Number</span>(Value)</pre>

<h2 id="Return_Value">戻り値</h2>
<p>型：<a href="../Concepts.htm#numbers">整数</a>または<a href="../Concepts.htm#numbers">浮動小数点数</a></p>
<p>この関数は、<em>Value</em>を純粋な整数または浮動小数点数に変換した結果、または既にIntegerまたはFloat値である場合は<em>Value</em>自身を返します。</p>

<h2 id="Remarks">備考</h2>
<p>値を変換できない場合、<a href="Error.htm#TypeError">TypeError</a>がスローされます。</p>
<p>ある値が数値に変換できるかどうかを判断するには、<a href="Is.htm#number">IsNumber</a>関数を使用します。</p>
<p>Numberは実際にはクラスですが、関数として呼び出すことができます。<code>Value is Number</code>は、ある値が純粋な数であるかどうかを確認するために使用できます。</p>

<h2 id="Related">関連</h2>
<p><a href="Type.htm">Type</a>、<a href="Float.htm">Float</a>、<a href="Integer.htm">Integer</a>、<a href="String.htm">String</a>、<a href="../Concepts.htm#values">値</a>、<a href="../Language.htm#expressions">式</a>、<a href="Is.htm">Is関数</a></p>

</body>
</html>
