<!DOCTYPE HTML>
<html lang="ja">
<head>
<title>StrPut - Syntax &amp; Usage | AutoHotkey v2</title>
<meta name="description" content="The StrPut function copies a string to a memory address or buffer, optionally converting it to a given code page." />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>StrPut</h1>

<p>文字列をメモリアドレスまたはバッファにコピーし、オプションで指定されたコードページに変換します。</p>

<pre class="Syntax">
BytesWritten := <span class="func">StrPut</span>(String, Target <span class="optional">, Length, Encoding</span>)
BytesWritten := <span class="func">StrPut</span>(String, Target <span class="optional">, Encoding</span>)
ReqBufSize   := <span class="func">StrPut</span>(String <span class="optional">, Encoding</span>)
</pre>
<h2 id="Parameters">パラメータ</h2>
<dl>

  <dt>String</dt>
  <dd>
    <p>型：<a href="../Concepts.htm#strings">文字列</a></p>
    <p>Any string. If a number is given, it is automatically converted to a string.</p>
    <p><em>String</em> is assumed to be in the <a href="../Concepts.htm#string-encoding">native encoding</a>.</p>
  </dd>

  <dt>Target</dt>
  <dd>
    <p>型：<a href="../Concepts.htm#objects">オブジェクト</a>または<a href="../Concepts.htm#numbers">整数</a></p>
    <p>A <a href="Buffer.htm">Buffer</a>-like object or memory address to which the string will be written.</p>
    <p><a href="Buffer.htm#Ptr">Ptr</a>と<a href="Buffer.htm#Size">Size</a>プロパティを実装しているオブジェクトであれば何でも使用できますが、この関数はネイティブの<a href="Buffer.htm">Buffer</a>オブジェクトに最適化されています。Passing an object with these properties ensures that the function does not write memory to an invalid location; doing so could cause crashes or other unpredictable behaviour.</p>
    <p class="warning"><strong>Note:</strong> If conversion between code pages is necessary, the required buffer size may differ from the size of the source string. For such cases, call StrPut with two parameters to calculate the required size.</p>
  </dd>

  <dt>Length</dt>
  <dd>
    <p>型：<a href="../Concepts.htm#numbers">整数</a></p>
    <p>This can be unset or omitted, if <em>Target</em> is not a plain memory address and if the buffer size is known to be sufficient, such as if the buffer was allocated based on a previous call to StrPut with the same <em>String</em> and <em>Encoding</em>. Otherwise, specify the maximum number of <a href="../Concepts.htm#character">characters</a> to write, including the <a href="../Concepts.htm#null-termination">null-terminator</a> if required.</p>
    <p>If <em>Length</em> is zero or less than the projected length after conversion (or the length of the source string if conversion is not required), an exception is thrown.</p>
    <p>If <em>Target</em> is an object, specifying a <em>Length</em> that exceeds the buffer size calculated from <code><i>Target</i>.Size</code> is considered an error, even if the converted string would fit within the buffer.</p>
    <p class="warning"><strong>Note:</strong> When <em>Encoding</em> is specified, <em>Length</em> should be the size of the buffer (in characters), <strong>not</strong> the length of <em>String</em> or a substring, as conversion may increase its length.</p>
    <p class="warning"><strong>Note:</strong> <em>Length</em> is measured in characters, whereas buffer sizes are usually measured in bytes, as is StrPut's return value. To specify the buffer size in bytes, use a <a href="Buffer.htm">Buffer</a>-like object in the <em>Target</em> parameter.</p>
  </dd>

  <dt>エンコード</dt>
  <dd>
    <p>型：<a href="../Concepts.htm#strings">文字列</a>または<a href="../Concepts.htm#numbers">整数</a></p>
    <p>If unset or omitted, the string is simply copied or measured without any conversion taking place. Otherwise, specify thehe target encoding; for example, <code>"UTF-8"</code>, <code>"UTF-16"</code> or <code>"CP936"</code>. For numeric identifiers, the prefix "CP" can be omitted only if <em>Length</em> is specified. Specify an empty string or <code>"CP0"</code> to use the system default ANSI code page.</p>
  </dd>

</dl>

<h2 id="Return_Value">戻り値</h2>
<p>型：<a href="../Concepts.htm#numbers">整数</a></p>
<p>If <em>Target</em> is omitted, this function returns the required buffer size in bytes, including space for the null-terminator.</p>
<p>If <em>Target</em> is specified, this function returns the number of bytes written. A null-terminator is written and included in the return value only when there is sufficient space; that is, it is omitted when <em>Length</em> or <code><i>Target</i>.Size</code> (multiplied by the size of a character) exactly equals the length of the converted string.</p>

<h2 id="Error_Handling">エラー処理</h2>
<p>A <a href="Error.htm#ValueError">ValueError</a> is thrown if invalid parameters are detected, such as if the converted string would be longer than allowed by <em>Length</em> or <code><i>Target</i>.Size</code>.</p>
<p>An <a href="Error.htm#OSError">OSError</a> is thrown if the conversion could not be performed.</p>

<h2 id="Remarks">備考</h2>
<p>Note that the <i>String</i> parameter is always assumed to use the <a href="../Concepts.htm#string-encoding">native encoding</a> of the current executable, whereas <i>Encoding</i> specifies the encoding of the string written to the given <i>Target</i>. If no <em>Encoding</em> is specified, the string is simply copied or measured without any conversion taking place.</p>

<h2 id="Related">関連</h2>
<p><a href="../Concepts.htm#string-encoding">String Encoding</a>, <a href="StrGet.htm">StrGet</a>, <a href="../Compat.htm">Binary Compatibility</a>, <a href="FileEncoding.htm">FileEncoding</a>, <a href="DllCall.htm">DllCall</a>, <a href="Buffer.htm">Buffer object</a>, <a href="VarSetStrCapacity.htm">VarSetStrCapacity</a></p>

<h2 id="Examples">例</h2>
<div class="ex" id="ExNumEnc">
<p><a class="ex_number" href="#ExNumEnc"></a> Either <em>Length</em> or <em>Encoding</em> may be specified directly after <em>Target</em>, but in those cases <em>Encoding</em> must be non-numeric.</p>
<pre>
StrPut(str, address, "cp0")  <em>; Code page 0, unspecified buffer size</em>
StrPut(str, address, n, 0)   <em>; Maximum n chars, code page 0</em>
StrPut(str, address, 0)      <em>; Unsupported (maximum 0 chars)</em>
</pre>
</div>
<div class="ex" id="ExEncoding">
<p><a class="ex_number" href="#ExEncoding"></a> StrPut may be called once to calculate the required buffer size for a string in a particular encoding, then again to encode and write the string into the buffer. The process can be simplified by utilizing this function.</p>
<pre filename="StrBuf.ahk"><em>; Returns a <a href="Buffer.htm">Buffer</a> object containing the string.</em>
StrBuf(str, encoding)
{
    <em>; Calculate required size and allocate a buffer.</em>
    buf := Buffer(StrPut(str, encoding))
    <em>; Copy or convert the string.</em>
    StrPut(str, buf, encoding)
    return buf
}</pre>
</div>

</body>
</html>
