<!DOCTYPE HTML>
<html lang="ja">
<head>
<title>StrPut - 構文と使用法｜AutoHotkey v2</title>
<meta name="description" content="StrPut関数は、文字列をメモリ・アドレスまたはバッファにコピーし、オプションで指定されたコード・ページに変換する。" />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>StrPut</h1>

<p>文字列をメモリアドレスまたはバッファにコピーし、オプションで指定されたコードページに変換します。</p>

<pre class="Syntax">
BytesWritten := <span class="func">StrPut</span>(String, Target <span class="optional">, Length, Encoding</span>)
BytesWritten := <span class="func">StrPut</span>(String, Target <span class="optional">, Encoding</span>)
ReqBufSize   := <span class="func">StrPut</span>(String <span class="optional">, Encoding</span>)
</pre>
<h2 id="Parameters">パラメータ</h2>
<dl>

  <dt>String</dt>
  <dd>
    <p>型：<a href="../Concepts.htm#strings">文字列</a></p>
    <p>Any string. 数値が与えられると、自動的に文字列に変換される。</p>
    <p><em>文字列</em>は <a href="../Concepts.htm#string-encoding">ネイティブ・エンコーディング</a>であると仮定される。</p>
  </dd>

  <dt>Target</dt>
  <dd>
    <p>型：<a href="../Concepts.htm#objects">オブジェクト</a>または<a href="../Concepts.htm#numbers">整数</a></p>
    <p>文字列が書き込まれる<a href="Buffer.htm">バッファ</a>のようなオブジェクトまたはメモリアドレス。</p>
    <p><a href="Buffer.htm#Ptr">Ptr</a>プロパティと<a href="Buffer.htm#Size">Size</a>プロパティを実装したオブジェクトであれば何でも使用できますが、この関数はネイティブの<a href="Buffer.htm">Buffer</a>オブジェクトに最適化されています。これらのプロパティを持つオブジェクトを渡すことで、関数が不正な場所にメモリーを書き込まないようにします。</p>
    <p class="warning"><strong>注：</strong>コード・ページ間の変換が必要な場合、必要なバッファ・サイズはソース文字列のサイズと異なる場合がある。このような場合は、StrPutに2つのパラメータを付けて呼び出し、必要なサイズを計算する。</p>
  </dd>

  <dt>Length</dt>
  <dd>
    <p>Type: <a href="../Concepts.htm#numbers">Integer</a></p>
    <p>The maximum number of <a href="../Concepts.htm#character">characters</a> to write, including the <a href="../Concepts.htm#null-termination">null-terminator</a> if required.</p>
    <p><em>Length</em>がゼロか、変換後の投影長（変換が不要な場合はソース文字列の長さ）より小さい場合、例外がスローされる。</p>
    <p><em>Length</em> must not be omitted when <em>Target</em> is a plain memory address, unless the buffer size is known to be sufficient, such as if the buffer was allocated based on a previous call to StrPut with the same <em>String</em> and <em>Encoding</em>.</p>
    <p><em>Target</em>がオブジェクトの場合、<code><i>Target</i>.Size</code>から計算されるバッファサイズを超える<em>Length</em>を指定すると、変換後の文字列がバッファ内に収まる場合でもエラーとみなされます。</p>
    <p class="warning"><strong>注意：</strong><em>Encoding</em>が指定されている場合、<em>Length</em>はバッファのサイズ（文字数）であるべきで、<u>String</u>や部分文字列の長さでは<em>ない</em>はずです。</p>
    <p class="warning"><strong>注：</strong> <em>長さ</em>は文字単位で測定されるが、バッファ・サイズは通常バイト単位で測定される。バッファサイズをバイト単位で指定するには、<em>Target</em>パラメータに<a href="Buffer.htm">Buffer</a>ライクなオブジェクトを使用します。</p>
  </dd>

  <dt>Encoding</dt>
  <dd>
    <p>型：<a href="../Concepts.htm#strings">文字列</a>または<a href="../Concepts.htm#numbers">整数</a></p>
    <p>If omitted, the string is simply copied or measured without any conversion taking place. そうでない場合は、ターゲット・エンコーディングを指定する。例えば、<code>"UTF-8"</code>、<code>"UTF-16"</code>、<code>"CP936"</code>などである。For numeric identifiers, the prefix "CP" can be omitted only in 4-parameter mode. システム・デフォルトのANSIコード・ページを使用する場合は、空文字列または<code>"CP0"</code>を指定する。</p>
  </dd>

</dl>

<h2 id="Return_Value">戻り値</h2>
<p>Type: <a href="../Concepts.htm#numbers">Integer</a></p>
<p>In 4- or 3-parameter mode, this function returns the number of bytes written. A null-terminator is written and included in the return value only when there is sufficient space; that is, it is omitted when <em>Length</em> or <code><i>Target</i>.Size</code> (multiplied by the size of a character) exactly equals the length of the converted string.</p>
<p>In 2-parameter mode, this function returns the required buffer size in bytes, including space for the null-terminator.</p>

<h2 id="Error_Handling">エラー処理</h2>
<p>変換後の文字列が<em>Length</em>や <code><i>Target</i>.Size</code>で許容される長さよりも長い場合など、無効なパラメータが検出された場合は<a href="Error.htm#ValueError">ValueError</a>がスローされます。</p>
<p>変換が実行できなかった場合は<a href="Error.htm#OSError">OSError</a>がスローされます。</p>

<h2 id="Remarks">備考</h2>
<p><i>String</i>パラメータは常に現在の実行ファイルの<a href="../Concepts.htm#string-encoding">ネイティブエンコーディング</a>を使用すると仮定されるのに対し、<i>Encoding</i>は指定された<i>Target</i>に書き込まれる文字列のエンコーディングを指定することに注意してください。<em>Encoding</em>が指定されていない場合、文字列は変換されることなく、単にコピーまたは測定される。</p>

<h2 id="Related">関連</h2>
<p><a href="../Concepts.htm#string-encoding">文字列のエンコード</a>、<a href="StrGet.htm">StrGet</a>、<a href="../Compat.htm">バイナリ互換性</a>、<a href="FileEncoding.htm">FileEncoding</a>、<a href="DllCall.htm">DllCall</a>、<a href="Buffer.htm">Bufferオブジェクト</a>、<a href="VarSetStrCapacity.htm">VarSetStrCapacity</a></p>

<h2 id="Examples">例</h2>
<div class="ex" id="ExNumEnc">
<p><a class="ex_number" href="#ExNumEnc"></a> <em>Target</em>の後に<em>Length</em>または<em>Encoding</em>を直接指定することもできるが、その場合<em>Encoding</em>は数値であってはならない。</p>
<pre>
StrPut(str, address, "cp0")  <em>; Code page 0, unspecified buffer size</em>
StrPut(str, address, n, 0)   <em>; Maximum n chars, code page 0</em>
StrPut(str, address, 0)      <em>; Unsupported (maximum 0 chars)</em>
</pre>
</div>
<div class="ex" id="ExEncoding">
<p><a class="ex_number" href="#ExEncoding"></a> StrPutは、特定のエンコーディングの文字列に必要なバッファサイズを計算するために一度呼び出され、その後、文字列をエンコードしてバッファに書き込むために再度呼び出されることがある。この機能を利用することで、プロセスを簡略化することができる。</p>
<pre filename="StrBuf.ahk"><em>; Returns a <a href="Buffer.htm">Buffer</a> object containing the string.</em>
StrBuf(str, encoding)
{
    <em>; Calculate required size and allocate a buffer.</em>
    buf := Buffer(StrPut(str, encoding))
    <em>; Copy or convert the string.</em>
    StrPut(str, buf, encoding)
    return buf
}</pre>
</div>

</body>
</html>
