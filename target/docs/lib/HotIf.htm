<!DOCTYPE HTML>
<html lang="jac">
<head>
<title>HotIf / HotIfWin... - Syntax &amp; Usage | AutoHotkey v2</title>
<meta name="description" content="The HotIf and HotIfWin functions specify the criteria for subsequently created or modified hotkey variants and hotstring variants." />
<meta name="ahk:equiv-v1" content="lib/Hotkey.htm" />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>HotIf / HotIfWin...</h1>

<p>Specifies the criteria for subsequently created or modified <a href="Hotkey.htm#variant">hotkey variants</a> and <a href="Hotstring.htm#variant">hotstring variants</a>.</p>

<h2 id="If">HotIf</h2>
<pre class="Syntax">
<span class="func">HotIf</span> <span class="optional">"Expression"</span>
<span class="func">HotIf</span> <span class="optional">Callback</span>
</pre>

<h3 id="HotIf_Parameters">パラメータ</h3>
<dl>

  <dt>"Expression"</dt>
  <dd>
    <p>型：<a href="../Concepts.htm#strings">文字列</a></p>
    <p>If omitted, blank criteria will be set (turns off context-sensitivity). Otherwise, the criteria will be set to an existing <a href="_HotIf.htm">#HotIf</a> expression. The expression is usually written as a <a href="../Language.htm#strings">quoted string</a>, but can also be a variable or expression which returns text matching a #HotIf expression.</p>
    <p class="note"><strong>注意：</strong>HotIf関数は、元のソースコードではなく、渡した文字列を使用します。<a href="../misc/EscapeChar.htm">エスケープシーケンス</a>はスクリプトのロード時に解決されるため、結果の文字のみが考慮されます。例えば、<code>HotIf 'x = "`t"'</code>と<code>HotIf 'x = "' A_Tab '"'</code>はどちらも<code>#HotIf x = "`t"</code>に相当します。</p>
    <p>For an example, see <a href="_HotIf.htm#ExDynamic">#HotIf example #5</a>.</p>
  </dd>
  
  <dt>Callback</dt>
  <dd>
    <p>型：<a href="../misc/Functor.htm">機能オブジェクト</a></p>
    <p>If omitted, blank criteria will be set (turns off context-sensitivity). Otherwise, the criteria will be set to a given function object. Subsequently-created hotkeys and hotstrings will only execute if the callback returns a non-zero number. This is like <code>HotIf "Expression"</code>, except that each hotkey and hotstring can have many <a href="Hotkey.htm#variant">hotkey variants</a> or <a href="Hotstring.htm#variant">hotstring variants</a> (one per object).</p>
    <p>コールバックは 1 つのパラメーターを受け取り、次のように<a href="../Functions.htm#intro">定義</a>できます。</p>
    <pre class="NoIndent">MyCallback(HotkeyName) { ...</pre>
    <p>Although the name you give the parameter does not matter, it is assigned the <a href="../Hotkeys.htm#ThisHotkey">hotkey name</a> or <a href="../Hotstrings.htm#ThisHotkey">hotstring name</a>.</p>
    <p>対応する情報が必要ないときはコールバックのパラメータを省略することができますが、その場合は<code>MyCallback(*)</code>のようにアスタリスクを指定する必要があります。</p>
    <p>HotIf関数に渡されたオブジェクトは削除されることはありません（ただし、プロセス終了時にOSによってメモリが回収されます）。</p>
    <p>For an example, see <a href="#ExHotIfCallback">example #2</a> below or <a href="Hotkey.htm#ExampleIfFn">Hotkey example #6</a>.</p>
  </dd>

</dl>

<h2 id="IfWin">HotIfWin...</h2>
<pre class="Syntax">
<span class="func">HotIfWinActive</span> <span class="optional">WinTitle, WinText</span>
<span class="func">HotIfWinExist</span> <span class="optional">WinTitle, WinText</span>
<span class="func">HotIfWinNotActive</span> <span class="optional">WinTitle, WinText</span>
<span class="func">HotIfWinNotExist</span> <span class="optional">WinTitle, WinText</span>
</pre>

<h3 id="HotIfWin_Parameters">パラメータ</h3>
<dl>

  <dt>WinTitle, WinText</dt>
  <dd>
    <p>型：<a href="../Concepts.htm#strings">文字列</a></p>
    <p>If both are omitted, blank criteria will be set (turns off context-sensitivity). そうでないときは、<em>WinTitle</em>に <a href="../misc/WinTitle.htm">ウィンドウタイトル</a>またはターゲットウィンドウを識別するための<a href="../misc/WinTitle.htm">他の基準</a>、および/または<em>WinText</em>にターゲットウィンドウの単一のテキスト要素からの部分文字列（付属のWindow Spyユーティリティを使えばわかります）を指定します。Depending on which function is called, affected hotkeys and hotstrings are in effect only while the target window is active, exists, is not active, or does not exist.</p>
    <p>パラメータは関数が呼び出される前に評価されるため、変数への参照はその時点で永続的なものとなります。In other words, subsequent changes to the contents of the variable are not seen by existing hotkeys and hotstrings.</p>
    <p><em>WinTitle</em>、<em>WinText</em>は、<a href="WinActive.htm">WinActive</a>、<a href="WinExist.htm">WinExist</a>と同じ意味ですが、文字列のみ使用でき、<a href="../Scripts.htm#auto">自動実行スレッド</a>が設定した<a href="SetTitleMatchMode.htm">SetTitleMatchMode</a>、<a href="DetectHiddenWindows.htm">DetectHiddenWindows</a>のデフォルト設定に従って評価されます。</p>
    <p>For an example, see <a href="#ExHotIfWin">example #1</a> below.</p>

  </dd>

</dl>

<h2 id="Error_Handling">エラー処理</h2>
<p>An exception is thrown if HotIf's parameter is invalid, such as if it does not match an existing expression or is not a valid callback function.</p>

<h2 id="remarks">総論</h2>
<p>The HotIf and HotIfWin functions allow context-sensitive <a href="../Hotkeys.htm">hotkeys</a> and <a href="../Hotstrings.htm">hotstrings</a> to be created and modified while the script is running (by contrast, the <a href="_HotIf.htm">#HotIf</a> directive is positional and takes effect before the script begins executing). 事例：</p>
<pre>HotIfWinActive "ahk_class Notepad"
Hotkey "^!e", MyFuncForNotepad  <em>; メモ帳でのみ動作するホットキーを作成します。</em></pre>
<p>Using HotIf or one of the HotIfWin functions puts context sensitivity into effect for all subsequently created <a href="../Hotkeys.htm">hotkeys</a> and <a href="../Hotstrings.htm">hotstrings</a> in the current <a href="../misc/Threads.htm">thread</a>, and affects which hotkey or hotstring variants the <a href="Hotkey.htm">Hotkey</a> or <a href="Hotstring.htm">Hotstring</a> function modifies. Only the most recent call to the HotIf or HotIfWin function in the current thread will be in effect.</p>
<p>To turn off context sensitivity (such as to make subsequently-created hotkeys and hotstrings work in all windows), call HotIf or one of the HotIfWin functions but omit the parameters. 事例：<code>HotIf</code> または <code>HotIfWinActive</code>。</p>
<p>Before HotIf or one of the HotIfWin functions is used in a hotkey or hotstring <a href="../misc/Threads.htm">thread</a>, the <a href="Hotkey.htm">Hotkey</a> and <a href="Hotstring.htm">Hotstring</a> functions default to the same context as the hotkey or hotstring that launched the thread. つまり、<code>Hotkey A_ThisHotkey, "Off "</code>は、現在のホットキーがコンテキストセンシティブであってもオフします。All other threads default to creating or modifying global hotkeys and hotstrings, unless that default is overridden by using HotIf or one of the HotIfWin functions during <a href="../Scripts.htm#auto">script startup</a>.</p>
<p>When a mouse or keyboard hotkey is disabled via HotIf, one of the HotIfWin functions, or the <a href="_HotIf.htm">#HotIf</a> directive, it performs its native function; that is, it passes through to the active window as though there is no such hotkey. However, controller hotkeys always pass through, whether they are disabled or not.</p>

<h2 id="Related">関連</h2>
<p><a href="../Hotkeys.htm">ホットキー</a>、<a href="../Hotstrings.htm">ホットストリング</a>、<a href="Hotkey.htm">Hotkey関数</a>、<a href="Hotstring.htm">Hotstring関数</a>、<a href="_HotIf.htm">#HotIf</a>、<a href="../misc/Threads.htm">スレッド</a></p>

<h2 id="examples">例</h2>
<div class="ex" id="ExHotIfWin">
<p><a class="ex_number" href="#ExHotIfWin"></a> Similar to <a href="_HotIf.htm#ExBasic">#HotIf example #1</a>, this creates two hotkeys and one hotstring which only work when Notepad is active, and one hotkey which works for any window except Notepad. The main difference is that this example creates context-sensitive hotkeys and hotstrings at runtime, while the #HotIf example creates them at loadtime.</p>
<pre>HotIfWinActive "ahk_class Notepad"
Hotkey "^!a", ShowMsgBox
Hotkey "#c", ShowMsgBox
Hotstring "::btw", "This replacement text will occur only in Notepad."
HotIfWinActive
Hotkey "#c", (*) =&gt; MsgBox("You pressed Win-C in a window other than Notepad.")

ShowMsgBox(HotkeyName)
{
    MsgBox "You pressed " HotkeyName " while Notepad is active."
}</pre>
</div>
<div class="ex" id="ExHotIfCallback">
<p><a class="ex_number" href="#ExHotIfCallback"></a> Similar to the example above, but with a callback.</p>
<pre>HotIf MyCallback
Hotkey "^!a", ShowMsgBox
Hotkey "#c", ShowMsgBox
Hotstring "::btw", "This replacement text will occur only in Notepad."
HotIf
Hotkey "#c", (*) =&gt; MsgBox("You pressed Win-C in a window other than Notepad.")

MyCallback(*)
{
    if WinActive("ahk_class Notepad")
        return true
    else
        return false
}

ShowMsgBox(HotkeyName)
{
    MsgBox "You pressed " HotkeyName " while Notepad is active."
}</pre>
</div>

</body>
</html>
