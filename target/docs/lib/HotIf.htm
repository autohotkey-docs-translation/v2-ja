<!DOCTYPE HTML>
<html lang="ja">
<head>
<title>HotIf - Syntax &amp; Usage | AutoHotkey v2</title>
<meta name="description" content="The HotIf function specifies the criteria for subsequently created or modified hotkey variants." />
<meta name="ahk:equiv-v1" content="lib/Hotkey.htm" />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>HotIf / HotIfWin</h1>

<p>Specifies the criteria for subsequently created or modified hotkey <a href="Hotkey.htm#variant">variants</a>.</p>
<p>Contents:</p>
<ul>
  <li><a href="#If">HotIf</a></li>
  <li><a href="#IfWin">HotIfWin...</a></li>
  <li><a href="#remarks">総論</a></li>
  <li><a href="#examples">例</a></li>
</ul>

<h2 id="If">HotIf</h2>
<pre class="Syntax">
<span class="func">HotIf</span> <span class="optional">"Expression"</span>
<span class="func">HotIf</span> <span class="optional">Function</span>
</pre>

<h3 id="HotIf_Parameters">パラメータ</h3>
<dl>

  <dt id="if-blank">(parameter omitted)</dt>
  <dd><p>Sets blank criteria (turns off context-sensitivity).</p></dd>

  <dt id="if-expr">"Expression"</dt>
  <dd>
    <p>型：<a href="../Concepts.htm#strings">文字列</a></p>
    <p>Sets the criteria to an existing <a href="_HotIf.htm">#HotIf</a> expression. <em>Expression</em> is usually written as a <a href="../Language.htm#strings">quoted string</a>, but can also be a variable or expression which returns text matching a #HotIf expression. Although this function is unable to create new expressions, it can create new hotkeys using an existing expression. See <a href="_HotIf.htm#ExDynamic">#HotIf example 5</a>.</p>
    <p class="note"><strong>注意</strong>：The HotIf function uses the string that you pass to it, not the original source code. <a href="../misc/EscapeChar.htm">Escape sequences</a> are resolved when the script loads, so only the resulting characters are considered; for example, <code>HotIf 'x = "`t"'</code> and <code>HotIf 'x = "' A_Tab '"'</code> both correspond to <code>#HotIf x = "`t"</code>.</p>
  </dd>
  
  <dt id="if-func">Function</dt>
  <dd>
    <p>型：<a href="../misc/Functor.htm">機能オブジェクト</a></p>
    <p>Sets the criteria to a given function object. Subsequently-created hotkeys will only execute if calling the given function object yields a non-zero number. This is like <code>HotIf "Expression"</code>, except that each hotkey can have many <a href="Hotkey.htm#variant">variants</a> (one per object). <em>Function</em> must be an object with a <em>call</em> method taking one parameter, the <a href="../Hotkeys.htm#ThisHotkey">name</a> of the hotkey.</p>
    <p>Once passed to the HotIf function, the object will never be deleted (but memory will be reclaimed by the OS when the process exits).</p>
    <p>The <a href="Hotkey.htm#ExampleIfFn">"three-key combination" Hotkey example</a> uses this mode of HotIf.</p>
  </dd>

</dl>

<h2 id="IfWin">HotIfWin...</h2>
<pre class="Syntax">
<span class="func">HotIfWinActive</span> <span class="optional">WinTitle, WinText</span>
<span class="func">HotIfWinExist</span> <span class="optional">WinTitle, WinText</span>
<span class="func">HotIfWinNotActive</span> <span class="optional">WinTitle, WinText</span>
<span class="func">HotIfWinNotExist</span> <span class="optional">WinTitle, WinText</span>
</pre>

<h3 id="HotIfWin_Parameters">パラメータ</h3>
<dl>

  <dt>(all parameters omitted)</dt>
  <dd><p>Sets blank criteria (turns off context-sensitivity).</p></dd>

  <dt>WinTitle, WinText</dt>
  <dd>
    <p>型：<a href="../Concepts.htm#strings">文字列</a></p>
    <p>Specifies the window title and other criteria that should be used to identify a window. Depending on which function is called, affected hotkeys and hotstrings are active only while a matching window is active, exists, is not active, or does not exist.</p>
    <p>Since the parameters are evaluated before the function is called, any variable reference becomes permanent at that moment. In other words, subsequent changes to the contents of the variable are not seen by existing hotkeys.</p>
    <p><em>WinTitle</em> and <em>WinText</em> have the same meaning as for <a href="WinActive.htm">WinActive</a> or <a href="WinExist.htm">WinExist</a>, but only strings can be used, and they are evaluated according to the default settings for <a href="SetTitleMatchMode.htm">SetTitleMatchMode</a> and <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a> as set by the <a href="../Scripts.htm#auto">auto-execute thread</a>. See <a href="../misc/WinTitle.htm">WinTitle</a> for details.</p>
  </dd>

</dl>

<h2 id="Error_Handling">エラー処理</h2>
<p>An exception is thrown if HotIf's parameter is invalid, such as if it does not match an existing expression and is not a valid callback function.</p>

<h2 id="remarks">総論</h2>
<p>HotIf allows context-sensitive <a href="../Hotkeys.htm">hotkeys</a> to be created and modified while the script is running (by contrast, the <a href="_HotIf.htm">#HotIf</a> directive is positional and takes effect before the script begins executing). 事例：</p>
<pre>HotIfWinActive "ahk_class Notepad"
Hotkey "^!e", MyFuncForNotepad  <em>; Creates a hotkey that works only in Notepad.</em></pre>
<p>Using HotIf puts context sensitivity into effect for all subsequently created <a href="../Hotkeys.htm">hotkeys</a> in the current <a href="../misc/Threads.htm">thread</a>, and affects which hotkey variants the <a href="Hotkey.htm">Hotkey</a> function modifies. Only the most recent call to any of the HotIf functions in the current thread will be in effect.</p>
<p>To turn off context sensitivity (such as to make subsequently-created hotkeys work in all windows), call any HotIf function but omit the parameters. 事例：<code>HotIf</code> or <code>HotIfWinActive</code>.</p>
<p>Before HotIf is used in a hotkey or hotstring <a href="../misc/Threads.htm">thread</a>, the Hotkey and Hotstring functions default to the same context as the hotkey or hotstring that launched the thread. In other words, <code>Hotkey A_ThisHotkey, "Off"</code> turns off the current hotkey even if it is context-sensitive. All other threads default to creating or modifying global hotkeys, unless that default is overridden by using HotIf during <a href="../Scripts.htm#auto">script startup</a>.</p>
<p>When a mouse or keyboard hotkey is disabled via a HotIf function or directive, it performs its native function; that is, it passes through to the active window as though there is no such hotkey. However, joystick hotkeys always pass through, whether they are disabled or not.</p>

<h2 id="Related">関連</h2>
<p><a href="Hotkey.htm">Hotkey</a> (function), <a href="../Hotkeys.htm">Hotkeys</a> (general), <a href="_HotIf.htm">#HotIf</a>, <a href="../misc/Threads.htm">Threads</a></p>

<h2 id="examples">例</h2>
<p>See <a href="Hotkey.htm#examples">Hotkey</a> for examples.</p>

</body>
</html>
