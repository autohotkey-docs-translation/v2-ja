<!DOCTYPE HTML>
<html lang="ja">
<head>
<title>NumGet - 構文と使用法｜AutoHotkey v2</title>
<meta name="description" content="NumGet関数は、指定されたアドレス＋オフセットに格納されている2進数を返します。" />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>NumGet</h1>
<p>指定されたアドレス＋オフセットに格納されている2進数を返します。</p>
<pre class="Syntax">Number := <span class="func">NumGet</span>(Source, <span class="optional">Offset,</span> Type)</pre>

<h2 id="Parameters">パラメータ</h2>
<dl>

  <dt>Source</dt>
  <dd>
    <p>型：<a href="../Concepts.htm#objects">オブジェクト</a>または<a href="../Concepts.htm#numbers">整数</a></p>
		<p><a href="Buffer.htm">Buffer</a>のようなオブジェクトまたはメモリアドレス。</p>
    <p><a href="Buffer.htm#Ptr">Ptr</a>と<a href="Buffer.htm#Size">Size</a>プロパティを実装しているオブジェクトであれば何でも使用できますが、この関数はネイティブの<a href="Buffer.htm">Buffer</a>オブジェクトに最適化されています。これらのプロパティを持つオブジェクトを渡すことで、関数が不正な場所からメモリを読み込むことがないようにします。そうすると、クラッシュやその他の予測不可能な動作が起こる可能性があります。</p>
	</dd>

  <dt>Offset</dt>
  <dd>
    <p>型：<a href="../Concepts.htm#numbers">整数</a></p>
    <p>If unset or omitted, it defaults to 0. Otherwise, specify an offset in bytes which is added to <em>Source</em> to determine the source address.</p>
  </dd>

  <dt>Type</dt>
  <dd>
      <p>型：<a href="../Concepts.htm#strings">文字列</a></p>
      <p>以下の文字列のいずれか1つ：UInt, Int, Int64, Short, UShort, Char, UChar, Double, Float, Ptr or UPtr</p>
    <p>AutoHotkeyのネイティブ整数型はInt64なので、<em>符号なし</em>64ビット整数はサポートされていません。したがって、0x800000000000以上の数値を扱う場合は、U接頭辞を省略し、負の値は大きな整数として解釈します。例えば、Int64として-1という値は、UInt64を意図している場合、本当は0xFFFFFFFFFFFFFFFFになります。64ビットビルドでは、UPtrはInt64と同等です。</p>
      <p>これらの型名をリテラル文字列として使用する場合は、引用符で囲む必要があります。</p>
      <p>詳しくは<a href="DllCall.htm#types">DllCallの種類</a>をご覧ください。</p>
    </dd>

</dl>

<h2 id="Return_Value">戻り値</h2>
<p>型：<a href="../Concepts.htm#numbers">整数</a>または<a href="../Concepts.htm#numbers">浮動小数点</a></p>
<p>この関数は、指定されたアドレス＋オフセットにある2進数を返します。</p>

<h2 id="General_Remarks">総論</h2>
<p>パラメータが2つだけ存在する場合、2つ目のパラメータは<em>Type</em>でなければいけません。例えば、<code>NumGet(var, "int")</code>は有効です。</p>
<p>送信元アドレスが無効な場合、例外が発生することがあります。しかし、無効なアドレスの中には、それを検出できないものもあり、予測できない挙動を引き起こす可能性があります。アドレスの代わりに<a href="Buffer.htm">Buffer</a>オブジェクトを渡すことで、ソースアドレスを常に検証することができます。</p>

<h2 id="Related">関連</h2>
<p><a href="NumPut.htm">NumPut</a>, <a href="DllCall.htm">DllCall</a>, <a href="Buffer.htm">Buffer object</a>, <a href="VarSetStrCapacity.htm">VarSetStrCapacity</a></p>


</body>
</html>
