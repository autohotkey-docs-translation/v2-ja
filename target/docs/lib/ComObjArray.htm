<!DOCTYPE HTML>
<html lang="ja">
<head>
<title>ComObjArray - 構文と使用法｜AutoHotkey v2</title>
<meta name="description" content="ComObjArray 関数は、COM で使用する SafeArray を作成します。" />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>ComObjArray</h1>

<p>COM で使用する SafeArray を作成します。</p>

<pre class="Syntax">ArrayObj := <span class="func">ComObjArray</span>(VarType, Count1 <span class="optional">, Count2, ... Count8</span>)</pre>
<p><code>ComObjArray</code>自体は<code>ComValue</code>から派生した<a href="Class.htm">クラス</a>ですが、SafeArrayのラッパーオブジェクトを作成または識別するためにのみ使用されます。</p>

<h2 id="Parameters">パラメータ</h2>
<dl>

  <dt>VarType</dt>
  <dd>
    <p>Type: <a href="../Concepts.htm#numbers">Integer</a></p>
    配列の基本型（配列の各要素のVARTYPE）。VARTYPEは、バリアントタイプのサブセットに限定されます。VT_ARRAYフラグ、VT_BYREFフラグのいずれも設定できない。VT_EMPTY と VT_NULL は、配列のベースタイプとして有効ではありません。それ以外のタイプはすべて合法です。
    <p>取り得る値の一覧は、<a href="ComObjType.htm">ComObjType</a>をご覧ください。</p>
  </dd>

  <dt>Count<i>N</i></dt>
  <dd>
    <p>Type: <a href="../Concepts.htm#numbers">Integer</a></p>
    <p>各寸法の大きさです。最大8次元までの配列に対応しています。</p>
  </dd>

</dl>

<h2 id="Return_Value">戻り値</h2>
<p>Type: ComObjArray</p>
<p>この関数は、新しい SafeArray を含むラッパーオブジェクトを返します。</p>

<h2 id="Methods">メソッド</h2>
<p>ComObjArray オブジェクトは、以下のメソッドをサポートしています。</p>
<ul>
    <li><code>.MaxIndex(n)</code>: Returns the upper bound of the <i>n</i>th dimension. <i>n</i>が省略された場合、デフォルトは 1 です。</li>
    <li><code>.MinIndex(n)</code>: Returns the lower bound of the <i>n</i>th dimension. <i>n</i>が省略された場合、デフォルトは 1 です。</li>
    <li><code>.Clone()</code>: Returns a copy of the array.</li>
    <li><code>.__Enum()</code>: Not typically called by script; allows <a href="For.htm">for-loops</a> to be used with SafeArrays.</li>
</ul>
<p>これらは現在ハードコードされており、プロパティとして存在せず、<code>ComObjArray.Prototype</code>の修正によって影響を受けることはありません。</p>

<h2 id="Remarks">備考</h2>
<p>ComObjArrayオブジェクトは、COMメソッドや<a href="ComValue.htm">ComValue</a>によって返されることもある。スクリプトは、以下のように値がComObjArrayであるかどうかを判断することができる。</p>
<pre><em>; Check class</em>
if obj is ComObjArray
    MsgBox "Array subtype: " . ComObjType(obj) &amp; 0xfff
else
    MsgBox "Not an array."

<em>; Check for VT_ARRAY</em>
if ComObjType(obj) &amp; 0x2000
    MsgBox "obj is a ComObjArray"

<em>; Check specific array type</em>
if ComObjType(obj) = 0x2008
    MsgBox "obj is a ComObjArray of strings"</pre>
<p>最大8次元までの配列に対応しています。</p>
<p>SafeArrayは複数参照に対応していないため、あるSafeArrayを別のSafeArrayの要素に割り当てると、別のコピーが作成されます。ただし、これはラッパーオブジェクトがF_OWNVALUEフラグを持ち、そのフラグが配列を破壊する責任があることを示している場合にのみ発生します。このフラグは、<a href="ComObjFlags.htm">ComObjFlags</a>を使用することで削除することができます。</p>
<p>COMクライアントから呼び出された関数やメソッドがF_OWNVALUEフラグを持つSafeArrayを返す場合、元のSafeArrayは自動的に破棄されるため、代わりにコピーが作成されて返されます。</p>

<h2 id="Related">関連</h2>
<p><a href="ComValue.htm">ComValue</a>, <a href="ComObjType.htm">ComObjType</a>, <a href="ComObjValue.htm">ComObjValue</a>, <a href="ComObjActive.htm">ComObjActive</a>, <a href="ComObjFlags.htm">ComObjFlags</a>, <a href="https://learn.microsoft.com/previous-versions/windows/desktop/automat/array-manipulation-functions">Array Manipulation Functions (Microsoft Docs)</a></p>

<h2 id="Examples">例</h2>
<div class="ex" id="ExBasic">
<p><a class="ex_number" href="#ExBasic"></a> シンプルな使い方です。</p>
<pre>arr := ComObjArray(VT_VARIANT:=12, 3)
arr[0] := "Auto"
arr[1] := "Hot"
arr[2] := "key"
t := ""
Loop arr.MaxIndex() + 1
    t .= arr[A_Index-1]
MsgBox t
</pre>
</div>

<div class="ex" id="ExMultiDims">
<p><a class="ex_number" href="#ExMultiDims"></a> 多次元です。</p>
<pre>arr := ComObjArray(VT_VARIANT:=12, 3, 4)

<em>; Get the number of dimensions:</em>
dim := DllCall("oleaut32\SafeArrayGetDim", "ptr", ComObjValue(arr))

<em>; Get the bounds of each dimension:</em>
dims := ""
Loop dim
    dims .= arr.MinIndex(A_Index) " .. " arr.MaxIndex(A_Index) "`n"
MsgBox dims

<em>; Simple usage:</em>
Loop 3 {
    x := A_Index-1
    Loop 4 {
        y := A_Index-1
        arr[x, y] := x * y
    }
}
MsgBox arr[2, 3]
</pre>
</div>

</body>
</html>
