<!DOCTYPE HTML>
<html lang="ja">
<head>
<title>Loop Files - 構文と使用法｜AutoHotkey v2</title>
<meta name="description" content="Loop Filesステートメントは、指定されたファイルまたはフォルダを1つずつ取得します。" />
<meta name="ahk:equiv-v1" content="lib/LoopFile.htm" />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>Loop Files</h1>
<p>指定したファイルやフォルダを1つずつ取得します。</p>

<pre class="Syntax"><span class="func">Loop Files</span> FilePattern <span class="optional">, Mode</span></pre>

<h2 id="Parameters">パラメータ</h2>
<dl>

  <dt>FilePattern</dt>
  <dd>
      <p>型：<a href="../Concepts.htm#strings">文字列</a></p>
      <p>単一のファイルまたはフォルダの名前、または<code>"C:\Temp\*.tmp"</code>のようなワイルドカードパターンです。<em>FilePattern</em>は、絶対パスが指定されない場合、<a href="../Variables.htm#WorkingDir">A_WorkingDir</a>にあるとみなされます。</p>
      <p>ワイルドカードとして、アスタリスクとクエスチョンマークの両方がサポートされています。ファイルのロング/ノーマル名または<a href="#LoopFileShortName">8.3ショート名の</a>いずれかにパターンがある場合、一致することになります。</p>
      <p>このパラメータが単一のファイルまたはフォルダ（すなわちワイルドカードなし）で、<em>Mode</em>にRが含まれる場合、指定されたファイル名が検索対象の複数のフォルダに現れると、複数の一致が検出されます。</p>
      <p>259文字以上のパターンは、<a href="../misc/LongPaths.htm">システムの制限（MAX_PATH）</a>により、ファイルの検索に失敗する場合があります。この制限は、いくつかの条件を満たした上で、<code>\\?\</code> <a href="../misc/LongPaths.htm#prefix">ロングパスプリフィクスを</a>使用することで回避することができます。</p>
  </dd>

  <dt>Mode</dt>
  <dd>
    <p>型：<a href="../Concepts.htm#strings">文字列</a></p>
    <p>空白または省略された場合、ファイルのみが含まれ、サブディレクトリは再帰されません。それ以外の場合は、以下の文字を1つ以上指定してください：</p>
    <ul>
      <li>D = インクルードディレクトリ（フォルダ）。</li>
      <li>F = インクルードファイル。FとDの両方が省略された場合、ファイルは含まれるがフォルダーは含まれません。</li>
      <li>R = サブディレクトリ（サブフォルダ）に再帰します。<em>FilePattern</em>に一致する名前のサブフォルダだけでなく、すべてのサブフォルダに再帰的にアクセスします。Rが省略された場合、サブフォルダー内のファイルやフォルダーは含まれません。</li>
    </ul>
  </dd>

</dl>

<h2 id="Special_Variables">Special Variables Available Inside a File Loop</h2>
<p>The following variables exist within any file loop. If an inner file loop is enclosed by an outer file loop, the innermost loop's file will take precedence:</p>
<table class="info">
  <tr>
    <th abbr="Var">変数</th>
    <th abbr="説明">説明</th>
  </tr>
  <tr id="LoopFileName">
    <td>A_LoopFileName</td>
    <td>現在取得されているファイルまたはフォルダの名前（パスなし）です。</td>
  </tr>
  <tr id="LoopFileExt">
    <td>A_LoopFileExt</td>
    <td>ファイルの拡張子（例：TXT、DOC、EXE）。ピリオド（.）は含まれません。</td>
  </tr>
  <tr id="LoopFilePath">
    <td>A_LoopFilePath</td>
    <td>現在取得しているファイル/フォルダのパスと名前。<em>FilePattern</em>に絶対パスではなく相対パスが含まれている場合、ここでのパスも相対パスとなります。また、<em>FilePattern</em>で短い（8.3）フォルダ名は、そのまま短くなります（長いバージョンを取得するには、次の項目を参照してください）。</td>
  </tr>
  <tr id="LoopFileFullPath">
    <td>A_LoopFileFullPath</td>
    <td>A_LoopFilePathとは、以下の点で異なります：1)<em>FilePattern</em>に相対パスが含まれていても、常にファイルの絶対パス/完全パスを含む。 2)<em>FilePattern</em>自体に含まれる短い（8.3）フォルダ名は、その長い名前に変換される。 3)<em>FilePattern</em>内の文字は、ファイルシステムに保存されているケースに合わせて大文字または小文字に変換される。コマンドラインパラメーターとしてスクリプトに渡されたファイル名などを、エクスプローラで表示される正確なパス名に変換するのに便利です。</td>
  </tr>
  <tr id="LoopFileShortPath">
    <td>A_LoopFileShortPath</td>
    <td><p>現在検索しているファイル／フォルダの 8.3 ショートパスと名前。事例：C:\MYDOCU~1\ADDRES~1.txt. <em>FilePattern</em>に絶対パスではなく相対パスが含まれている場合、ここでのパスも相対パスとなります。</p>
      <p>To retrieve the complete 8.3 path and name for a single file or folder, follow this example:</p>
<pre>Loop Files, "C:\My Documents\Address List.txt"
    ShortPathName := A_LoopFileShortPath</pre>
        <p class="note"><strong>Note:</strong> This variable will be <u>blank</u> if the file does not have a short name, which can happen on systems where NtfsDisable8dot3NameCreation has been set in the registry. また、<em>FilePattern</em>に相対パスが含まれていて、ループの本体が<a href="SetWorkingDir.htm">SetWorkingDir</a>を使用してループ自体の有効な作業ディレクトリから切り離す場合は空白となります。</p></td>
  </tr>
  <tr id="LoopFileShortName">
    <td>A_LoopFileShortName</td>
    <td>The 8.3 short name or alternate name of the file. ファイルに名前がない場合（長い名前が8.3より短いか、NTFSファイルシステムで短縮名の生成が無効になっているため）、代わりに<em>A_LoopFileName</em>が取得されます。</td>
  </tr>
  <tr id="LoopFileDir">
    <td>A_LoopFileDir</td>
    <td><em>A_LoopFileName</em>が存在するディレクトリのパス。<em>FilePattern</em>に絶対パスではなく相対パスが含まれている場合、ここでのパスも相対パスとなります。ルートディレクトリには、末尾のバックスラッシュは含まれません。事例：C:</td>
  </tr>
  <tr id="LoopFileTimeModified">
    <td>A_LoopFileTimeModified</td>
    <td>ファイルが最後に更新された時刻。Format <a href="FileSetTime.htm">YYYYMMDDHH24MISS</a>.</td>
  </tr>
  <tr id="LoopFileTimeCreated">
    <td>A_LoopFileTimeCreated</td>
    <td>ファイルが作成された時刻です。Format <a href="FileSetTime.htm">YYYYMMDDHH24MISS</a>.</td>
  </tr>
  <tr id="LoopFileTimeAccessed">
    <td>A_LoopFileTimeAccessed</td>
    <td>ファイルが最後にアクセスされた時刻です。Format <a href="FileSetTime.htm">YYYYMMDDHH24MISS</a>.</td>
  </tr>
  <tr id="LoopFileAttrib">
    <td>A_LoopFileAttrib</td>
    <td>現在検索しているファイルの<a href="FileGetAttrib.htm">属性</a>。</td>
  </tr>
  <tr id="LoopFileSize">
    <td>A_LoopFileSize</td>
    <td>現在取得中のファイルのサイズ（バイト数）です。4ギガバイトを超えるファイルにも対応しています。</td>
  </tr>
  <tr id="LoopFileSizeKB">
    <td>A_LoopFileSizeKB</td>
    <td>現在取得中のファイルのサイズ（Kbyte）を、最も近い整数に切り捨てたもの。</td>
  </tr>
  <tr id="LoopFileSizeMB">
    <td>A_LoopFileSizeMB</td>
    <td>現在取得中のファイルのサイズ（Mbyte）。小数点以下は切り捨てます。</td>
  </tr>
</table>

<h2 id="Remarks">備考</h2>
<p>A file loop is useful when you want to operate on a collection of files and/or folders, one at a time.</p>
<p>隠しファイルを含め、一致するすべてのファイルを取得します。これに対し、DIRコマンドなどのOSの機能は、デフォルトで隠しファイルを省略します。隠しファイル、システムファイル、読み取り専用ファイルの処理を避けるために、ループ内で以下のように使用します：</p>
<pre>if A_LoopFileAttrib ~= "[HRS]"  <em>; H (Hidden), R (Read-only), S (System) のいずれかに該当するファイルをスキップします。<a href="../Variables.htm#regex">~= operator</a>を参照。</em>
    continue  <em>; このファイルをスキップして、次のファイルに移る。</em></pre>
<p>To retrieve files' relative paths instead of absolute paths during a recursive search, use <a href="SetWorkingDir.htm">SetWorkingDir</a> to change to the base folder prior to the loop, and then omit the path from the loop (e.g. <code>Loop Files, "*.*", "R"</code>). これにより、<a href="#LoopFilePath">A_LoopFilePath</a>には、ベースフォルダからの相対的なファイルのパスが含まれることになります。</p>
<p>A file loop can disrupt itself if it creates or renames files or folders within its own purview. 例えば、<a href="FileMove.htm">FileMove</a>などでファイル名を変更した場合、そのようなファイルが2回見つかる可能性があります：旧名称ならば、新名称とします。これを回避するには、ファイルのリストを作成した後にのみファイル名を変更します。事例：</p>
<pre>FileList := ""
Loop Files, "*.jpg"
    FileList .= A_LoopFileName "`n"
Loop Parse, FileList, "`n"
    FileMove A_LoopField, "renamed_" A_LoopField</pre>
<p>NTFSファイルシステム内のファイルは、おそらく常にアルファベット順に検索されます。他のファイルシステムのファイルは、順不同で検索されます。特定の順序を確保するためには、以下の「例」のように<a href="Sort.htm">ソート</a>機能を使用します。</p>
<p>259文字より長いファイルパターンは、以下のうち少なくとも1つが成立している場合にのみサポートされます：</p>
<ul>
  <li><a href="../misc/LongPaths.htm">ロングパスサポート</a>が有効になっている（Windows 10 バージョン1607以降が必要）。</li>
  <li><code>\\?\</code> <a href="../misc/LongPaths.htm#prefix">ロングパスプリフィックス</a>を使用します（注意事項あり）。</li>
</ul>
<p>それ以外の場合、259文字より長いファイルパターンは、ファイルやフォルダーを見つけることができません。この制限は、<em>FilePattern</em>と、サブフォルダへの再帰中に使用される一時的なパターンの両方に適用されます。</p>
<p id="otb">オプションで、オープンブレースを下ではなく同じラインに表示させるOTB（One True Brace）スタイルを採用することも可能です。事例：<code>Loop Files "*.txt", "R" {</code>.</p>
<p><a href="Block.htm">Blocks</a>、<a href="Break.htm">Break</a>、<a href="Continue.htm">Continue</a>、A_Index変数（どのタイプのループにも存在する）については、「<a href="Loop.htm">Loop</a>」をご覧ください。</p>
<p>ループの後に<a href="Else.htm">Else</a>文が続くことがありますが、これは一致するファイルやディレクトリが見つからなかった場合に実行されます（つまり、ループの反復回数がゼロの場合）。</p>
<p>The functions <a href="FileGetAttrib.htm">FileGetAttrib</a>, <a href="FileGetSize.htm">FileGetSize</a>, <a href="FileGetTime.htm">FileGetTime</a>, <a href="FileGetVersion.htm">FileGetVersion</a>, <a href="FileSetAttrib.htm">FileSetAttrib</a>, and <a href="FileSetTime.htm">FileSetTime</a> can be used in a file loop without their Filename/FilePattern parameter.</p>

<h2 id="Related">関連</h2>
<p><a href="Loop.htm">Loop</a>, <a href="Break.htm">Break</a>, <a href="Continue.htm">Continue</a>, <a href="Block.htm">Blocks</a>, <a href="SplitPath.htm">SplitPath</a>, <a href="FileSetAttrib.htm">FileSetAttrib</a>, <a href="FileSetTime.htm">FileSetTime</a></p>

<h2 id="Examples">例</h2>
<div class="ex" id="ExBasic">
<p><a class="ex_number" href="#ExBasic"></a> ディレクトリとそのサブディレクトリにある各テキストファイルのフルパスを表示します。</p>
<pre>Loop Files, A_ProgramFiles "\*.txt", "R"  <em>; サブフォルダへの再検索。</em>
{
    Result := MsgBox("Filename = " A_LoopFilePath "`n`nContinue?",, "y/n")
    if Result = "No"
        break
}</pre>
</div>

<div class="ex" id="ExSize">
<p><a class="ex_number" href="#ExSize"></a> フォルダーのサイズを、そのすべてのサブフォルダー内のファイルを含めて計算します。</p>
<pre>FolderSizeKB := 0
WhichFolder := DirSelect()  <em>; フォルダーを選んでもらいます。</em>
Loop Files, WhichFolder "\*.*", "R"
    FolderSizeKB += A_LoopFileSizeKB
MsgBox "Size of " WhichFolder " is " FolderSizeKB " KB."</pre>
</div>

<div class="ex" id="ExSortName">
<p><a class="ex_number" href="#ExSortName"></a> ファイル名を名前でソートして取得します（日付でソートする場合は次の例を参照してください）。</p>
<pre>FileList := ""  <em>;空白になるように初期化します。</em>
Loop Files, "C:\*.*"
    FileList .= A_LoopFileName "`n"
FileList := Sort(FileList, "R")  <em>; Rオプションは逆順にソートします。他のオプションは<a href="Sort.htm">Sort</a>を参照。</em>
Loop Parse, FileList, "`n"
{
    if A_LoopField = ""  <em>;リスト末尾の空白項目は無視します。</em>。
        continue
    Result := MsgBox("File number " A_Index " is " A_LoopField ".  Continue?",, "y/n")
    if Result = "No"
        break
}</pre>
</div>

<div class="ex" id="ExSortDate">
<p><a class="ex_number" href="#ExSortDate"></a> ファイル名を更新日順に並べたものを取得します。</p>
<pre>FileList := ""
Loop Files, A_MyDocuments "\Photos\*.*", "FD"  <em>; Include Files and Directories</em>
    FileList .= A_LoopFileTimeModified "`t" A_LoopFileName "`n"
FileList := Sort(FileList)  <em>; Sort by date.</em>
Loop Parse, FileList, "`n"
{
    if A_LoopField = "" <em>; リスト末尾のラインフィード（空白項目）を省略します。</em>
        continue
    FileItem := StrSplit(A_LoopField, A_Tab)  <em>; タブ文字で2つに分割します。</em>
    Result := MsgBox("The next file (modified at " FileItem[1] ") is:`n" FileItem[2] "`n`nContinue?",, "y/n")
    if Result = "No"
        break
}</pre>
</div>

<div class="ex" id="ExFileCopy">
<p><a class="ex_number" href="#ExFileCopy"></a> コピー先のファイルより新しいソースファイルのみをコピーします。この関数は、"A:\Scripts\*.ahk"のようなソースパターンと"B:\Script Backup"のような<strong>既存</strong>の保存先ディレクトリを指定して呼び出します。</p>
<pre>CopyIfNewer(SourcePattern, Dest)
{
    Loop Files, SourcePattern
    {
        copy_it := false
        if !FileExist(Dest "\" A_LoopFileName)  <em>; 対象ファイルがまだ存在しない場合は常にコピーします。</em>
            copy_it := true
        else
        {
            time := FileGetTime(Dest "\" A_LoopFileName)
            time := DateDiff(time, A_LoopFileTimeModified, "Seconds")  <em>; 送信元ファイルの時刻と送信先ファイルの時刻を引き算します。</em>
            if time &lt; 0  <em>;ソースファイルはデスティネーションファイルより新しい</em>。
                copy_it := true
        }
        if copy_it
        {
            try
                FileCopy A_LoopFilePath, Dest "\" A_LoopFileName, 1   <em>;上書きコピー(Yes)</em>
            catch
                MsgBox 'Could not copy "' A_LoopFilePath '" to "' Dest '\' A_LoopFileName '".'
        }
    }
}</pre>
</div>

<div class="ex" id="ExLongPath">
<p><a class="ex_number" href="#ExLongPath"></a> コマンドラインパラメーターで渡されたファイル名を、ファイルシステムに格納されているような長い名前、完全なパス、正しい大文字/小文字に変換します。</p>
<pre>for GivenPath in A_Args  <em>; 各パラメータ（またはスクリプトにドロップしたファイル）に対して：</em>
{
    Loop Files, GivenPath, "FD"  <em>;ファイルやディレクトリをインクルードします。</em>
        LongPath := A_LoopFilePath
    MsgBox "The case-corrected long path name of file`n" GivenPath "`nis:`n" LongPath
}</pre>
</div>

</body>
</html>
