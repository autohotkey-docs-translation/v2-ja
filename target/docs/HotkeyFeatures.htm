<!DOCTYPE HTML>
<html lang="ja">
<head>
<title>高度なホットキー機能｜AutoHotkey v2</title>
<meta name="description" content="任意のキーをモディファイアとして使用したり、画面上でゲームのアクションを自動化するなど、高度なホットキー機能を学ぶことができます。" />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="static/theme.css" rel="stylesheet" type="text/css" />
<script src="static/content.js" type="text/javascript"></script>
</head>

<body>
<h1>高度なホットキー機能</h1>


<h2 id="toc">目次</h2>
<ul>
  <li><a href="#general">一般</a>
    <ul>
      <li><a href="#easy-to-reach">手の届きやすい、でもあまり使わないキーをリマップ</a></li>
      <li><a href="#keys-as-modifiers">任意のキーをモディファイアとして使用する</a></li>
      <li><a href="#AltTab">マウスホイールでalt-tabbingを行うようにする</a></li>
      <li><a href="#keyboard-to-mouse">キーボードのキーをマウスのボタンにする</a></li>
      <li><a href="#context-sensitive">ホットキーに文脈依存性を持たせる</a></li>
      <li><a href="#hotstrings">入力すると展開される略語の定義</a></li>
    </ul>
  </li>
  <li><a href="#gaming">ゲーミング</a>
    <ul>
      <li><a href="#wear-and-tear">指の摩耗を軽減する</a></li>
      <li><a href="#mouse-hotkeys">マウスのホットキーの作成</a></li>
      <li><a href="#pass-through">「パススルー」ホットキーの作成</a></li>
      <li><a href="#game-actions">画面上でゲームの動作を自動化する</a></li>
      <li><a href="#keyboard-hook">キーボードフックを使用する</a></li>
    </ul>
  </li>
  <li><a href="#related">関連する話題</a></li>
</ul>

<h2 id="general">一般</h2>

<h3 id="easy-to-reach">手の届きやすい、でもあまり使わないキーをリマップ</h3>
<p>キーボードで最も届きやすいキーは、最も使用頻度の低いキーでもあります。このキーに便利な機能を持たせてください例えば、右の<kbd>Alt</kbd>をほとんど使わないのであれば、一番よく使う動作をさせる。</p>
<pre>RAlt::MsgBox "You pressed the right ALT key."</pre>
<p>右<kbd>Alt</kbd>を少なくとも1つの他のホットキーの「接頭辞」に割り当てることで、右<kbd>Alt</kbd>の本来の機能を失わずに上記のことを行うことも可能です。下の例では、右の<kbd>Alt</kbd>がプレフィックスになり、自動的に他の<strong>すべて</strong>のキーを通常と同じように変更できるようになりました。しかし、他のキーの変更に使用せずに右<kbd>Alt</kbd>を押して離すと、そのホットキーの動作（上記）が直ちに有効になります。</p>
<pre>RAlt &amp; j::AltTab</pre>

<h3 id="keys-as-modifiers">任意のキーをモディファイアとして使用する</h3>
<p><kbd>Ctrl</kbd>、<kbd>Alt</kbd>、<kbd>Shift</kbd>、<kbd>Win</kbd>の4つのキーだけで<strong>なく</strong>、2つのキーやマウスのボタンを組み合わせて、カスタムホットキーを作成することができます。例えば：Numpad0を押しながらNumpad1を押すとホットキーが起動し<code>（Numpad0 &amp; Numpad1::）</code>、<kbd>CapsLockを</kbd>押しながら他のキーを押すか、マウスボタンをクリックする<code>（CapsLock &amp; RButton::）</code>．この場合、ホットキーの起動に使用されても、<kbd>CapsLock</kbd>の状態（オンまたはオフ）は変更されません。詳しくは、<a href="Hotkeys.htm#combo">キーのカスタムコンビネーション</a>をご覧ください。</p>

<h3 id="AltTab">マウスホイールでalt-tabbingを行うようにする</h3>
<p>マウスホイール（または他の任意のキー）をAlt-Tabの完全な代用品に変換します。ホイールをクリックするとメニューの表示／非表示が切り替わり、回すとメニューの移動ができます。Alt-Tabメニューが表示されていない場合でも、ホイールは正常に機能します。構文:</p>
<pre>MButton::AltTabMenu
WheelDown::AltTab
WheelUp::ShiftAltTab</pre>

<h3 id="keyboard-to-mouse">キーボードのキーをマウスのボタンにする</h3>
<p>キーボードの<strong>キー</strong>がマウスのボタンになったり、キーやマウスのボタンを押している間、動作が連続的に繰り返されるようにします。例については、<a href="misc/Remap.htm#RemapMouse">リマッピングページ</a>をご覧ください。</p>

<h3 id="context-sensitive">ホットキーに文脈依存性を持たせる</h3>
<p>作業中のウィンドウの種類に応じたアクションを、最も簡単にアクセスできるホットキーで実行できるようにします。次の例では、右<kbd>Ctrl</kbd>は、メモ帳と電卓のどちらがアクティブなウィンドウであるかによって、異なる動作をします。</p>
<pre>#HotIf WinActive("ahk_class Notepad")
RControl::Send "^s"  <em>; 現在のファイルをメモ帳に保存します。</em>

#HotIf WinActive("Calculator")
RControl::Send "^c!{tab}^v"  <em>; 電卓で計算した結果を、それまでアクティブだったウィンドウにコピーします。</em></pre>
<p>詳しくは「<a href="lib/_HotIf.htm">#HotIf</a>」をご覧ください。</p>

<h3 id="hotstrings">入力すると展開される略語の定義</h3>
<p><a href="Hotstrings.htm">ホットストリングス</a>とも呼ばれる。特別なトレーニングやスクリプトの経験は必要ありません。例えば、以下の行を含むスクリプトは、ceo、cfo、btwをどこに入力しても展開します。</p>
<pre>::ceo::Chief Executive Officer
::cfo::Chief Financial Officer
::btw::by the way</pre>

<h2 id="gaming">ゲーミング</h2>

<h3 id="wear-and-tear">指の摩耗を軽減する</h3>
<p>アルファベット1文字、矢印キー、テンキー、修飾キー（Ctrl、Alt、Win、Shift）など、ほぼ<a href="KeyList.htm">すべてのキー</a>をホットキーとして使用できるため、指の消耗を抑えることができます。</p>

<h3 id="mouse-hotkeys">マウスのホットキーの作成</h3>
<p>マウスのホイールボタン（MButton）、ホイールの上下左右の回転（WheelUp, WheelDown, WheelLeft, WheelRight）など、マウスのホットキーを作成します。また、キーボードのキーとマウスのボタンを組み合わせることもできます。例えば、control-right-buttonは、<code>^RButton::</code>と表現されます。</p>

<h3 id="pass-through">「パススルー」ホットキーの作成</h3>
<p>例えば、マウスの左ボタンをクリックすると、クリックそのものが普通にゲームに送られていても、ホットキーアクションをトリガーすることができます（シンタックス:<code>~LButton::</code>).</p>

<h3 id="game-actions">画面上でゲームの動作を自動化する</h3>
<p><a href="lib/PixelSearch.htm">PixelSearch</a>、<a href="lib/PixelGetColor.htm">PixelGetColor</a>、<a href="lib/ImageSearch.htm">ImageSearch</a>などの関数を使用して、ゲームアクションを自動化することができます。</p>

<h3 id="keyboard-hook">キーボードフックを使用する</h3>
<p><a href="lib/_UseHook.htm">キーボードフック</a>を使ってホットキーを実装するオプションがあり、ゲームでCPUに負荷がかかっているときに、他のホットキー方式よりも反応が良くなる可能性があります。また、どのキーをゲームのアクションに「マッピング」するかというゲーム側の制限を、フックで上書きすることもできるかもしれません。</p>

<h2 id="related">関連する話題</h2>
<ul>
  <li><a href="Hotkeys.htm">ホットキー</a></li>
  <li><a href="Hotstrings.htm">ホットストリング</a></li>
  <li><a href="misc/Remap.htm">キーのリマッピング</a></li>
</ul>

</body>
</html>
